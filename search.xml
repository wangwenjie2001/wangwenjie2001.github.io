<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SpringMVC</title>
      <link href="/2022/09/05/SpringMVC/"/>
      <url>/2022/09/05/SpringMVC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Spring MVC属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring 框架提供了构建 <a href="https://baike.baidu.com/item/Web/150564?fromModule=lemma_inlink">Web</a> 应用程序的全功能 MVC 模块。使用 Spring 可插入的 MVC 架构，从而在使用Spring进行WEB开发时，可以选择使用Spring的Spring MVC框架或集成其他MVC开发框架，如Struts1(现在一般不用)，Struts 2(一般老项目使用)等等。</p><h1 id="一、SpringMVC构建"><a href="#一、SpringMVC构建" class="headerlink" title="一、SpringMVC构建"></a>一、SpringMVC构建</h1><h2 id="1-1-前端控制器注册"><a href="#1-1-前端控制器注册" class="headerlink" title="1.1    前端控制器注册"></a>1.1    前端控制器注册</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--前端控制器，对发送请求统一处理，本质是Servlet还需要使用Servlet进行注册--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--配置SpringMVC配置文件的位置和名称，不配置此项SpringMVC配置文件会在WEB-INF下的servlet-name-servlet.xml--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--初始化参数：配置上下文配置文件的路径--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:springMVC.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--将前端控制器的创建时间设置为服务器创建时创建--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--请求的路径：/ 代表除了jsp以外的，因为jsp本质就是一个servlet会当成一个普通servlet请求处理--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--/*  代表包含jsp页面的所有请求--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SpringMVC<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-2-SpringMVC配置文件构建"><a href="#1-2-SpringMVC配置文件构建" class="headerlink" title="1.2    SpringMVC配置文件构建"></a>1.2    SpringMVC配置文件构建</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--SpringMVC的组件扫描--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--使得标有注解的类变成前端控制器所用能控制的--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.wwj.controller&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置Thymeleaf视图解析器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;viewResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;order&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;characterEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateEngine&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateResolver&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">&lt;!-- 视图前缀 --&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--返回的视图加上路径--&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/templates/&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="comment">&lt;!--返回的视图加上后缀--&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!-- 视图后缀 --&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.html&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;templateMode&quot;</span> <span class="attr">value</span>=<span class="string">&quot;HTML5&quot;</span>/&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;characterEncoding&quot;</span> <span class="attr">value</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>视图解析器：在控制层return的时候无需写路径，同时负责modelAndView数据的封装，可以将文件放入WEB-INF目录下就可以防止被访问</strong></p><h2 id="1-3-thymeleaf获取动态前缀"><a href="#1-3-thymeleaf获取动态前缀" class="headerlink" title="1.3    thymeleaf获取动态前缀"></a>1.3    thymeleaf获取动态前缀</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>=<span class="string">&quot;@&#123;/target&#125;&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二、SpringMVC使用"><a href="#二、SpringMVC使用" class="headerlink" title="二、SpringMVC使用"></a>二、SpringMVC使用</h1><h2 id="2-1-SpringMVC工作流程"><a href="#2-1-SpringMVC工作流程" class="headerlink" title="2.1    SpringMVC工作流程"></a>2.1    SpringMVC工作流程</h2><p>1、请求被前端控制器处理DIspatcherServlet</p><p>2、前端控制器读取SpringMVC核心配置文件</p><p>3、通过扫描组件，获取注解</p><p>4、@RequestMapping是注解和请求路径匹配</p><p>5、返回视图名称（被视图解析器解析，加上前缀和后缀组件视图路径）</p><h2 id="2-2-RequestMapping注解"><a href="#2-2-RequestMapping注解" class="headerlink" title="2.2    @RequestMapping注解"></a>2.2    @RequestMapping注解</h2><p><strong>请求映射，可作用在类或方法上</strong></p><p><strong>请求地址唯一</strong></p><hr><p><strong>属性</strong></p><p>value：可以匹配多个请求路径（满足其一就可映射到该方法）</p><p>method：即要满足其余属性，也要满足请求方式</p><p>params：请求参数匹配请求（携带参数，不能携带参数，携带参数为）必须得同时满足</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/target&quot;,</span></span><br><span class="line"><span class="meta">        params = &#123;&quot;username&quot;,&quot;!username&quot;,&quot;username=1&quot;&#125;)</span></span><br></pre></td></tr></table></figure><p>headers：请求头信息匹配，也可使用上述表达式表示</p><hr><p><strong>派生注解</strong></p><p>@GetMapping</p><p>@DeleteMapping</p><p>@PostMapping</p><p>@PutMapping</p><hr><p><strong>模糊匹配</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/a?a&quot;)</span>  <span class="comment">// 匹配任意单个字符 </span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/a*a&quot;)</span> <span class="comment">// 匹配0个或多个字符</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/**/test&quot;)</span>    <span class="comment">//  匹配任意一层或多层目录 </span></span><br></pre></td></tr></table></figure><h2 id="2-2-获取请求参数"><a href="#2-2-获取请求参数" class="headerlink" title="2.2    获取请求参数"></a>2.2    获取请求参数</h2><p><strong>1、通过ServletAPI获取</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(value = &quot;/target&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">toTartget</span><span class="params">(HttpServletRequest request)</span>&#123;</span><br><span class="line">     <span class="type">String</span> <span class="variable">key</span> <span class="operator">=</span> request.getParameter(<span class="string">&quot;key&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2、通过形参获取</strong></p><p><strong>请求参数和形参名相同</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testParam&quot;)</span></span><br><span class="line"><span class="comment">// 保证形参参数名和请求中的名字保持一致就可以传参</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testParam</span><span class="params">(String username,String password)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>获取多个name值，多选框传参</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testParam&quot;)</span></span><br><span class="line"><span class="comment">// 对于name值相同可以使用数组获取也可以使用字符串参数获取（字符串是拼接逗号得到）</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testParam</span><span class="params">(String[] hobby,String hobby2)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>请求参数名和形参不一样使用@RequestParam</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testParam&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(String[] hobby,<span class="meta">@RequestParam(&quot;请求参数名&quot;)</span> String hobby2)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>@RequestParam：请求参数名和形参绑定</strong></p><p>​    属性：defaultValue：请求参数没有数据或为空，可以使用该属性设置默认值</p><p><strong>3、通过实体类获取请求参数</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testParam&quot;)</span></span><br><span class="line"><span class="comment">// 实体类属性和请求参数名一致才能实现封装</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test2</span><span class="params">(User user)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-获取请求头信息"><a href="#2-3-获取请求头信息" class="headerlink" title="2.3    获取请求头信息"></a>2.3    获取请求头信息</h2><p>@RequestHeader</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testParam&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(<span class="meta">@RequestHeader(&quot;Host&quot;)</span> String host)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>required：true表示必要，如果没有则报错</p><p>defaultValue：找不到值，使用默认值</p><h2 id="2-4-获取Cookie数据"><a href="#2-4-获取Cookie数据" class="headerlink" title="2.4    获取Cookie数据"></a>2.4    获取Cookie数据</h2><p>@CookieValue</p><p>属性</p><p>​    required</p><p>​    defaultValue</p><h2 id="2-5-POST请求中文乱码"><a href="#2-5-POST请求中文乱码" class="headerlink" title="2.5    POST请求中文乱码"></a>2.5    POST请求中文乱码</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--filter执行顺序在servlet之前，每次请求时，先经过过滤器再到前端控制器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--设置请求编码，设置给上述类里的成员变量--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--设置响应编码--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceResponseEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--对所有路径进行过滤，包括jsp--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>源码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CharacterEncodingFilter</span> <span class="keyword">extends</span> <span class="title class_">OncePerRequestFilter</span> &#123;</span><br><span class="line">    <span class="meta">@Nullable</span></span><br><span class="line">    <span class="keyword">private</span> String encoding;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> forceRequestEncoding;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> forceResponseEncoding;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doFilterInternal</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">encoding</span> <span class="operator">=</span> <span class="built_in">this</span>.getEncoding();</span><br><span class="line">        <span class="keyword">if</span> (encoding != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.isForceRequestEncoding() || request.getCharacterEncoding() == <span class="literal">null</span>) &#123;</span><br><span class="line">                request.setCharacterEncoding(encoding);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.isForceResponseEncoding()) &#123;</span><br><span class="line">                response.setCharacterEncoding(encoding);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        filterChain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="2-6-域对象共享数据"><a href="#2-6-域对象共享数据" class="headerlink" title="2.6    域对象共享数据"></a>2.6    域对象共享数据</h2><h3 id="2-6-1-servletAPI共享"><a href="#2-6-1-servletAPI共享" class="headerlink" title="2.6.1    servletAPI共享"></a>2.6.1    servletAPI共享</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/target&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(HttpServletRequest request)</span>&#123;</span><br><span class="line">    request.setAttribute(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-2-ModelAndView共享"><a href="#2-6-2-ModelAndView共享" class="headerlink" title="2.6.2    ModelAndView共享"></a>2.6.2    ModelAndView共享</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/target&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ModelAndView <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">ModelAndView</span> <span class="variable">modelAndView</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>();</span><br><span class="line">    <span class="comment">// 向请求域共享数据</span></span><br><span class="line">    modelAndView.addObject(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;model&quot;</span>);</span><br><span class="line">    <span class="comment">// 设置转发的视图名称</span></span><br><span class="line">    modelAndView.setViewName(<span class="string">&quot;target&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> modelAndView;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-3-Model共享数据"><a href="#2-6-3-Model共享数据" class="headerlink" title="2.6.3    Model共享数据"></a>2.6.3    Model共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/target&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(Model model)</span>&#123;</span><br><span class="line">        <span class="comment">// 设置共享数据</span></span><br><span class="line">        model.addAttribute(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;牛&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-4-Map集合共享数据"><a href="#2-6-4-Map集合共享数据" class="headerlink" title="2.6.4    Map集合共享数据"></a>2.6.4    Map集合共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@RequestMapping(&quot;/target&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(Map&lt;String, Object&gt; map)</span> &#123;</span><br><span class="line">        <span class="comment">// 设置共享数据</span></span><br><span class="line">        map.put(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;mapmapmpam&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-5-ModelMap共享数据"><a href="#2-6-5-ModelMap共享数据" class="headerlink" title="2.6.5    ModelMap共享数据"></a>2.6.5    ModelMap共享数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@RequestMapping(&quot;/target&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(ModelMap modelMap)</span> &#123;</span><br><span class="line">        <span class="comment">// 设置共享数据</span></span><br><span class="line">        modelMap.addAttribute(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;modelmap&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-6-Model、ModelMap、ModelAndView关联"><a href="#2-6-6-Model、ModelMap、ModelAndView关联" class="headerlink" title="2.6.6    Model、ModelMap、ModelAndView关联"></a>2.6.6    Model、ModelMap、ModelAndView关联</h3><p>都使用了BindingAwareModelMap对象</p><p>无论是什么方式，最终数据还是会放在modelAndView中</p><h3 id="2-6-7-session共享数据"><a href="#2-6-7-session共享数据" class="headerlink" title="2.6.7    session共享数据"></a>2.6.7    session共享数据</h3><p>原生：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/target&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(HttpSession session)</span> &#123;</span><br><span class="line">    <span class="comment">// 设置共享数据</span></span><br><span class="line">    session.setAttribute(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;session&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-8-application共享数据（ServletContext域）"><a href="#2-6-8-application共享数据（ServletContext域）" class="headerlink" title="2.6.8    application共享数据（ServletContext域）"></a>2.6.8    application共享数据（ServletContext域）</h3><p>生命周期：服务器的启动到销毁</p><p>原生：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/target&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(HttpSession session)</span> &#123;</span><br><span class="line">    <span class="comment">// 设置共享数据</span></span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">application</span> <span class="operator">=</span> session.getServletContext();</span><br><span class="line">    application.setAttribute(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;application&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-8-视图View"><a href="#2-8-视图View" class="headerlink" title="2.8    视图View"></a>2.8    视图View</h2><p>仅使用return转发，因为视图解析器是thymeleaf的，会转换成thymeleafView。被视图解析器解析</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;   <span class="comment">// 被视图解析器解析</span></span><br></pre></td></tr></table></figure><p>使用forward：转发会转换成 InternalResourceView（<strong>对于访问RequestMapping的其他方法的时候</strong>）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/target&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(HttpSession session)</span> &#123;</span><br><span class="line">    <span class="comment">// 设置共享数据</span></span><br><span class="line">    session.setAttribute(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;session&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;forward:/target&quot;</span>;  <span class="comment">// 转发到另外一个RequestMapping必须使用forward</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用Redirect：转发会转换成RedirectView</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="string">&quot;redirect:/target&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="2-9-视图控制器"><a href="#2-9-视图控制器" class="headerlink" title="2.9    视图控制器"></a>2.9    视图控制器</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:view-controller</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span> <span class="attr">view-name</span>=<span class="string">&quot;视图名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:view-controller</span>&gt;</span></span><br><span class="line">请求地址、视图名称（可以配置被视图解析器能够解析的名称）</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;mvc:view-controller path=<span class="string">&quot;/&quot;</span> view-name=<span class="string">&quot;视图名&quot;</span>&gt;&lt;/mvc:view-controller&gt;</span><br><span class="line">&lt;!--开启注解驱动--&gt;</span><br><span class="line">&lt;mvc:annotation-driven&gt;&lt;/mvc:annotation-driven&gt;</span><br></pre></td></tr></table></figure><p><strong>开启视图控制器，不能实现页面的跳转，一定要配置注解驱动</strong></p><h2 id="2-10-JSP视图解析器"><a href="#2-10-JSP视图解析器" class="headerlink" title="2.10    JSP视图解析器"></a>2.10    JSP视图解析器</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;prefix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;/WEB-INF/templates/&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suffix&quot;</span> <span class="attr">value</span>=<span class="string">&quot;.jsp&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JSP的跳转转发可以不用加forward前缀</p><h1 id="三、Restful"><a href="#三、Restful" class="headerlink" title="三、Restful"></a>三、Restful</h1><h2 id="3-1-模拟PUT、DELETE请求"><a href="#3-1-模拟PUT、DELETE请求" class="headerlink" title="3.1    模拟PUT、DELETE请求"></a>3.1    模拟PUT、DELETE请求</h2><p>根据源码，<strong>是通过获取_method属性使用过滤器更换方法</strong></p><p><img src="C:/Users/wwj/AppData/Roaming/Typora/draftsRecover/SpringMVC/image-20220511185305640.png" alt="image-20220511185305640"></p><p>必须写一个隐藏域</p><h2 id="3-2-过滤器配置顺序"><a href="#3-2-过滤器配置顺序" class="headerlink" title="3.2    过滤器配置顺序"></a>3.2    过滤器配置顺序</h2><p><strong>设置编码的过滤器一定需要第一个获取请求参数，不然无效</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--filter执行顺序在servlet之前，每次请求时，先经过过滤器再到前端控制器--&gt;</span><br><span class="line">&lt;filter&gt;</span><br><span class="line">  &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</span><br><span class="line">  &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;</span><br><span class="line">  &lt;!--设置请求编码，设置给上述类里的成员变量--&gt;</span><br><span class="line">  &lt;init-param&gt;</span><br><span class="line">    &lt;param-name&gt;encoding&lt;/param-name&gt;</span><br><span class="line">    &lt;param-value&gt;UTF-<span class="number">8</span>&lt;/param-value&gt;</span><br><span class="line">  &lt;/init-param&gt;</span><br><span class="line">  &lt;!--设置响应编码--&gt;</span><br><span class="line">  &lt;init-param&gt;</span><br><span class="line">    &lt;param-name&gt;forceResponseEncoding&lt;/param-name&gt;</span><br><span class="line">    &lt;param-value&gt;<span class="literal">true</span>&lt;/param-value&gt;</span><br><span class="line">  &lt;/init-param&gt;</span><br><span class="line">&lt;/filter&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--模拟请求过滤器--&gt;</span><br><span class="line">&lt;filter&gt;</span><br><span class="line">  &lt;filter-name&gt;HiddenHttpMethodFilter&lt;/filter-name&gt;</span><br><span class="line">  &lt;filter-class&gt;org.springframework.web.filter.HiddenHttpMethodFilter&lt;/filter-class&gt;</span><br><span class="line">&lt;/filter&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!--对所有路径进行过滤，包括jsp--&gt;</span><br><span class="line">&lt;filter-mapping&gt;</span><br><span class="line">  &lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</span><br><span class="line">  &lt;url-pattern&gt;<span class="comment">/*&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment">&lt;/filter-mapping&gt;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;filter-mapping&gt;</span></span><br><span class="line"><span class="comment">  &lt;filter-name&gt;HiddenHttpMethodFilter&lt;/filter-name&gt;</span></span><br><span class="line"><span class="comment">  &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span></span><br><span class="line"><span class="comment">&lt;/filter-mapping&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-3-静态资源的放行"><a href="#3-3-静态资源的放行" class="headerlink" title="3.3    静态资源的放行"></a>3.3    静态资源的放行</h2><p><strong>问题：浏览器请求某个静态资源时会先请求前端控制器，如果前端控制器找不到相对应的方法就报错，就可以配置前端控制器找不到时默认使用servlet处理请求，就可以找到资源，如果servlet找不到依然会报错</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--静态资源放行--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--先交由前端控制器处理，如果没有就交给servlet找资源--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:default-servlet-handler</span>/&gt;</span></span><br><span class="line">还需要配置注解驱动</span><br></pre></td></tr></table></figure><p><strong>servlet：默认会处理静态资源</strong></p><p><strong>前端控制器：只能去Controller注解类找对应的映射方法</strong></p><h1 id="四、报文信息转换器"><a href="#四、报文信息转换器" class="headerlink" title="四、报文信息转换器"></a>四、报文信息转换器</h1><h2 id="4-1-RequestBody请求体"><a href="#4-1-RequestBody请求体" class="headerlink" title="4.1    @RequestBody请求体"></a>4.1    @RequestBody请求体</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/target&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(<span class="meta">@RequestBody</span> String requestBody)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取请求的响应体数据</p><h2 id="4-2-RequestEntity请求实体"><a href="#4-2-RequestEntity请求实体" class="headerlink" title="4.2    RequestEntity请求实体"></a>4.2    RequestEntity请求实体</h2><p>获取请求的所有内容，可以使用RequestEntity实体获取请求头、请求体等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/target&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test</span><span class="params">(RequestEntity&lt;String&gt; requestEntity)</span> &#123;</span><br><span class="line">    requestEntity.getHeaders(); </span><br><span class="line">    requestEntity.getMethod();</span><br><span class="line">    requestEntity.getType();</span><br><span class="line">    requestEntity.getUrl();</span><br><span class="line">    requestEntity.getBody();</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;target&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3-ResponseBody响应体"><a href="#4-3-ResponseBody响应体" class="headerlink" title="4.3    @ResponseBody响应体"></a>4.3    @ResponseBody响应体</h2><p>返回给浏览器数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/target&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;响应给浏览器的数据&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>要使得该注解返回JSON数据需要加上依赖（开启注解驱动）</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.13.2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-4-RestController"><a href="#4-4-RestController" class="headerlink" title="4.4    @RestController"></a>4.4    @RestController</h2><p>@Controller+@ResponseBody</p><h2 id="4-5-ResponseEntity响应实体"><a href="#4-5-ResponseEntity响应实体" class="headerlink" title="4.5    ResponseEntity响应实体"></a>4.5    ResponseEntity响应实体</h2><p><strong>自定义响应报文</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testDown&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseEntity&lt;<span class="type">byte</span>[]&gt; testResponseEntity(HttpSession session) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//获取ServletContext对象</span></span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> session.getServletContext();</span><br><span class="line">    <span class="comment">//获取服务器中文件的真实路径</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">realPath</span> <span class="operator">=</span> servletContext.getRealPath(<span class="string">&quot;/static/img/1.jpg&quot;</span>);</span><br><span class="line">    <span class="comment">//创建输入流</span></span><br><span class="line">    <span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(realPath);</span><br><span class="line">    <span class="comment">//创建字节数组</span></span><br><span class="line">    <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[is.available()];</span><br><span class="line">    <span class="comment">//将流读到字节数组中</span></span><br><span class="line">    is.read(bytes);</span><br><span class="line">    <span class="comment">//创建HttpHeaders对象设置响应头信息</span></span><br><span class="line">    MultiValueMap&lt;String, String&gt; headers = <span class="keyword">new</span> <span class="title class_">HttpHeaders</span>();</span><br><span class="line">    <span class="comment">//设置要下载方式以及下载文件的名字</span></span><br><span class="line">    headers.add(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;filename=1.jpg&quot;</span>);</span><br><span class="line">    <span class="comment">//设置响应状态码</span></span><br><span class="line">    <span class="type">HttpStatus</span> <span class="variable">statusCode</span> <span class="operator">=</span> HttpStatus.OK;</span><br><span class="line">    <span class="comment">//创建ResponseEntity对象</span></span><br><span class="line">    ResponseEntity&lt;<span class="type">byte</span>[]&gt; responseEntity = <span class="keyword">new</span> <span class="title class_">ResponseEntity</span>&lt;&gt;(bytes, headers, statusCode);</span><br><span class="line">    <span class="comment">//关闭输入流</span></span><br><span class="line">    is.close();</span><br><span class="line">    <span class="keyword">return</span> responseEntity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-6-实现文件上传"><a href="#4-6-实现文件上传" class="headerlink" title="4.6    实现文件上传"></a>4.6    实现文件上传</h2><img src="/2022/09/05/SpringMVC/image-20220512114234307.png" class="" title="image-20220512114234307"><p>必须配置上传方式POST，以二进制传输到服务器</p><p><strong>1、添加上传依赖坐标</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-fileupload/commons-fileupload --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-fileupload<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>2、配置文件上传解析器，使得上传的文件能够封装到MultPartFile对象</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--必须通过文件解析器的解析才能将文件转换为MultipartFile对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;multipartResolver&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.multipart.commons.CommonsMultipartResolver&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意：SpringMVC获取文件上传解析器是通过Id获取</strong></p><p><strong>3、配置控制的我</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/testUp&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testUp</span><span class="params">(MultipartFile photo, HttpSession session)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">    <span class="comment">//获取上传的文件的文件名</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> photo.getOriginalFilename();</span><br><span class="line">    <span class="comment">//处理文件重名问题（截取后缀名，获取最后一个点包括最后一个点的文件名）</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">hzName</span> <span class="operator">=</span> fileName.substring(fileName.lastIndexOf(<span class="string">&quot;.&quot;</span>));</span><br><span class="line">    fileName = UUID.randomUUID().toString() + hzName; <span class="comment">// hzname后缀名</span></span><br><span class="line">    <span class="comment">//获取服务器中photo目录的路径</span></span><br><span class="line">    <span class="type">ServletContext</span> <span class="variable">servletContext</span> <span class="operator">=</span> session.getServletContext();</span><br><span class="line">    <span class="type">String</span> <span class="variable">photoPath</span> <span class="operator">=</span> servletContext.getRealPath(<span class="string">&quot;photo&quot;</span>);</span><br><span class="line">    <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(photoPath); <span class="comment">// 不存在的话就创建photo目录</span></span><br><span class="line">    <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">        file.mkdir();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 路径+分隔符+文件名</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">finalPath</span> <span class="operator">=</span> photoPath + File.separator + fileName;</span><br><span class="line">    <span class="comment">//实现上传功能（封装的是先读再写）</span></span><br><span class="line">    photo.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(finalPath));</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五、拦截器"><a href="#五、拦截器" class="headerlink" title="五、拦截器"></a>五、拦截器</h1><p><strong>拦截前端控制器方法的执行</strong></p><h2 id="5-1-配置方式"><a href="#5-1-配置方式" class="headerlink" title="5.1    配置方式"></a>5.1    配置方式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FirstInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 控制器方法执行之前执行</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;  <span class="comment">// 返回true放行</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 控制器方法执行之后执行</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        HandlerInterceptor.<span class="built_in">super</span>.postHandle(request, response, handler, modelAndView);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 视图渲染之后执行</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        HandlerInterceptor.<span class="built_in">super</span>.afterCompletion(request, response, handler, ex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置拦截器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.interceptor.FirstInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-2-配置方式2"><a href="#5-2-配置方式2" class="headerlink" title="5.2    配置方式2"></a>5.2    配置方式2</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--配置拦截器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;bean class=&quot;com.wwj.interceptor.FirstInterceptor&quot;&gt;&lt;/bean&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;firstInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FirstInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br></pre></td></tr></table></figure><h2 id="5-3-指定拦截请求"><a href="#5-3-指定拦截请求" class="headerlink" title="5.3    指定拦截请求"></a>5.3    指定拦截请求</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!--配置拦截器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:interceptors</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;bean class=&quot;com.wwj.interceptor.FirstInterceptor&quot;&gt;&lt;/bean&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;ref bean=&quot;firstInterceptor&quot;&gt;&lt;/ref&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;firstInterceptor&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">&quot;/*&quot;</span>/&gt;</span>   拦截 /1 /3  单层目录   /** 拦截所有目录</span><br><span class="line">            <span class="tag">&lt;<span class="name">mvc:exclude-mapping</span> <span class="attr">path</span>=<span class="string">&quot;/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">mvc:interceptor</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mvc:interceptors</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="六、异常处理器"><a href="#六、异常处理器" class="headerlink" title="六、异常处理器"></a>六、异常处理器</h1><h2 id="6-1-配置文件"><a href="#6-1-配置文件" class="headerlink" title="6.1    配置文件"></a>6.1    配置文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.web.servlet.handler.SimpleMappingExceptionResolver&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;exceptionMappings&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;java.lang.ArithmeticException&quot;</span>&gt;</span>跳转的页面<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>异常需要写全类名</p><p>写跳转的页面，可以被视图解析器解析</p><p><strong>将错误信息放入请求域中，以value为键</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;exceptionAttribute&quot;</span> <span class="attr">value</span>=<span class="string">&quot;ex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-2-注解"><a href="#6-2-注解" class="headerlink" title="6.2    注解"></a>6.2    注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span>  <span class="comment">// 本质还是控制</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">exception1</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(value = &#123;ArithmeticException.class&#125;)</span> <span class="comment">// 出现的异常</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">testException</span><span class="params">(Exception ex, Model model)</span>&#123;</span><br><span class="line">        model.addAttribute(<span class="string">&quot;ex&quot;</span>,ex);  <span class="comment">// 获取异常信息</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;error&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="七、注解配置SpringMVC"><a href="#七、注解配置SpringMVC" class="headerlink" title="七、注解配置SpringMVC"></a>七、注解配置SpringMVC</h1><h2 id="7-1-替代Web-xml"><a href="#7-1-替代Web-xml" class="headerlink" title="7.1    替代Web.xml"></a>7.1    替代Web.xml</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 替代Web.xml</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebInit</span> <span class="keyword">extends</span> <span class="title class_">AbstractAnnotationConfigDispatcherServletInitializer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Spring的配置类</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getRootConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;SpringConfig.class&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getServletConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;WebInit.class&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 指定前端控制器的映射规则</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String[] getServletMappings() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/&quot;</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 注册过滤器</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Filter[] getServletFilters() &#123;</span><br><span class="line">        <span class="type">CharacterEncodingFilter</span> <span class="variable">characterEncodingFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CharacterEncodingFilter</span>();</span><br><span class="line">        characterEncodingFilter.setEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        characterEncodingFilter.setForceResponseEncoding(<span class="literal">true</span>);</span><br><span class="line">        <span class="type">HiddenHttpMethodFilter</span> <span class="variable">hiddenHttpMethodFilter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HiddenHttpMethodFilter</span>() ;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Filter</span>[]&#123;characterEncodingFilter,hiddenHttpMethodFilter&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-2-替代SpringMVC"><a href="#7-2-替代SpringMVC" class="headerlink" title="7.2    替代SpringMVC"></a>7.2    替代SpringMVC</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 代替SpringMVC的文件</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackage=&#123;&quot;com.wwj&quot;&#125;)</span></span><br><span class="line"><span class="meta">@EnableWebMvc</span> <span class="comment">//开启MVC注解驱动</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//使用默认的servlet处理静态资源,需要实现WebMvcConfigurer</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configureDefaultServletHandling</span><span class="params">(DefaultServletHandlerConfigurer configurer)</span> &#123;</span><br><span class="line">        configurer.enable();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置文件上传解析器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CommonsMultipartResolver <span class="title function_">multipartResolver</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CommonsMultipartResolver</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置拦截器</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        <span class="type">FirstInterceptor</span> <span class="variable">firstInterceptor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FirstInterceptor</span>();</span><br><span class="line">        registry.addInterceptor(firstInterceptor).addPathPatterns(<span class="string">&quot;/**&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置视图控制</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*@Override</span></span><br><span class="line"><span class="comment">    public void addViewControllers(ViewControllerRegistry registry) &#123;</span></span><br><span class="line"><span class="comment">        registry.addViewController(&quot;/&quot;).setViewName(&quot;index&quot;);</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置异常映射</span></span><br><span class="line">    <span class="comment">/*@Override</span></span><br><span class="line"><span class="comment">    public void configureHandlerExceptionResolvers(List&lt;HandlerExceptionResolver&gt; resolvers) &#123;</span></span><br><span class="line"><span class="comment">        SimpleMappingExceptionResolver exceptionResolver = new SimpleMappingExceptionResolver();</span></span><br><span class="line"><span class="comment">        Properties prop = new Properties();</span></span><br><span class="line"><span class="comment">        prop.setProperty(&quot;java.lang.ArithmeticException&quot;, &quot;error&quot;);</span></span><br><span class="line"><span class="comment">        //设置异常映射</span></span><br><span class="line"><span class="comment">        exceptionResolver.setExceptionMappings(prop);</span></span><br><span class="line"><span class="comment">        //设置共享异常信息的键</span></span><br><span class="line"><span class="comment">        exceptionResolver.setExceptionAttribute(&quot;ex&quot;);</span></span><br><span class="line"><span class="comment">        resolvers.add(exceptionResolver);</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置生成模板解析器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ITemplateResolver <span class="title function_">templateResolver</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">WebApplicationContext</span> <span class="variable">webApplicationContext</span> <span class="operator">=</span> ContextLoader.getCurrentWebApplicationContext();</span><br><span class="line">        <span class="comment">// ServletContextTemplateResolver需要一个ServletContext作为构造参数，可通过WebApplicationContext 的方法获得</span></span><br><span class="line">        <span class="type">ServletContextTemplateResolver</span> <span class="variable">templateResolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServletContextTemplateResolver</span>(</span><br><span class="line">                webApplicationContext.getServletContext());</span><br><span class="line">        templateResolver.setPrefix(<span class="string">&quot;/WEB-INF/templates/&quot;</span>);</span><br><span class="line">        templateResolver.setSuffix(<span class="string">&quot;.html&quot;</span>);</span><br><span class="line">        templateResolver.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        templateResolver.setTemplateMode(TemplateMode.HTML);</span><br><span class="line">        <span class="keyword">return</span> templateResolver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成模板引擎并为模板引擎注入模板解析器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SpringTemplateEngine <span class="title function_">templateEngine</span><span class="params">(ITemplateResolver templateResolver)</span> &#123;</span><br><span class="line">        <span class="type">SpringTemplateEngine</span> <span class="variable">templateEngine</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpringTemplateEngine</span>();</span><br><span class="line">        templateEngine.setTemplateResolver(templateResolver);</span><br><span class="line">        <span class="keyword">return</span> templateEngine;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成视图解析器并未解析器注入模板引擎</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ViewResolver <span class="title function_">viewResolver</span><span class="params">(SpringTemplateEngine templateEngine)</span> &#123;</span><br><span class="line">        <span class="type">ThymeleafViewResolver</span> <span class="variable">viewResolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThymeleafViewResolver</span>();</span><br><span class="line">        viewResolver.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        viewResolver.setTemplateEngine(templateEngine);</span><br><span class="line">        <span class="keyword">return</span> viewResolver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="八、SpringMVC执行流程"><a href="#八、SpringMVC执行流程" class="headerlink" title="八、SpringMVC执行流程"></a>八、SpringMVC执行流程</h1><h2 id="8-1-SpringMVC的执行流程"><a href="#8-1-SpringMVC的执行流程" class="headerlink" title="8.1    SpringMVC的执行流程"></a>8.1    SpringMVC的执行流程</h2><ol><li><p>用户向服务器发送请求，请求被SpringMVC 前端控制器 DispatcherServlet捕获。</p></li><li><p>DispatcherServlet对请求URL进行解析，得到请求资源标识符（URI），判断请求URI对应的映射：</p></li></ol><p>a) 不存在</p><p>i. 再判断是否配置了mvc:default-servlet-handler</p><p>ii. 如果没配置，则控制台报映射查找不到，客户端展示404错误</p><img src="/2022/09/05/SpringMVC/img006.png" class="" title="image-20210709214911404"><img src="/2022/09/05/SpringMVC/img007.png" class="" title="image-20210709214947432"><p>iii. 如果有配置，则访问目标资源（一般为静态资源，如：JS,CSS,HTML），找不到客户端也会展示404错误</p><img src="/2022/09/05/SpringMVC/img008.png" class="" title="image-20210709215255693"><img src="/2022/09/05/SpringMVC/img009.png" class="" title="image-20210709215336097"><p>b) 存在则执行下面的流程</p><ol start="3"><li><p>根据该URI，调用HandlerMapping获得该Handler配置的所有相关的对象（包括Handler对象以及Handler对象对应的拦截器），最后以HandlerExecutionChain执行链对象的形式返回。</p></li><li><p>DispatcherServlet 根据获得的Handler，选择一个合适的HandlerAdapter。</p></li><li><p>如果成功获得HandlerAdapter，此时将开始执行拦截器的preHandler(…)方法【正向】</p></li><li><p>提取Request中的模型数据，填充Handler入参，开始执行Handler（Controller)方法，处理请求。在填充Handler的入参过程中，根据你的配置，Spring将帮你做一些额外的工作：</p></li></ol><p>a) HttpMessageConveter： 将请求消息（如Json、xml等数据）转换成一个对象，将对象转换为指定的响应信息</p><p>b) 数据转换：对请求消息进行数据转换。如String转换成Integer、Double等</p><p>c) 数据格式化：对请求消息进行数据格式化。 如将字符串转换成格式化数字或格式化日期等</p><p>d) 数据验证： 验证数据的有效性（长度、格式等），验证结果存储到BindingResult或Error中</p><ol start="7"><li><p>Handler执行完成后，向DispatcherServlet 返回一个ModelAndView对象。</p></li><li><p>此时将开始执行拦截器的postHandle(…)方法【逆向】。</p></li><li><p>根据返回的ModelAndView（此时会判断是否存在异常：如果存在异常，则执行HandlerExceptionResolver进行异常处理）选择一个适合的ViewResolver进行视图解析，根据Model和View，来渲染视图。</p></li><li><p>渲染视图完毕执行拦截器的afterCompletion(…)方法【逆向】。</p></li><li><p>将渲染结果返回给客户端。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端技术 </tag>
            
            <tag> Servlet </tag>
            
            <tag> MVC思想 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AJAX</title>
      <link href="/2022/09/04/AJAX/"/>
      <url>/2022/09/04/AJAX/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>AJAX 是一种用于创建快速动态网页的技术。</p><p>AJAX 通过在后台与服务器进行少量数据交换，使网页实现异步更新。这意味着可以在不重载整个页面的情况下，对网页的某些部分进行更新。</p><p>传统的网页（不使用 AJAX）如果需要更新内容，必须重载整个页面。</p><h1 id="一、AJAX基本概念"><a href="#一、AJAX基本概念" class="headerlink" title="一、AJAX基本概念"></a>一、AJAX基本概念</h1><h2 id="1-1简介"><a href="#1-1简介" class="headerlink" title="1.1简介"></a>1.1简介</h2><p><strong>无刷新获取数据</strong></p><p><strong>AJAX数据格式：XML用来传输和存储数据，现在已被JSON格式取代</strong></p><h2 id="1-2优缺点"><a href="#1-2优缺点" class="headerlink" title="1.2优缺点"></a>1.2优缺点</h2><p><strong>优点：</strong></p><p>不刷新向服务器发送请求</p><p>根据用户事件来更新部分页面内容</p><p><strong>缺点：</strong></p><p>没有浏览历史</p><p>存在跨域问题（一个网站不能向另一个网站发送异步请求）</p><p>SEO不友好（搜索不到对应的数据）</p><h2 id="1-3HTTP超文本传输协议"><a href="#1-3HTTP超文本传输协议" class="headerlink" title="1.3HTTP超文本传输协议"></a>1.3HTTP超文本传输协议</h2><p><strong>1、请求报文</strong></p><p>请求行：GET、POST、参数、HTTP&#x2F;1.1</p><p>请求头：HOST、Cookie、Content-type</p><p>请求空行：</p><p>请求体：POST请求数据</p><p><strong>2、响应报文</strong></p><p>响应行：HTTP协议版本、响应状态码、状态字符串</p><p>响应头：Content-Type、charSet &#x3D; utf-8</p><p>响应空行：</p><p>响应体：HTML内容</p><h2 id="1-4express基本使用"><a href="#1-4express基本使用" class="headerlink" title="1.4express基本使用"></a>1.4express基本使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入express</span></span><br><span class="line"><span class="keyword">const</span> &#123; request, response &#125; = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="comment">// 创建应用对象</span></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">express</span>();</span><br><span class="line"><span class="comment">// 创建路由规则</span></span><br><span class="line">app.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function">(<span class="params">request,response</span>)=&gt;</span>&#123;</span><br><span class="line">    response.<span class="title function_">send</span>(<span class="string">&#x27;hello express&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 监听端口启动服务</span></span><br><span class="line">app.<span class="title function_">listen</span>(<span class="number">8080</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;服务已经启动，监听8080端口&quot;</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h1 id="二、AJAX使用"><a href="#二、AJAX使用" class="headerlink" title="二、AJAX使用"></a>二、AJAX使用</h1><h2 id="2-1基本代码"><a href="#2-1基本代码" class="headerlink" title="2.1基本代码"></a>2.1基本代码</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#result</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>点击发送请求<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> btn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;button&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">    btn.<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 创建对象  ajax</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 设置请求方法和URL</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">open</span>(<span class="string">&#x27;GET&#x27;</span>,<span class="string">&#x27;http://127.0.0.1:8080/server&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 发送</span></span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="title function_">send</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 事件绑定处理服务端返回结果</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// readyState：0 未初始化  1 open调用完毕 2 send调用完毕 3 返回部分结果 4 返回所有结果</span></span></span><br><span class="line"><span class="language-javascript">    </span></span><br><span class="line"><span class="language-javascript">        xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 当状态改变触发</span></span></span><br><span class="line"><span class="language-javascript">             </span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 在返回全部结果时候接收结果</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(xhr.<span class="property">readyState</span> === <span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 2xx 成功</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span>(xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span>&lt;= <span class="number">300</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 处理结果</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">status</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">statusText</span>); <span class="comment">// 响应字符串</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="title function_">getAllResponseHeaders</span>()); <span class="comment">// 所有响应头</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">response</span>); <span class="comment">// 响应体</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-2发送POST请求"><a href="#2-2发送POST请求" class="headerlink" title="2.2发送POST请求"></a>2.2发送POST请求</h2><p>server.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="title function_">post</span>(<span class="string">&#x27;/server&#x27;</span>,<span class="function">(<span class="params">request,response</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// 允许跨域</span></span><br><span class="line">    response.<span class="title function_">setHeader</span>(<span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>,<span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">    response.<span class="title function_">send</span>(<span class="string">&#x27;hello express&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-id">#result</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span> = <span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> result = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        </span></span><br><span class="line"><span class="language-javascript">        result.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseover&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;test&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            </span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="title function_">open</span>(<span class="string">&#x27;POST&#x27;</span>,<span class="string">&#x27;http://localhost:8080/server&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// post请求设置参数</span></span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="title function_">send</span>(<span class="string">&#x27;a=100&amp;b=200&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="title function_">send</span>(<span class="string">&#x27;a:100&amp;bb:200&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span>(xhr.<span class="property">readyState</span> === <span class="number">4</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span>(xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt;<span class="number">300</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        result.<span class="property">innerHTML</span> = xhr.<span class="property">response</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-3设置请求头信息"><a href="#2-3设置请求头信息" class="headerlink" title="2.3设置请求头信息"></a>2.3设置请求头信息</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置请求头信息</span></span><br><span class="line">xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;Content-Type&#x27;</span>,<span class="string">&#x27;application/x-www-form-urlendcode&#x27;</span>)</span><br><span class="line">xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;wwj&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="2-4JSON处理"><a href="#2-4JSON处理" class="headerlink" title="2.4JSON处理"></a>2.4JSON处理</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 手动转换JSON格式</span></span><br><span class="line"><span class="keyword">let</span> data = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(xhr.<span class="property">response</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自动转换</span></span><br><span class="line">result.<span class="property">innerHTML</span> = xhr.<span class="property">response</span>.<span class="property">name</span>;</span><br></pre></td></tr></table></figure><h2 id="2-5请求超时、异常处理"><a href="#2-5请求超时、异常处理" class="headerlink" title="2.5请求超时、异常处理"></a>2.5请求超时、异常处理</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 超时设置：超时取消请求</span></span><br><span class="line">xhr.<span class="property">timeout</span> = <span class="number">2000</span>;</span><br><span class="line"><span class="comment">// 超时回调</span></span><br><span class="line">xhr.<span class="property">ontimeout</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;超时回调&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 网络异常回调</span></span><br><span class="line">xhr.<span class="property">onerror</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;网络异常提醒&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-6取消请求"><a href="#2-6取消请求" class="headerlink" title="2.6取消请求"></a>2.6取消请求</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 请求取消</span></span><br><span class="line">xhr.<span class="title function_">abort</span>();</span><br></pre></td></tr></table></figure><h2 id="2-7重复发送请求"><a href="#2-7重复发送请求" class="headerlink" title="2.7重复发送请求"></a>2.7重复发送请求</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 判断（重复发送请求取消请求）</span></span><br><span class="line">           <span class="keyword">if</span>(isSending)xhr.<span class="title function_">abort</span>();</span><br><span class="line">           <span class="comment">// 请求取消</span></span><br><span class="line">           xhr.<span class="title function_">abort</span>();</span><br><span class="line">           <span class="comment">// 重复发送请求</span></span><br><span class="line">           <span class="keyword">let</span> isSending = <span class="literal">false</span>;</span><br><span class="line">           <span class="comment">// 发请求过程</span></span><br><span class="line">           isSending = <span class="literal">true</span>;</span><br><span class="line">           </span><br><span class="line">           xhr.<span class="title function_">send</span>();</span><br><span class="line">           xhr.<span class="property">onreadystatechange</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">               <span class="keyword">if</span>(xhr.<span class="property">readyState</span> === <span class="number">4</span>)&#123;</span><br><span class="line">                   isSending = <span class="literal">false</span>;</span><br><span class="line">                   <span class="keyword">if</span>(xhr.<span class="property">status</span> &gt;= <span class="number">200</span> &amp;&amp; xhr.<span class="property">status</span> &lt;<span class="number">300</span>)&#123;</span><br><span class="line">                       </span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br></pre></td></tr></table></figure><h1 id="三、axios使用"><a href="#三、axios使用" class="headerlink" title="三、axios使用"></a>三、axios使用</h1><h2 id="3-1发送GET请求"><a href="#3-1发送GET请求" class="headerlink" title="3.1发送GET请求"></a>3.1发送GET请求</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="keyword">const</span> btns = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 配置baseURL</span></span><br><span class="line">        axios.<span class="property">defaults</span>.<span class="property">baseURL</span> = <span class="string">&#x27;http://127.0.0.1:8080&#x27;</span>;</span><br><span class="line">        btns[<span class="number">0</span>].<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="comment">// GET</span></span><br><span class="line">            axios.<span class="title function_">get</span>(<span class="string">&#x27;/axiosserver&#x27;</span>,&#123;</span><br><span class="line">                <span class="comment">// url参数</span></span><br><span class="line">                <span class="attr">params</span>:&#123;</span><br><span class="line">                    id : <span class="number">100</span>,</span><br><span class="line">                    <span class="attr">vip</span>: <span class="number">7</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="comment">// 请求头信息</span></span><br><span class="line">                <span class="attr">headers</span>:&#123;</span><br><span class="line">                    <span class="attr">name</span>: <span class="string">&#x27;wwj&#x27;</span>,</span><br><span class="line">                    age : <span class="number">20</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">value</span> =&gt;</span>&#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">log</span>(value);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="3-2通用发送请求"><a href="#3-2通用发送请求" class="headerlink" title="3.2通用发送请求"></a>3.2通用发送请求</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">btns[<span class="number">2</span>].<span class="property">onclick</span> = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">           <span class="title function_">axios</span>(&#123;</span><br><span class="line">               <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">               <span class="attr">url</span>:<span class="string">&#x27;/axiosserver&#x27;</span>,</span><br><span class="line">                 <span class="comment">// url参数</span></span><br><span class="line">                 <span class="attr">params</span>:&#123;</span><br><span class="line">                   id : <span class="number">100</span>,</span><br><span class="line">                   <span class="attr">vip</span>: <span class="number">7</span></span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">// 请求头信息</span></span><br><span class="line">               <span class="attr">headers</span>:&#123;</span><br><span class="line">                   <span class="attr">name</span>: <span class="string">&#x27;wwj&#x27;</span>,</span><br><span class="line">                   age : <span class="number">20</span></span><br><span class="line">               &#125;,</span><br><span class="line">               <span class="comment">// 请求体</span></span><br><span class="line">               <span class="attr">data</span>: &#123;</span><br><span class="line">                   <span class="attr">username</span>: <span class="string">&#x27;wwj&#x27;</span>,</span><br><span class="line">                   <span class="attr">password</span>: <span class="string">&#x27;1234&#x27;</span></span><br><span class="line">               &#125;</span><br><span class="line">               <span class="comment">// 返回响应结果</span></span><br><span class="line">           &#125;).<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span>&#123;</span><br><span class="line">               <span class="variable language_">console</span>.<span class="title function_">log</span>(repsponse);</span><br><span class="line">           &#125;)</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><h1 id="四、fetch发送请求"><a href="#四、fetch发送请求" class="headerlink" title="四、fetch发送请求"></a>四、fetch发送请求</h1><p><img src="/AJAX.assets/image-20220618154532618.png" alt="image-20220618154532618"></p><h1 id="五、跨域"><a href="#五、跨域" class="headerlink" title="五、跨域"></a>五、跨域</h1><h2 id="5-1同源策略"><a href="#5-1同源策略" class="headerlink" title="5.1同源策略"></a>5.1同源策略</h2><p>ajax：默认遵循同源策略</p><p>请求内容和目标内容的协议、域名、端口号必须完全相同</p><p><img src="/AJAX.assets/image-20220618155124197.png" alt="image-20220618155124197"></p><p>同源：原生ajax可以简写URL</p><h2 id="5-2JSONP和CORS跨域检查"><a href="#5-2JSONP和CORS跨域检查" class="headerlink" title="5.2JSONP和CORS跨域检查"></a>5.2JSONP和CORS跨域检查</h2><p><img src="/AJAX.assets/image-20220618160537849.png" alt="image-20220618160537849"></p><p>服务器应该响应允许跨域请求，跨域头</p><p><img src="/AJAX.assets/image-20220618160846162.png" alt="image-20220618160846162"></p><p>允许跨域、头信息可以自定义、任意方法都可以</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AJAX </tag>
            
            <tag> 前端技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS</title>
      <link href="/2022/09/04/CSS/"/>
      <url>/2022/09/04/CSS/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现<a href="https://baike.baidu.com/item/HTML?fromModule=lemma_inlink">HTML</a>（<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/6805073?fromModule=lemma_inlink">标准通用标记语言</a>的一个应用）或<a href="https://baike.baidu.com/item/XML?fromModule=lemma_inlink">XML</a>（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。</p><h1 id="一、CSS基本概念"><a href="#一、CSS基本概念" class="headerlink" title="一、CSS基本概念"></a>一、CSS基本概念</h1><p><strong>CSS：层叠样式表</strong></p><h2 id="1-1引入方式"><a href="#1-1引入方式" class="headerlink" title="1.1引入方式"></a>1.1引入方式</h2><p>1、内嵌式：写在style标签内</p><p>2、外联式：通过link标签引入，CSS是一个独立的文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;../day1/my.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、行内式：写在标签的style属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color: green;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二、CSS选择器"><a href="#二、CSS选择器" class="headerlink" title="二、CSS选择器"></a>二、CSS选择器</h1><h2 id="2-1标签选择器"><a href="#2-1标签选择器" class="headerlink" title="2.1标签选择器"></a>2.1标签选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="selector-tag">p</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>: red;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>选中所有这个标签</strong></p><h2 id="2-2类选择器"><a href="#2-2类选择器" class="headerlink" title="2.2类选择器"></a>2.2类选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.red</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- &lt;link href=&quot;../day1/my.css&quot;&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>eeadadasdasdasdasdasdsa<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>21312<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>一个标签使用多个类名 <strong>（使用空格选择多个类选择器）</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;red size&quot;</span>&gt;</span>eeadadasdasdasdasdasdsa<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-3id选择器"><a href="#2-3id选择器" class="headerlink" title="2.3id选择器"></a>2.3id选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#two&#123;</span><br><span class="line">    color: aqua;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;two&quot;</span>&gt;</span>id选择器<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>id选择器是唯一的，一个标签只能使用一个标签，通常不是用来美化的</strong></p><h2 id="2-4通配符选择器"><a href="#2-4通配符选择器" class="headerlink" title="2.4通配符选择器"></a>2.4通配符选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    color: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>选中所有标签一般用于margin和padding</strong></p><h1 id="三、字体和文本样式"><a href="#三、字体和文本样式" class="headerlink" title="三、字体和文本样式"></a>三、字体和文本样式</h1><h2 id="3-1字体样式"><a href="#3-1字体样式" class="headerlink" title="3.1字体样式"></a>3.1字体样式</h2><table><thead><tr><th>代码</th><th>语法</th><th>含义</th></tr></thead><tbody><tr><td>font-size：30px；</td><td>字号+px像素</td><td>字体大小</td></tr><tr><td>font-weight：700；</td><td>font-weight: + 数字（400常规、700加粗）</td><td>字体加粗</td></tr><tr><td>font-style:italic&#x2F;normal</td><td>italic倾斜效果、normal不倾斜</td><td>字体倾斜</td></tr><tr><td>font-family: 宋体,sans-serif</td><td>浏览依次选择字体，如果没有按照最后的非衬线字体展示</td><td>字体样式</td></tr><tr><td>font: italic 700 50px 宋体;</td><td>weight 、 加粗 、 大小 、 字体样式（可以写单个）</td><td>复合属性</td></tr></tbody></table><p><strong>网页显示中即使前面的字体都没有，最终也会有非衬线字体</strong></p><p><strong>对于设置相同的属性后面会覆盖前面的属性</strong></p><h2 id="3-2文本样式"><a href="#3-2文本样式" class="headerlink" title="3.2文本样式"></a>3.2文本样式</h2><table><thead><tr><th>代码</th><th>语法</th><th>含义</th></tr></thead><tbody><tr><td>text-indent: 2em;</td><td>em一个字的大小、px是像素大小</td><td>首行缩进</td></tr><tr><td>text-align: center;</td><td>center、left‘、right</td><td>文本对齐</td></tr><tr><td>text-decoration: none;</td><td>underline下划线、none去除下划线</td><td>文本修饰线</td></tr></tbody></table><p>text-align：适用于文本、span、a、input、img</p><p><strong>一定是给父级标签添加文本对齐</strong></p><img src="/2022/09/04/CSS/image-20220604152258718.png" class="" title="image-20220604152258718"><h2 id="3-3行高"><a href="#3-3行高" class="headerlink" title="3.3行高"></a>3.3行高</h2><img src="/2022/09/04/CSS/image-20220604152754005.png" class="" title="image-20220604152754005"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">line-height</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="comment">/* 字号的1.5倍 */</span></span><br><span class="line"><span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br></pre></td></tr></table></figure><img src="/2022/09/04/CSS/image-20220604153041127.png" class="" title="image-20220604153041127"><h1 id="四、颜色取值"><a href="#四、颜色取值" class="headerlink" title="四、颜色取值"></a>四、颜色取值</h1><p>文字颜色：color</p><p>背景颜色：background-color</p><img src="/2022/09/04/CSS/image-20220604153957972.png" class="" title="image-20220604153957972"><h1 id="五、选择器（高级）"><a href="#五、选择器（高级）" class="headerlink" title="五、选择器（高级）"></a>五、选择器（高级）</h1><h2 id="5-1后代选择器"><a href="#5-1后代选择器" class="headerlink" title="5.1后代选择器"></a>5.1后代选择器</h2><p>会选择父标签之后所有该子标签的样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span> <span class="selector-tag">p</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是我待会等级考试拉萨的<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>后代<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>选中div标签下的p标签设置样式</strong></p><p><strong>也可以使用id选择器、类选择器</strong></p><h2 id="5-2子代选择器"><a href="#5-2子代选择器" class="headerlink" title="5.2子代选择器"></a>5.2子代选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&gt;<span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>只选择儿子标签</strong></p><h2 id="5-3并集选择器"><a href="#5-3并集选择器" class="headerlink" title="5.3并集选择器"></a>5.3并集选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span>,<span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>dedadedade<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        dedadadasdasdasdasdasdasas</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>选择多个设置一样的样式</strong></p><h2 id="5-4交集选择器"><a href="#5-4交集选择器" class="headerlink" title="5.4交集选择器"></a>5.4交集选择器</h2><p>找到页面既能被选择器1选中又能被选择器2选中的标签设置其样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">p</span><span class="selector-class">.box</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span>dedadedade<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span></span><br><span class="line">        dedadadasdasdasdasdasdasas</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-5伪类选择器"><a href="#5-5伪类选择器" class="headerlink" title="5.5伪类选择器"></a>5.5伪类选择器</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:red;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>鼠标悬停样式</strong></p><p><strong>任何标签都能添加伪类选择器</strong></p><h1 id="六、emmet语法"><a href="#六、emmet语法" class="headerlink" title="六、emmet语法"></a>六、emmet语法</h1><img src="/2022/09/04/CSS/image-20220604173223917.png" class="" title="image-20220604173223917"><h1 id="七、背景相关属性"><a href="#七、背景相关属性" class="headerlink" title="七、背景相关属性"></a>七、背景相关属性</h1><h2 id="7-1背景色"><a href="#7-1背景色" class="headerlink" title="7.1背景色"></a>7.1背景色</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">    <span class="comment">/* a是透明度：0-1 */</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.6</span>);</span><br></pre></td></tr></table></figure><h2 id="7-2背景图片"><a href="#7-2背景图片" class="headerlink" title="7.2背景图片"></a>7.2背景图片</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.test2</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="comment">/* 设置平铺方式 */</span></span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">./img/00874a5e-0df2-446b-8f69-a30eb7d88ee8.png</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-3背景图片平铺"><a href="#7-3背景图片平铺" class="headerlink" title="7.3背景图片平铺"></a>7.3背景图片平铺</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 设置平铺方式 */</span></span><br><span class="line">   <span class="attribute">background-repeat</span>: no-repeat;</span><br></pre></td></tr></table></figure><img src="/2022/09/04/CSS/image-20220604174619465.png" class="" title="image-20220604174619465"><h2 id="7-4背景图片位置"><a href="#7-4背景图片位置" class="headerlink" title="7.4背景图片位置"></a>7.4背景图片位置</h2><img src="/2022/09/04/CSS/image-20220604174952575.png" class="" title="image-20220604174952575"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 设置背景图片位置 */</span></span><br><span class="line"><span class="attribute">background-position</span>: center center;</span><br></pre></td></tr></table></figure><h2 id="7-5背景相关属性连写"><a href="#7-5背景相关属性连写" class="headerlink" title="7.5背景相关属性连写"></a>7.5背景相关属性连写</h2><img src="/2022/09/04/CSS/image-20220604175447666.png" class="" title="image-20220604175447666"><img src="/2022/09/04/CSS/image-20220604175559319.png" class="" title="image-20220604175559319"><h1 id="八、元素显示模式"><a href="#八、元素显示模式" class="headerlink" title="八、元素显示模式"></a>八、元素显示模式</h1><h2 id="8-1块级元素"><a href="#8-1块级元素" class="headerlink" title="8.1块级元素"></a>8.1块级元素</h2><p>1、独占一行</p><p>2、宽度默认是父元素的宽度、高度由内容撑开</p><p>3、可以设置宽高</p><img src="/2022/09/04/CSS/image-20220604184846608.png" class="" title="image-20220604184846608"><h2 id="8-2行内元素"><a href="#8-2行内元素" class="headerlink" title="8.2行内元素"></a>8.2行内元素</h2><img src="/2022/09/04/CSS/image-20220604185028809.png" class="" title="image-20220604185028809"><h2 id="8-3行内块元素"><a href="#8-3行内块元素" class="headerlink" title="8.3行内块元素"></a>8.3行内块元素</h2><img src="/2022/09/04/CSS/image-20220604185403923.png" class="" title="image-20220604185403923"><h2 id="8-4显示模式转换"><a href="#8-4显示模式转换" class="headerlink" title="8.4显示模式转换"></a>8.4显示模式转换</h2><img src="/2022/09/04/CSS/image-20220604185658203.png" class="" title="image-20220604185658203"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="comment">/* 修改div行内快元素 */</span></span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="comment">/* 修改行内元素变成行内块元素 */</span></span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: aquamarine;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-5标签嵌套"><a href="#8-5标签嵌套" class="headerlink" title="8.5标签嵌套"></a>8.5标签嵌套</h2><p>块级元素作为大容器可以嵌套：文本、块级元素</p><p><strong>p标签不能包含div</strong></p><p><strong>p标签里不能包含h</strong></p><p><strong>a标签不能嵌套a标签，但可以嵌套任意标签</strong></p><h1 id="九、CSS特性"><a href="#九、CSS特性" class="headerlink" title="九、CSS特性"></a>九、CSS特性</h1><h2 id="9-1继承性"><a href="#9-1继承性" class="headerlink" title="9.1继承性"></a>9.1继承性</h2><img src="/2022/09/04/CSS/image-20220604190632266.png" class="" title="image-20220604190632266"><img src="/2022/09/04/CSS/image-20220604190847141.png" class="" title="image-20220604190847141"><p>span将会继承div元素的文字颜色</p><p><strong>所有控制文字的属性都能继承</strong></p><p><strong>样式继承性通过就近原则进行样式设置</strong></p><h2 id="9-2层叠性"><a href="#9-2层叠性" class="headerlink" title="9.2层叠性"></a>9.2层叠性</h2><p>后者覆盖前者</p><img src="/2022/09/04/CSS/image-20220604191431569.png" class="" title="image-20220604191431569"><h2 id="9-3优先性"><a href="#9-3优先性" class="headerlink" title="9.3优先性"></a>9.3优先性</h2><p><strong>解决选择器发生冲突的时候，哪个样式会生效</strong></p><img src="/2022/09/04/CSS/image-20220605094853927.png" class="" title="image-20220605094853927"><p><strong>更精准的选择到标签，优先级越高</strong></p><img src="/2022/09/04/CSS/image-20220605095513151.png" class="" title="image-20220605095513151"><h2 id="9-4复合选择器优先级"><a href="#9-4复合选择器优先级" class="headerlink" title="9.4复合选择器优先级"></a>9.4复合选择器优先级</h2><p>使用权重叠加计算</p><img src="/2022/09/04/CSS/image-20220605100118501.png" class="" title="image-20220605100118501"><img src="/2022/09/04/CSS/image-20220605100131720.png" class="" title="image-20220605100131720"><p>  <strong>对于都是继承的，看继承哪个父级标签，哪个父级高哪个生效</strong></p><h1 id="十、盒子模型"><a href="#十、盒子模型" class="headerlink" title="十、盒子模型"></a>十、盒子模型</h1><p>每一个标签都可以叫做一个盒子</p><h2 id="10-1组成部分"><a href="#10-1组成部分" class="headerlink" title="10.1组成部分"></a>10.1组成部分</h2><p>内容 content</p><p>内边距 padding </p><p>边框 border</p><p>外边距 margin</p><img src="/2022/09/04/CSS/image-20220605104010340.png" class="" title="image-20220605104010340"><h2 id="10-2内容的宽度和高度"><a href="#10-2内容的宽度和高度" class="headerlink" title="10.2内容的宽度和高度"></a>10.2内容的宽度和高度</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="comment">/* 设置盒子的内容使用宽高就可以设置 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>宽、高表示盒子模型的内容范围</strong></p><h2 id="10-3边框"><a href="#10-3边框" class="headerlink" title="10.3边框"></a>10.3边框</h2><p><strong>边框设置会让盒子模型撑大</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="comment">/* 设置盒子的内容使用宽高就可以设置 */</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">    <span class="comment">/* 边框粗细、线条种类、边框颜色 不分先后顺序 */</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">    <span class="comment">/* 边框虚线线段 */</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> dashed <span class="number">#000</span>;</span><br><span class="line">    <span class="comment">/* 点线 */</span></span><br><span class="line">    <span class="attribute">border</span>: <span class="number">5px</span> dotted <span class="number">#000</span>;</span><br><span class="line">    <span class="comment">/* border+方位 显示一个方位的边框 */</span></span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-4内边距"><a href="#10-4内边距" class="headerlink" title="10.4内边距"></a>10.4内边距</h2><p><strong>内边距设置会导致盒子的整体撑大</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 添加了四个方向的内边距 复合属性可以设置某个方向的内边距 */</span></span><br><span class="line"><span class="attribute">padding</span>: <span class="number">50px</span>;</span><br><span class="line"><span class="attribute">padding</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span> <span class="number">40px</span> ;</span><br></pre></td></tr></table></figure><img src="/2022/09/04/CSS/image-20220605111834225.png" class="" title="image-20220605111834225"><p>复合属性：上、右、下、左</p><p>三个值：上、左右、下</p><p>两个值：上下、左右</p><h2 id="10-5盒子尺寸"><a href="#10-5盒子尺寸" class="headerlink" title="10.5盒子尺寸"></a>10.5盒子尺寸</h2><p><strong>解决设置边框和内边距导致盒子撑大需要手动计算盒子尺寸的问题</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* 变成CSS3盒子模型 */</span></span><br><span class="line"><span class="comment">/* 内减模式 */</span></span><br><span class="line"><span class="attribute">box-sizing</span>: border-box;</span><br></pre></td></tr></table></figure><h2 id="10-6外边距"><a href="#10-6外边距" class="headerlink" title="10.6外边距"></a>10.6外边距</h2><p>和内边距相似</p><h2 id="10-7清除默认内外边距"><a href="#10-7清除默认内外边距" class="headerlink" title="10.7清除默认内外边距"></a>10.7清除默认内外边距</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 清除内外边距 */</span></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>adasdas<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>dasdsadasdasdas<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-8版心居中"><a href="#10-8版心居中" class="headerlink" title="10.8版心居中"></a>10.8版心居中</h2><p>版心：网页有效内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1000px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">    <span class="comment">/* 版心居中，上下0，左右auto设置 */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-9去除列表符号"><a href="#10-9去除列表符号" class="headerlink" title="10.9去除列表符号"></a>10.9去除列表符号</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 去除列表的符号 */</span></span><br><span class="line"><span class="selector-class">.news</span> <span class="selector-tag">ul</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-10相关案例"><a href="#10-10相关案例" class="headerlink" title="10.10相关案例"></a>10.10相关案例</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        *&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 清空样式 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 所有标签内减 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">box-sizing</span>: border-box;   </span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding</span>: <span class="number">42px</span> <span class="number">30px</span> <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news</span> <span class="selector-tag">h1</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-bottom</span>: <span class="number">9px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 去除列表的符号 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news</span> <span class="selector-tag">ul</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">list-style</span>: none;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news</span> <span class="selector-tag">li</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-bottom</span>: <span class="number">1px</span> dashed <span class="number">#ccc</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">padding-left</span>: <span class="number">28px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.news</span> <span class="selector-tag">a</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">text-decoration</span>: none;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>: <span class="number">#666</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>: <span class="number">18px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;news&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">h1</span>&gt;</span>最新文章<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>测试测试测试<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>测试测试测试<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>测试测试测试<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>测试测试测试<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-11外边距的折叠问题"><a href="#10-11外边距的折叠问题" class="headerlink" title="10.11外边距的折叠问题"></a>10.11外边距的折叠问题</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.one</span>&#123;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.two</span>&#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>两者给一个外边距，否则合并并且取最大值外边距</strong></p><h2 id="10-12外边距塌陷问题"><a href="#10-12外边距塌陷问题" class="headerlink" title="10.12外边距塌陷问题"></a>10.12外边距塌陷问题</h2><p><strong>子标签设置外边距致使父标签挪动外边距</strong></p><img src="/2022/09/04/CSS/image-20220605122455319.png" class="" title="image-20220605122455319"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.one</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">500px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 解决办法 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.two</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: blue;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-top</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 解决办法设置行内快元素 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: inline-block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 外边距塌陷现象 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span>son<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-13行内元素的内外边距问题"><a href="#10-13行内元素的内外边距问题" class="headerlink" title="10.13行内元素的内外边距问题"></a>10.13行内元素的内外边距问题</h2><p><strong>行内标签使用内外边距设置位置无法生效</strong></p><p><strong>只有水平属性生效</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">span</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 解决办法使用行高改变垂直位置 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">line-height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 仅有水平位置生效 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- margin-top and bottom 不生效 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- padding-top and bottom 不生效 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>span<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="十二、CSS浮动"><a href="#十二、CSS浮动" class="headerlink" title="十二、CSS浮动"></a>十二、CSS浮动</h1><h2 id="12-1-结构伪类选择器"><a href="#12-1-结构伪类选择器" class="headerlink" title="12.1 结构伪类选择器"></a>12.1 结构伪类选择器</h2><img src="/2022/09/04/CSS/image-20220605141130101.png" class="" title="image-20220605141130101"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 选择第一个子元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: green;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 选择最后一个子元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 选择任意一个元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">5</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: black;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="comment">/* 选择任意倒数第几个元素 */</span></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">li</span><span class="selector-pseudo">:nth-last-child</span>(<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: deeppink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        </span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第1个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第2个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第3个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第4个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第5个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第6个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第7个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>这是第8个li<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="12-2结构伪类公式"><a href="#12-2结构伪类公式" class="headerlink" title="12.2结构伪类公式"></a>12.2结构伪类公式</h2><img src="/2022/09/04/CSS/image-20220605141426072.png" class="" title="image-20220605141426072"><p>n+5: 0+5;1+5;2+5;3+5;4+5;5+5</p><h2 id="12-3伪元素"><a href="#12-3伪元素" class="headerlink" title="12.3伪元素"></a>12.3伪元素</h2><p><strong>通过CSS创建标签，适用于装饰性图标</strong></p><img src="/2022/09/04/CSS/image-20220605141806381.png" class="" title="image-20220605141806381"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.father</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.father</span><span class="selector-pseudo">::before</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 必须添加内容 */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;老鼠&quot;</span>;</span></span><br><span class="line"><span class="language-css">            <span class="comment">/* 伪元素默认行内显示（宽高不生效） */</span></span></span><br><span class="line"><span class="language-css">            <span class="attribute">display</span>: block;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.father</span><span class="selector-pseudo">::after</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">content</span>: <span class="string">&quot;大米&quot;</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 伪元素需要在父级标签内创建子级标签 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;father&quot;</span>&gt;</span>爱<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="12-4标准流"><a href="#12-4标准流" class="headerlink" title="12.4标准流"></a>12.4标准流</h2><p>标签默认的展示方式</p><h2 id="12-5浮动"><a href="#12-5浮动" class="headerlink" title="12.5浮动"></a>12.5浮动</h2><p><strong>解决浏览器在解析行内块或行内标签的时候，如果代码换行就是产生一个空格的距离</strong></p><p>使块标签完美的在一行排列并且没有间距</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">div</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.one</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.two</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">hea7</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span>one<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span>two<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2022/09/04/CSS/image-20220605143702905.png" class="" title="image-20220605143702905"><h2 id="12-6浮动特点"><a href="#12-6浮动特点" class="headerlink" title="12.6浮动特点"></a>12.6浮动特点</h2><p>1、脱离标准流的控制，不再占用标准流的位置（文字有有所变化）</p><img src="/2022/09/04/CSS/image-20220605143909992.png" class="" title="image-20220605143909992"><p>2、可以覆盖标准流中的元素</p><p>3、下一个浮动元素会在上一个<strong>浮动元素后面左右浮动</strong></p><p>4、一行可以显示多个且可以设置宽高（浮动后的标签具备行内块特点）</p><p><strong>注意：</strong></p><img src="/2022/09/04/CSS/image-20220605144453299.png" class="" title="image-20220605144453299"><h2 id="12-7CSS书写顺序"><a href="#12-7CSS书写顺序" class="headerlink" title="12.7CSS书写顺序"></a>12.7CSS书写顺序</h2><p> 1、浮动、display</p><p>2、盒子模型：Margin 、border、padding、宽度、高度、背景色</p><p>3、文字样式</p><p><strong>父级的元素不够位置子元素自动换行</strong></p><h2 id="12-8清除浮动"><a href="#12-8清除浮动" class="headerlink" title="12.8清除浮动"></a>12.8清除浮动</h2><p>清除浮动带来的影响</p><p>父子级标签，父级没有高度，后面的标准流盒子会受影响。显示到上面的位置</p><img src="/2022/09/04/CSS/image-20220605180611309.png" class="" title="image-20220605180611309"><p><strong>解决：对于不方便加height的情况需要使用额外标签法</strong></p><img src="/2022/09/04/CSS/image-20220605180934864.png" class="" title="image-20220605180934864"><p>在父元素内的尾部增加一个标签，并且设置 <code>clear：both</code>属性（清除左右两侧浮动的影响）</p><p><strong>单伪元素清除法</strong></p><img src="/2022/09/04/CSS/image-20220605181429017.png" class="" title="image-20220605181429017"><p><strong>双伪元素清除法</strong>（不仅能去浮动还可以去除塌陷问题）</p><img src="/2022/09/04/CSS/image-20220605181921565.png" class="" title="image-20220605181921565"><p><strong>给父元素设置overflow：hidden解决浮动带来的问题</strong></p><h1 id="十三、定位"><a href="#十三、定位" class="headerlink" title="十三、定位"></a>十三、定位</h1><p>标签堆叠方式</p><img src="/2022/09/04/CSS/image-20220606111651105.png" class="" title="image-20220606111651105"><h2 id="13-1相对定位"><a href="#13-1相对定位" class="headerlink" title="13.1相对定位"></a>13.1相对定位</h2><p>1、占有原来的位置</p><p>2、仍然具备标签的原有显示模式特点</p><p>3、相对于原来的位置挪动</p><p><strong>没有脱离标准流的控制</strong></p><p> <strong><img src="/2022/09/04/CSS/image-20220606112519531.png" class="" title="image-20220606112519531"></strong></p><img src="/2022/09/04/CSS/image-20220606112247807.png" class="" title="image-20220606112247807"><h2 id="13-2绝对定位"><a href="#13-2绝对定位" class="headerlink" title="13.2绝对定位"></a>13.2绝对定位</h2><p>position：absolute；</p><p>1、脱离标准流位置</p><p>2、改变标签的限时模式特点，具备了<strong>行内块</strong>的特点</p><p>3、找到已经定位的父级，以这个父级为参照物来定位。父级没有定位以浏览器的窗口参照进行定位</p><p><strong>实际开发一般父级选择相对定位，子级使用绝对定位</strong></p><p><strong>逐层查找父级元素，就近原则找父级作为相对位置定位，找不到就以浏览器为参数进行定位</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* hot定位 */</span></span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.content</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-class">.content</span> <span class="selector-tag">li</span> <span class="selector-class">.hot</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="comment">/* 在父级标签外 */</span></span><br><span class="line">    <span class="attribute">right</span>: -<span class="number">4px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>绝对定位不能使用margin 0 auto实现</strong></p><p><strong>使用百分比加上盒子的一半就可以实现居中</strong></p><img src="/2022/09/04/CSS/image-20220607092742944.png" class="" title="image-20220607092742944"><img src="/2022/09/04/CSS/image-20220607093238590.png" class="" title="image-20220607093238590"><h2 id="13-3固定定位"><a href="#13-3固定定位" class="headerlink" title="13.3固定定位"></a>13.3固定定位</h2><p><strong>解决：无论网页如何滚动，标签总是位于一个固定的位置</strong></p><p>1、脱离标准流不占位置</p><p>2、永远参照浏览器位置</p><p>3、具备行内块特点</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;<span class="attribute">background-color</span>: pink;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13-4元素层级关系"><a href="#13-4元素层级关系" class="headerlink" title="13.4元素层级关系"></a>13.4元素层级关系</h2><p>标准流&lt;浮动&lt;定位</p><p>默认情况下定位的盒子优先级高</p><p>z-index：表示定位情况下的优先级（<strong>必须有定位才能生效</strong>）</p><h1 id="十四、CSS定位装饰"><a href="#十四、CSS定位装饰" class="headerlink" title="十四、CSS定位装饰"></a>十四、CSS定位装饰</h1><h2 id="14-1vertical-align文字基线对齐"><a href="#14-1vertical-align文字基线对齐" class="headerlink" title="14.1vertical align文字基线对齐"></a>14.1vertical align文字基线对齐</h2><img src="/2022/09/04/CSS/image-20220607095149183.png" class="" title="image-20220607095149183"><img src="/2022/09/04/CSS/image-20220607095236242.png" class="" title="image-20220607095236242"><p><strong>解决行内块和行内块以及文字和行内快的垂直对齐方式</strong></p><p>1、行内块和行内块使用中部对齐</p><p>2、只能加入行内块标签中</p><p>3、<strong>浏览器会把行内块标签当做文字处理作为基线处理（使用该属性或者改变显示模式）</strong></p><p>使用行高和垂直属性使得div里的img垂直居中</p><img src="/2022/09/04/CSS/image-20220607100040976.png" class="" title="image-20220607100040976"><h2 id="14-2光标类型"><a href="#14-2光标类型" class="headerlink" title="14.2光标类型"></a>14.2光标类型</h2><img src="/2022/09/04/CSS/image-20220607100308169.png" class="" title="image-20220607100308169"><h2 id="14-3边框圆角"><a href="#14-3边框圆角" class="headerlink" title="14.3边框圆角"></a>14.3边框圆角</h2><img src="/2022/09/04/CSS/image-20220607100630056.png" class="" title="image-20220607100630056"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">300px</span>;<span class="attribute">background-color</span>: pink;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line"><span class="comment">/* 属性值为圆角的半径 */</span></span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">10px</span>;</span><br><span class="line"><span class="comment">/* 从左上顺时针设置一圈 */</span></span><br><span class="line"><span class="comment">/* 没有设置到参数看对角参数 */</span></span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">10px</span> <span class="number">20px</span> <span class="number">30px</span> <span class="number">40px</span>;</span><br></pre></td></tr></table></figure><p><strong>正圆：<code>border-radius: 50%</code></strong></p><p><strong>胶囊按钮：<code>border-radius：盒子高度的一半保证长方形</code></strong></p><h2 id="14-4溢出部分显示效果overflow"><a href="#14-4溢出部分显示效果overflow" class="headerlink" title="14.4溢出部分显示效果overflow"></a>14.4溢出部分显示效果overflow</h2><img src="/2022/09/04/CSS/image-20220607101531803.png" class="" title="image-20220607101531803"><p>auto：根据内容是否超出动态展示滚动条</p><h2 id="14-5元素本身隐藏"><a href="#14-5元素本身隐藏" class="headerlink" title="14.5元素本身隐藏"></a>14.5元素本身隐藏</h2><p><strong>菜单栏的应用</strong></p><p><code>visibility：hidden：</code> 占位置的隐藏属性</p><p><code>display：none：</code>不占位置的隐藏属性</p><p><strong>表示鼠标悬停a标签控制图片的显示隐藏，加空格控制</strong></p><img src="/2022/09/04/CSS/image-20220607102310754.png" class="" title="image-20220607102310754"><h2 id="14-6元素整体透明度opacity"><a href="#14-6元素整体透明度opacity" class="headerlink" title="14.6元素整体透明度opacity"></a>14.6元素整体透明度opacity</h2><p>整个标签连通内容半透明效果</p><img src="/2022/09/04/CSS/image-20220607102545073.png" class="" title="image-20220607102545073"><h1 id="十五、精灵图"><a href="#十五、精灵图" class="headerlink" title="十五、精灵图"></a>十五、精灵图</h1><img src="/2022/09/04/CSS/image-20220607104939192.png" class="" title="image-20220607104939192"><img src="/2022/09/04/CSS/image-20220607105649931.png" class="" title="image-20220607105649931"><p>background-position：表示背景图挪动坐标</p><h1 id="十六、背景图片大小"><a href="#十六、背景图片大小" class="headerlink" title="十六、背景图片大小"></a>十六、背景图片大小</h1><img src="/2022/09/04/CSS/image-20220607105814086.png" class="" title="image-20220607105814086"><h1 id="十七、盒子阴影"><a href="#十七、盒子阴影" class="headerlink" title="十七、盒子阴影"></a>十七、盒子阴影</h1><img src="/2022/09/04/CSS/image-20220607110322738.png" class="" title="image-20220607110322738"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">        <span class="selector-class">.box</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">            <span class="attribute">box-shadow</span>: <span class="number">5px</span> <span class="number">10px</span> <span class="number">20px</span> <span class="number">10px</span> green inset;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/* 默认外阴影，不能写外阴影会报错 */</span></span><br></pre></td></tr></table></figure><h1 id="十八、过渡"><a href="#十八、过渡" class="headerlink" title="十八、过渡"></a>十八、过渡</h1><p><strong>实现缓慢变化的过程</strong></p><img src="/2022/09/04/CSS/image-20220607110845828.png" class="" title="image-20220607110845828"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">    <span class="comment">/* 从宽度200 --- 600 花费一秒钟时长 */</span></span><br><span class="line">    <span class="comment">/* 配合hover使用 */</span></span><br><span class="line">    <span class="comment">/* 谁变化谁加transaction属性 */</span></span><br><span class="line">    <span class="comment">/* 多属性修改 */</span></span><br><span class="line">    <span class="attribute">transition</span>: width <span class="number">1s</span>,background-color <span class="number">2s</span>;</span><br><span class="line">    <span class="comment">/* 改变所有属性 */</span></span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">1s</span>;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十九、骨架标签"><a href="#十九、骨架标签" class="headerlink" title="十九、骨架标签"></a>十九、骨架标签</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 指代HTML5版本 --&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 表示网络的使用的语言 en英语网站 zh-CH中文网站 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- UTF-8规定网页的字符编码 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 解决IE浏览器的兼容性 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 宽度 = 设备宽度  做移动端代码有用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二十、SEO三大标签"><a href="#二十、SEO三大标签" class="headerlink" title="二十、SEO三大标签"></a>二十、SEO三大标签</h1><p>SEO：搜索引擎优化（让自己公司网站在搜索引擎的排名更靠前）</p><p>1、竞价排名</p><p>2、网页制作成html后缀</p><p>3、标签语义话…</p><p><strong>title标题、description细节、keywords关键词</strong></p><img src="/2022/09/04/CSS/image-20220607112857647.png" class="" title="image-20220607112857647"><h1 id="二十一、icon图标设置"><a href="#二十一、icon图标设置" class="headerlink" title="二十一、icon图标设置"></a>二十一、icon图标设置</h1><img src="/2022/09/04/CSS/image-20220607112949834.png" class="" title="image-20220607112949834"><h1 id="初始化样式代码"><a href="#初始化样式代码" class="headerlink" title="初始化样式代码"></a>初始化样式代码</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="comment">/* 清除标准流标签的内外边距 */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/* 内减模式 */</span></span><br><span class="line">    <span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 清除li标签的圆点 */</span></span><br><span class="line"><span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 清除超链接的下划线 */</span></span><br><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 双伪去除浮动以及塌陷问题 */</span></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::before</span>,<span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">display</span>: table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 清除浮动问题 */</span></span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>: both;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 版心 */</span></span><br><span class="line"><span class="selector-class">.wrapper</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">1200px</span>;</span><br><span class="line">    <span class="comment">/* 版心居中 */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker</title>
      <link href="/2022/09/04/Docker/"/>
      <url>/2022/09/04/Docker/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的<a href="https://baike.baidu.com/item/%E9%95%9C%E5%83%8F/1574?fromModule=lemma_inlink">镜像</a>中，然后发布到任何流行的 <a href="https://baike.baidu.com/item/Linux?fromModule=lemma_inlink">Linux</a>或<a href="https://baike.baidu.com/item/Windows/165458?fromModule=lemma_inlink">Windows</a>操作系统的机器上，也可以实现<a href="https://baike.baidu.com/item/%E8%99%9A%E6%8B%9F%E5%8C%96/547949?fromModule=lemma_inlink">虚拟化</a>。容器是完全使用<a href="https://baike.baidu.com/item/%E6%B2%99%E7%AE%B1/393318?fromModule=lemma_inlink">沙箱</a>机制，相互之间不会有任何接口。 </p><h1 id="一、Docker"><a href="#一、Docker" class="headerlink" title="一、Docker"></a>一、Docker</h1><h2 id="1-1-概念"><a href="#1-1-概念" class="headerlink" title="1.1    概念"></a>1.1    概念</h2><p>对于开发环境、测试环境、生产环境的环境不同导致的错误</p><p>将环境装到Docker容器中迁移发布到任何Linux机器上</p><p>容器是相互隔离的</p><h2 id="1-2-安装"><a href="#1-2-安装" class="headerlink" title="1.2    安装"></a>1.2    安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1、yum 包更新到最新</span> </span><br><span class="line">yum update</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2、安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</span> </span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3、 设置yum源</span></span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4、 安装docker，出现输入的界面都按 y</span> </span><br><span class="line">yum install -y docker-ce</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">5、 查看docker版本，验证是否验证成功</span></span><br><span class="line">docker -v</span><br></pre></td></tr></table></figure><h2 id="1-3-架构"><a href="#1-3-架构" class="headerlink" title="1.3   架构"></a>1.3   架构</h2><img src="/2022/09/04/Docker/2022-07-28-13-47-50-image.png" class=""><p>配置镜像加速器：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://9ltkuino.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="1-4-服务命令"><a href="#1-4-服务命令" class="headerlink" title="1.4    服务命令"></a>1.4    服务命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">启动服务 systemctl start docker</span><br><span class="line">停止服务 systemctl stop docker</span><br><span class="line">重启服务 systemctl restart docker</span><br><span class="line">查看服务状态 systemctl status docker</span><br><span class="line">设置开机启动s ystemctl enable docker</span><br></pre></td></tr></table></figure><h2 id="1-5-镜像命令"><a href="#1-5-镜像命令" class="headerlink" title="1.5    镜像命令"></a>1.5    镜像命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">docker images    查看本地镜像</span><br><span class="line">docker images -q    查看本地镜像id</span><br><span class="line">docker search 镜像名称    搜索镜像</span><br><span class="line">docker pull 镜像名称   从仓库拉取镜像</span><br><span class="line">docker pull 镜像名称:版本号</span><br><span class="line">docker rmi 镜像id 删除指定镜像</span><br><span class="line">docker rmi `docker images -q` 删除所有本地镜像</span><br></pre></td></tr></table></figure><h2 id="1-6-容器命令"><a href="#1-6-容器命令" class="headerlink" title="1.6    容器命令"></a>1.6    容器命令</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">查看容器</span><br><span class="line">docker ps 查看正在运行的容器</span><br><span class="line">docker ps -a    查看所有容器</span><br><span class="line">docker run 参数     创建并启动容器</span><br><span class="line">-i：保持容器运行，和-t使用加入的it表示容器创建后自动进入容器，退出容器，容器自动关闭</span><br><span class="line">-t：为容器分配一个伪输入中断</span><br><span class="line">-d：以后台模式运行容器。进入容器需要 docker exec进入容器，退出后容器不会关闭</span><br><span class="line">-it：交互式容器，-id一般是守护式容器</span><br><span class="line">--name：为创建的容器命名</span><br><span class="line"></span><br><span class="line">docker exec 参数    进入容器</span><br><span class="line">docker stop 容器名称    停止容器</span><br><span class="line">dokcer start 容器名称     开启容器</span><br><span class="line">dokcer rm 容器名称    删除容器</span><br><span class="line">dokcer inspect 容器名称 查看容器信息</span><br></pre></td></tr></table></figure><h2 id="1-7-数据卷"><a href="#1-7-数据卷" class="headerlink" title="1.7    数据卷"></a>1.7    数据卷</h2><p>数据卷是宿主机的一个目录或者文件，实现文件共享</p><img src="/2022/09/04/Docker/2022-07-28-14-26-23-image.png" class=""><img src="/2022/09/04/Docker/2022-07-28-14-28-44-image.png" class=""><img src="/2022/09/04/Docker/2022-07-28-14-31-36-image.png" class=""><h2 id="1-8-数据卷容器"><a href="#1-8-数据卷容器" class="headerlink" title="1.8   数据卷容器"></a>1.8   数据卷容器</h2><img src="/2022/09/04/Docker/2022-07-28-14-34-17-image.png" class=""><img src="/2022/09/04/Docker/2022-07-28-14-35-12-image.png" class=""><p>1、第一步会自动分配一个容器内的目录</p><h1 id="二、应用部署"><a href="#二、应用部署" class="headerlink" title="二、应用部署"></a>二、应用部署</h1><h2 id="2-1-MySQL"><a href="#2-1-MySQL" class="headerlink" title="2.1    MySQL"></a>2.1    MySQL</h2><p><strong>容器不能暴露得端口号，需要通过端口映射</strong></p><p>￥PWD：是命令pwd查询绝对路径</p><p>1、搜索镜像</p><p>2、拉去镜像</p><p>3、创建容器</p><p>4、使用</p><p><strong>详见资料</strong></p><h1 id="三、Dockerfile"><a href="#三、Dockerfile" class="headerlink" title="三、Dockerfile"></a>三、Dockerfile</h1><h2 id="3-1-镜像原理"><a href="#3-1-镜像原理" class="headerlink" title="3.1    镜像原理"></a>3.1    镜像原理</h2><p>分层文件系统</p><img src="/2022/09/04/Docker/2022-07-28-14-58-39-image.png" class=""><img src="/2022/09/04/Docker/2022-07-28-15-02-01-image.png" class=""><h2 id="3-2-镜像制作"><a href="#3-2-镜像制作" class="headerlink" title="3.2   镜像制作"></a>3.2   镜像制作</h2><img src="/2022/09/04/Docker/2022-07-28-15-08-41-image.png" class=""><p>DockerFile：包含的配置操作</p><img src="/2022/09/04/Docker/2022-07-28-15-11-51-image.png" class=""><img src="/2022/09/04/Docker/2022-07-28-15-15-38-image.png" class=""><img src="/2022/09/04/Docker/2022-07-28-15-17-49-image.png" class=""><p>发布Springboot项目</p><p>1、打包成jar包</p><p>2、</p><img src="/2022/09/04/Docker/2022-07-28-15-22-28-image.png" class=""><p>3、需要设置端口映射</p><h1 id="四、服务编排"><a href="#四、服务编排" class="headerlink" title="四、服务编排"></a>四、服务编排</h1><p>批量管理容器</p><img src="/2022/09/04/Docker/2022-07-28-15-27-03-image.png" class=""><p><strong>详见资料</strong></p><h1 id="五、私有仓库"><a href="#五、私有仓库" class="headerlink" title="五、私有仓库"></a>五、私有仓库</h1><p><strong>详见资料</strong></p><img src="/2022/09/04/Docker/2022-07-28-15-41-01-image.png" class="">]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 容器化技术 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS进阶</title>
      <link href="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/"/>
      <url>/2022/09/04/CSS%E8%BF%9B%E9%98%B6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现<a href="https://baike.baidu.com/item/HTML?fromModule=lemma_inlink">HTML</a>（<a href="https://baike.baidu.com/item/%E6%A0%87%E5%87%86%E9%80%9A%E7%94%A8%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/6805073?fromModule=lemma_inlink">标准通用标记语言</a>的一个应用）或<a href="https://baike.baidu.com/item/XML?fromModule=lemma_inlink">XML</a>（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。 [1] </p><h1 id="一、字体图标"><a href="#一、字体图标" class="headerlink" title="一、字体图标"></a>一、字体图标</h1><p>展示的是图标、本质是一种字体，用于处理颜色单一的图片</p><h2 id="1-1步骤（阿里巴巴矢量标签库）"><a href="#1-1步骤（阿里巴巴矢量标签库）" class="headerlink" title="1.1步骤（阿里巴巴矢量标签库）"></a>1.1步骤（阿里巴巴矢量标签库）</h2><p>1、下载字体包</p><p>选中到购物车、添加到项目、引入css</p><p>2、使用图标</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    &lt;!-- 必须引入iconffont<span class="selector-class">.css</span>文件 --&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;./iconfont/iconfont<span class="selector-class">.css</span>&quot;&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        <span class="comment">/* 使用iconfont可以更改样式（全局更改） */</span></span><br><span class="line">        <span class="selector-class">.iconfont</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>: red;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">200px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;!-- iconfont类名必须引入 后面一个是需要调用的字体图标类名 --&gt;</span><br><span class="line">    &lt;<span class="selector-tag">span</span> class=&quot;iconfont <span class="attribute">icon</span>-favorites-fill&quot;&gt;&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">&lt;/<span class="selector-tag">body</span>&gt;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">    &lt;!-- 必须引入iconffont<span class="selector-class">.css</span>文件 --&gt;</span><br><span class="line">    &lt;link rel=&quot;stylesheet&quot; href=&quot;./iconfont/iconfont<span class="selector-class">.css</span>&quot;&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        *&#123;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">            <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">a</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>: <span class="number">#333</span>;</span><br><span class="line">            <span class="attribute">text-decoration</span>: none;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">li</span>&#123;</span><br><span class="line">            <span class="attribute">list-style</span>: none;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.nav</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* 使用iconfont可以更改样式 */</span></span><br><span class="line">        <span class="comment">/* 第二个类名可以单独更改 */</span></span><br><span class="line">        <span class="selector-class">.icon-favorites-fill</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>: red;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">200px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-class">.icon-cart-Empty-fill</span>&#123;</span><br><span class="line"></span><br><span class="line">            <span class="attribute">color</span>: orange;</span><br><span class="line">            <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;<span class="selector-tag">body</span>&gt;</span><br><span class="line">    &lt;!-- iconfont类名必须引入 后面一个是需要调用的字体图标类名 --&gt;</span><br><span class="line">    &lt;<span class="selector-tag">span</span> class=&quot;iconfont <span class="attribute">icon</span>-favorites-fill&quot;&gt;&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">    &lt;br&gt;</span><br><span class="line">    &lt;<span class="selector-tag">div</span> class=&quot;<span class="selector-tag">nav</span>&quot;&gt;</span><br><span class="line">        &lt;<span class="selector-tag">ul</span>&gt;</span><br><span class="line">            &lt;<span class="selector-tag">li</span>&gt;</span><br><span class="line">                &lt;<span class="selector-tag">a</span> href=&quot;#&quot;&gt;</span><br><span class="line">                    &lt;<span class="selector-tag">span</span> class=&quot;iconfont <span class="attribute">icon</span>-cart-Empty-fill&quot;&gt;&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">                    &lt;<span class="selector-tag">span</span>&gt;购物车&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">                    &lt;<span class="selector-tag">span</span> class=&quot;iconfont <span class="attribute">icon</span>-arrow-down&quot;&gt;&lt;/<span class="selector-tag">span</span>&gt;</span><br><span class="line">                &lt;/<span class="selector-tag">a</span>&gt;</span><br><span class="line">            &lt;/<span class="selector-tag">li</span>&gt;</span><br><span class="line">        &lt;/<span class="selector-tag">ul</span>&gt;</span><br><span class="line">    &lt;/<span class="selector-tag">div</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="1-2上传"><a href="#1-2上传" class="headerlink" title="1.2上传"></a>1.2上传</h2><p><strong>SVG格式文件上传再下载下来到项目中就可以使用</strong>（需要去除颜色并且提交）</p><h1 id="二、平面转换"><a href="#二、平面转换" class="headerlink" title="二、平面转换"></a>二、平面转换</h1><p> 改变盒子的形态（<strong>位移</strong>、旋转、<strong>缩放</strong>）</p><p>2D转换</p><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608111713072.png" class="" title="image-20220608111713072"><h2 id="2-1transform位移属性"><a href="#2-1transform位移属性" class="headerlink" title="2.1transform位移属性"></a>2.1transform位移属性</h2><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608112013969.png" class="" title="image-20220608112013969"><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608112538722.png" class="" title="image-20220608112538722"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.father</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.son</span>&#123;</span><br><span class="line">    <span class="comment">/* 平面水平垂直位移设置也可使用百分比 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">50px</span>,<span class="number">100px</span>);</span><br><span class="line">    <span class="comment">/* 单独设置某一方向 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateY</span>(<span class="number">30px</span>);</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">30px</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2绝对定位居中"><a href="#2-2绝对定位居中" class="headerlink" title="2.2绝对定位居中"></a>2.2绝对定位居中</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.son</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="comment">/* margin-left: -100px;</span></span><br><span class="line"><span class="comment">    margin-top: -50px; */</span></span><br><span class="line">    <span class="comment">/* 位移 */</span></span><br><span class="line">    <span class="comment">/* 取自身盒子计算结果 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>,-<span class="number">50%</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    .box:hover::after{</p><p>​      transform: translateX(100%);</p><p>​    }</p><p>选中box类名的after伪元素</p><h2 id="2-3旋转（必须配合过渡）"><a href="#2-3旋转（必须配合过渡）" class="headerlink" title="2.3旋转（必须配合过渡）"></a>2.3旋转（必须配合过渡）</h2><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608114813634.png" class="" title="image-20220608114813634"><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608114828132.png" class="" title="image-20220608114828132"><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608114908189.png" class="" title="image-20220608114908189"><h2 id="2-4改变转换原点"><a href="#2-4改变转换原点" class="headerlink" title="2.4改变转换原点"></a>2.4改变转换原点</h2><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608115222177.png" class="" title="image-20220608115222177"><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608115347157.png" class="" title="image-20220608115347157"><h2 id="2-5多重转换"><a href="#2-5多重转换" class="headerlink" title="2.5多重转换"></a>2.5多重转换</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="comment">/* 先旋转会改变坐标轴向会受影响 */</span></span><br><span class="line">    <span class="comment">/* 必须先位移再转换 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translate</span>(<span class="number">600px</span>) <span class="built_in">rotate</span>(<span class="number">720deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>translate和rotate联合使用</strong></p><p><strong>必须使用复合属性</strong></p><h2 id="2-6缩放"><a href="#2-6缩放" class="headerlink" title="2.6缩放"></a>2.6缩放</h2><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608120859735.png" class="" title="image-20220608120859735"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span><span class="selector-pseudo">:hover</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="comment">/* 缩放倍数 */</span></span><br><span class="line">    <span class="comment">/* 等比例缩放 */</span></span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">scale</span>(<span class="number">1.2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 作为复合写法 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">translate</span>(-<span class="number">50%</span>, -<span class="number">50%</span>) <span class="built_in">scale</span>(<span class="number">5</span>);</span><br></pre></td></tr></table></figure><h1 id="三、渐变"><a href="#三、渐变" class="headerlink" title="三、渐变"></a>三、渐变</h1><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 渐变颜色 */</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(pink,green,blue);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 半透明实现方式 */</span></span><br><span class="line"><span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(</span><br><span class="line">    transparent,</span><br><span class="line">    <span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0.6</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h1 id="四、空间转换"><a href="#四、空间转换" class="headerlink" title="四、空间转换"></a>四、空间转换</h1><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608150530915.png" class="" title="image-20220608150530915"><p>z轴为正：指向自己</p><h2 id="4-1-语法"><a href="#4-1-语法" class="headerlink" title="4.1 语法"></a>4.1 语法</h2><p>translate3d（x,y,z）</p><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608150731001.png" class="" title="image-20220608150731001"><h2 id="4-2透视属性prospective"><a href="#4-2透视属性prospective" class="headerlink" title="4.2透视属性prospective"></a>4.2透视属性prospective</h2><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608151421237.png" class="" title="image-20220608151421237"><p>值：视距</p><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608151758073.png" class="" title="image-20220608151758073"><h2 id="4-3空间旋转rotate"><a href="#4-3空间旋转rotate" class="headerlink" title="4.3空间旋转rotate"></a>4.3空间旋转rotate</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* x轴 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateX</span>(<span class="number">60deg</span>);</span><br><span class="line"><span class="comment">/* y轴 */</span></span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">60deg</span>);</span><br></pre></td></tr></table></figure><h2 id="4-4立体显示"><a href="#4-4立体显示" class="headerlink" title="4.4立体显示"></a>4.4立体显示</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.cube</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100px</span> auto;</span><br><span class="line">    <span class="comment">/* background-color: pink; */</span></span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">2s</span>;</span><br><span class="line">    <span class="comment">/* 父级添加立体显示属性 */</span></span><br><span class="line">    <span class="attribute">transform-style</span>: preserve-<span class="number">3</span>d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="comment">/* 定位在同一位置 */</span></span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.front</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">translateZ</span>(<span class="number">200px</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.back</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cube</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateY</span>(<span class="number">180deg</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1、父级添加transform-style属性</p><p>2、子级盒子按需定位</p><h2 id="4-5空间缩放"><a href="#4-5空间缩放" class="headerlink" title="4.5空间缩放"></a>4.5空间缩放</h2><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608175643512.png" class="" title="image-20220608175643512"><h1 id="五、动画animation"><a href="#五、动画animation" class="headerlink" title="五、动画animation"></a>五、动画animation</h1><p><strong>适用于多个状态间的变化过程，从中间可以控制</strong></p><p>过渡只能实现两个状态</p><h2 id="5-1实现步骤"><a href="#5-1实现步骤" class="headerlink" title="5.1实现步骤"></a>5.1实现步骤</h2><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608180321779.png" class="" title="image-20220608180321779"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">        <span class="selector-class">.box</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">            <span class="comment">/* 使用动画 */</span></span><br><span class="line">            <span class="attribute">animation</span>: change <span class="number">1s</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* 定义动画 */</span></span><br><span class="line">        <span class="keyword">@keyframes</span> change &#123;</span><br><span class="line">            <span class="selector-tag">from</span>&#123;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="selector-tag">to</span>&#123;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/*方式二*/</span></span><br><span class="line">        <span class="keyword">@keyframes</span> change2 &#123;</span><br><span class="line">            <span class="comment">/* 百分比指的是动画总时长的占比 */</span></span><br><span class="line">            <span class="number">0%</span>&#123;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/* 占时50% */</span></span><br><span class="line">            <span class="number">50%</span>&#123;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">                <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="number">100%</span>&#123;</span><br><span class="line">                <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">                <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="5-2animation其余属性"><a href="#5-2animation其余属性" class="headerlink" title="5.2animation其余属性"></a>5.2animation其余属性</h2><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608181002210.png" class="" title="image-20220608181002210"><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608182524530.png" class="" title="image-20220608182524530"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">    <span class="comment">/* 使用动画 */</span></span><br><span class="line">    <span class="attribute">animation</span>: change <span class="number">1s</span> ;</span><br><span class="line">    <span class="comment">/* 动画名称和时长必须有值 */</span></span><br><span class="line">    <span class="comment">/* 速度曲线：是否加速度: 匀速linear、加速、step（3）分步动画*/</span></span><br><span class="line">    <span class="comment">/* 延迟时间：控制动画的先后出厂顺序 */</span></span><br><span class="line">    <span class="comment">/* 重复次数：动画播放的次数 无限循环次数：infinite */</span></span><br><span class="line">    <span class="comment">/* 动画方向： alterdate 反复执行，从最终位置慢慢回到初始*/</span></span><br><span class="line">    <span class="comment">/* 执行完毕时状态：backwards：动画停留在最初的状态 forwards：动画停留在结束状态 */</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/* 拆分写法（了解） */</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3逐帧动画"><a href="#5-3逐帧动画" class="headerlink" title="5.3逐帧动画"></a>5.3逐帧动画</h2><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220608183718646.png" class="" title="image-20220608183718646"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">tyle&gt;</span><br><span class="line">        <span class="selector-class">.box</span>&#123;</span><br><span class="line">            <span class="comment">/* 保证显示区域尺寸和一个精灵图的尺寸相同 */</span></span><br><span class="line">            <span class="attribute">width</span>: <span class="number">140px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">140px</span>;</span><br><span class="line">            <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="string">./images/bg.png</span>);</span><br><span class="line">            <span class="comment">/* 精灵小图的个数 */</span></span><br><span class="line">            <span class="attribute">animation</span>: move <span class="number">1s</span> <span class="built_in">steps</span>(<span class="number">12</span>) infinite;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">@keyframes</span> move &#123;</span><br><span class="line">            <span class="selector-tag">from</span>&#123;</span><br><span class="line">                <span class="attribute">background-position</span>: <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="selector-tag">to</span>&#123;</span><br><span class="line">                <span class="comment">/* 1680精灵图的宽度 */</span></span><br><span class="line">                <span class="attribute">background-position</span>: -<span class="number">1680px</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="5-4多组动画"><a href="#5-4多组动画" class="headerlink" title="5.4多组动画"></a>5.4多组动画</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 精灵小图的个数 */</span></span><br><span class="line"><span class="attribute">animation</span>: move <span class="number">1s</span> <span class="built_in">steps</span>(<span class="number">12</span>) infinite,</span><br><span class="line">run <span class="number">8s</span> forwards;</span><br></pre></td></tr></table></figure><p><strong>多组动画用逗号隔开</strong></p><h2 id="5-5无缝动画"><a href="#5-5无缝动画" class="headerlink" title="5.5无缝动画"></a>5.5无缝动画</h2><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220609102646567.png" class="" title="image-20220609102646567"><p><strong>需要多加后面三张相同的图片</strong></p><h2 id="5-6背景图设置方式"><a href="#5-6背景图设置方式" class="headerlink" title="5.6背景图设置方式"></a>5.6背景图设置方式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line">    <span class="comment">/* html网页高度不和浏览器一样大通过这个属性解决 */</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">url</span>(<span class="string">./images/f1_1.jpg</span>) no-repeat center;</span><br><span class="line">    <span class="comment">/* 缩放背景图 */</span></span><br><span class="line">    <span class="comment">/* contain：背景等比例缩放 */</span></span><br><span class="line">    <span class="comment">/* cover：保证背景图完全覆盖盒子 */</span></span><br><span class="line">    <span class="attribute">background-size</span>: cover;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 引入图片 */</span></span><br><span class="line"><span class="comment">/* 控制图片位置 */</span></span><br><span class="line"><span class="comment">/* 使用动画 */</span></span><br><span class="line"><span class="selector-class">.cloud</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>:absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cloud</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">top</span>:<span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">animation</span>: cloud <span class="number">1s</span> infinite alternate;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cloud</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">animation</span>: cloud <span class="number">1s</span> infinite alternate <span class="number">0.2s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.cloud</span> <span class="selector-tag">img</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">550px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">animation</span>: cloud <span class="number">1s</span> infinite alternate <span class="number">0.4s</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 动画 */</span></span><br><span class="line"><span class="keyword">@keyframes</span> cloud &#123;</span><br><span class="line">    <span class="selector-tag">to</span>&#123;</span><br><span class="line">        <span class="attribute">transform</span>: <span class="built_in">translateX</span>(<span class="number">20px</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六、移动适配"><a href="#六、移动适配" class="headerlink" title="六、移动适配"></a>六、移动适配</h1><p><strong>网页元素的宽高随着设备的宽高而变化</strong></p><h2 id="6-1rem解决方案"><a href="#6-1rem解决方案" class="headerlink" title="6.1rem解决方案"></a>6.1rem解决方案</h2><p><strong>尺寸单位相对于HTML标签的字号</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">    *&#123;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/* 1rem = 1html字号大小 使用rem单位必须设置html字号 */</span></span><br><span class="line">    <span class="selector-tag">html</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.box</span>&#123;</span><br><span class="line">        <span class="comment">/* 5*20 = 100px */</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">5rem</span>;</span><br><span class="line">        <span class="comment">/* 3*20 = 60px */</span></span><br><span class="line">        <span class="attribute">height</span>: <span class="number">3rem</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: pink;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="6-2rem媒体查询"><a href="#6-2rem媒体查询" class="headerlink" title="6.2rem媒体查询"></a>6.2rem媒体查询</h2><p><strong>检测视口的宽使用差异化的CSS</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 视口宽度375px的时候使用该html的字号 */</span></span><br><span class="line"><span class="keyword">@media</span>(width:375px)&#123;</span><br><span class="line">    <span class="selector-tag">html</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220610103410324.png" class="" title="image-20220610103410324"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span>(width:320px)&#123;</span><br><span class="line">    <span class="selector-tag">html</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">32px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span>(width:375px)&#123;</span><br><span class="line">    <span class="selector-tag">html</span>&#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">37.5px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">5rem</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">3rem</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220610104052471.png" class="" title="image-20220610104052471"><h2 id="6-3flexible-js适配移动端视口框架无需媒体查询"><a href="#6-3flexible-js适配移动端视口框架无需媒体查询" class="headerlink" title="6.3flexible.js适配移动端视口框架无需媒体查询"></a>6.3flexible.js适配移动端视口框架无需媒体查询</h2><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220610104800462.png" class="" title="image-20220610104800462"><h2 id="6-4Less使用"><a href="#6-4Less使用" class="headerlink" title="6.4Less使用"></a>6.4Less使用</h2><p>简便书写CSS工具</p><p>后缀名为.less扩充CSS语言具有一定逻辑性和计算能力</p><p><strong>浏览器不支持识别less代码</strong></p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// out: ./abc/</span></span><br><span class="line"><span class="comment">// 第一行设置单独导出路径需要加注释也可以单独设置导出CSS的文件名</span></span><br><span class="line"><span class="comment">// 单行注释</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">// 导入less</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;test.less&#x27;</span>;</span><br><span class="line"><span class="comment">// // 可以不写less后缀</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&#x27;./less&#x27;</span>;</span><br><span class="line"><span class="comment">// less的size运算</span></span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">10</span>+<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100</span>-<span class="number">10px</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 除法需要加括号</span></span><br><span class="line">    <span class="attribute">width</span>: (<span class="number">68</span> / <span class="number">37.5rem</span>);</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">29</span>./ <span class="number">37.5rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// less嵌套(快速生成后代选择器)</span></span><br><span class="line"><span class="selector-class">.father</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="selector-class">.son</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>: blueviolet;</span><br><span class="line">        <span class="comment">// .father .son:hover &#123;</span></span><br><span class="line">        <span class="comment">// &amp; 表示当前选择器</span></span><br><span class="line">        <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">            <span class="attribute">color</span>: green;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// less变量</span></span><br><span class="line"><span class="comment">// @变量名：值；</span></span><br><span class="line"><span class="comment">// CSS属性：@变量名</span></span><br><span class="line"><span class="comment">// 方便后期修改</span></span><br><span class="line"><span class="variable">@color:</span> pink;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.text</span>&#123;</span><br><span class="line">    <span class="comment">// 使用变量名</span></span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导出CSS文件的方法</span></span><br><span class="line"><span class="comment">// 1、easy插件里配置json配置文件</span></span><br><span class="line"><span class="comment">// 2、在第一行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 禁止导出 out：false（导入的less文件不需要导出）一定要在第一行</span></span><br></pre></td></tr></table></figure><h2 id="6-5Less配置CSS文件保存路径"><a href="#6-5Less配置CSS文件保存路径" class="headerlink" title="6.5Less配置CSS文件保存路径"></a>6.5Less配置CSS文件保存路径</h2><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220610112915166.png" class="" title="image-20220610112915166"><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;workbench.colorTheme&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Default Dark+&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;less.compile&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;out&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./images/&quot;</span>  保存路径</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="6-6vw-、vh-解决方案"><a href="#6-6vw-、vh-解决方案" class="headerlink" title="6.6vw 、vh 解决方案"></a>6.6vw 、vh 解决方案</h2><p><strong>相对于视口的尺寸计算结果</strong></p><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220610184846001.png" class="" title="image-20220610184846001"><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220610185504947.png" class="" title="image-20220610185504947"><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220610185716308.png" class="" title="image-20220610185716308"><p><strong>实际开发中不允许vw和vh混用这样会导致盒子的大小发生改变，特别是在全面屏手机上由于比例不相同</strong></p><h1 id="七、响应式网页"><a href="#七、响应式网页" class="headerlink" title="七、响应式网页"></a>七、响应式网页</h1><p><strong>一套代码适配不同的屏幕设备</strong></p><h2 id="7-1媒体查询"><a href="#7-1媒体查询" class="headerlink" title="7.1媒体查询"></a>7.1媒体查询</h2><p>根据条件的不同设置不同的CSS属性，设置差异化CSS样式</p><p>媒体特性：max-width最大宽度 、 min-width最小宽度</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    <span class="comment">/* 判断视口的宽度小于等于768px的时候设置的CSS */</span></span><br><span class="line">    <span class="keyword">@media</span> (<span class="attribute">max-width</span>:<span class="number">768px</span>) &#123;</span><br><span class="line">        <span class="selector-tag">body</span>&#123;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>书写顺序：所有CSS属性都有层叠性</p><p>min-width：从小到大书写</p><p>max-width：从大到小书写</p><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220611113944237.png" class="" title="image-20220611113944237"><p>媒体查询使用在link标签上：使得某个CSS文件生效</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">media</span>=<span class="string">&quot;(min-width:992px)&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./demo.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="7-2Bootstrap框架"><a href="#7-2Bootstrap框架" class="headerlink" title="7.2Bootstrap框架"></a>7.2Bootstrap框架</h2><p>https&#x2F;&#x2F;<a href="http://www.bootcss.com/">www.bootcss.com</a></p><h3 id="7-2-1使用步骤"><a href="#7-2-1使用步骤" class="headerlink" title="7.2.1使用步骤"></a>7.2.1使用步骤</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 引入bootstrap的样式必须引入该样式 --&gt;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;./bootstrap-<span class="number">3.4</span>.<span class="number">1</span>-dist/css/bootstrap<span class="selector-class">.min</span><span class="selector-class">.css</span>&quot;&gt;   也可以使用 bootstrap<span class="selector-class">.css</span></span><br><span class="line">  &lt;style&gt;</span><br></pre></td></tr></table></figure><p>min.css：压缩过的加载速度快</p><h3 id="7-2-2栅格系统（响应式网页的布局）"><a href="#7-2-2栅格系统（响应式网页的布局）" class="headerlink" title="7.2.2栅格系统（响应式网页的布局）"></a>7.2.2栅格系统（响应式网页的布局）</h3><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220611121301602.png" class="" title="image-20220611121301602"><p><strong>网页等分12份，盒子占对应的份数即可</strong></p><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220611121547702.png" class="" title="image-20220611121547702"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">&lt;!-- 引入bootstrap样式表 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./bootstrap-3.4.1-dist/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.container</span> <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">50px</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 需求: 大屏: 一行排列4个内容; 中屏:一行排列2个内容 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 版心的类名container --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 网页一共12份 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 大屏幕占3份  中屏幕占6份 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用内容水平排列使用的是浮动解决 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-3 col-md-6&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-3 col-md-6&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-3 col-md-6&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-3 col-md-6&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>其余类名</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 版心样式:自带左右各15px的padding --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- row类作用就是抵消container类的15px的内边距, row有-15px的外边距 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 自定义padding --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使得子级紧贴父级边缘 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 宽度100%:自带左右各15px的padding --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-2-3全局CSS样式（标签样式）"><a href="#7-2-3全局CSS样式（标签样式）" class="headerlink" title="7.2.3全局CSS样式（标签样式）"></a>7.2.3全局CSS样式（标签样式）</h3><p><strong>表格样式</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./bootstrap-3.4.1-dist/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class="line"> <span class="comment">&lt;!-- 根据中文文档给出的类名复制粘贴 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;table table-striped table-bordered table-hover&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>按钮样式</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./bootstrap-3.4.1-dist/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-success btn-lg&quot;</span>&gt;</span>成功<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-warning btn-xs&quot;</span>&gt;</span>警告<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-2-4Bootstrap组件（常见网页区域）"><a href="#7-2-4Bootstrap组件（常见网页区域）" class="headerlink" title="7.2.4Bootstrap组件（常见网页区域）"></a>7.2.4Bootstrap组件（常见网页区域）</h3><p>下拉菜单、字体图标、弹出框等等</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>组件<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./bootstrap-3.4.1-dist/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dropdown&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-default dropdown-toggle&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">id</span>=<span class="string">&quot;dropdownMenu1&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line">          下拉</span><br><span class="line">          <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;caret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span> <span class="attr">aria-labelledby</span>=<span class="string">&quot;dropdownMenu1&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Another action<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Something else here<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span> <span class="attr">role</span>=<span class="string">&quot;separator&quot;</span> <span class="attr">class</span>=<span class="string">&quot;divider&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Separated link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;breadcrumb&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>用户中心<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>用户<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span>数据<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-2-5文字图标"><a href="#7-2-5文字图标" class="headerlink" title="7.2.5文字图标"></a>7.2.5文字图标</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- glyphicon默认图标类名  图标类名--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-user&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-2-6插件（封装html、css、js）"><a href="#7-2-6插件（封装html、css、js）" class="headerlink" title="7.2.6插件（封装html、css、js）"></a>7.2.6插件（封装html、css、js）</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./bootstrap-3.4.1-dist/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 引入js文件注意顺序 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./bootstrap-3.4.1-dist/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="7-2-7全局样式"><a href="#7-2-7全局样式" class="headerlink" title="7.2.7全局样式"></a>7.2.7全局样式</h3><p>有对应的类来清除浮动</p><p>响应式工具（在不同的视口的元素显示隐藏）</p><p><strong>企业站、内容比较少的网站适合做全局响应式</strong></p><img src="/2022/09/04/CSS%E8%BF%9B%E9%98%B6/image-20220611145559046.png" class="" title="image-20220611145559046"><h1 id="实际开发（字体图标权重问题）"><a href="#实际开发（字体图标权重问题）" class="headerlink" title="实际开发（字体图标权重问题）"></a>实际开发（字体图标权重问题）</h1><p><strong>在设置字体图标的时候发现没有更改样式很大原因是字体权重不够应该选中iconfont类名</strong></p><p><strong>z-index：设置元素堆叠顺序（仅能在定位元素上生效）解决固定定位后滑动屏幕导致不显示固定定位元素</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 不能给<span class="attribute">margin</span>加间距因为框架是百分比布局</span><br><span class="line">// 需要使用<span class="attribute">padding</span>解决</span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: skyblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML</title>
      <link href="/2022/09/04/HTML/"/>
      <url>/2022/09/04/HTML/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>HTML的全称为<a href="https://baike.baidu.com/item/%E8%B6%85%E6%96%87%E6%9C%AC%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/6972570?fromModule=lemma_inlink">超文本标记语言</a>，是一种<a href="https://baike.baidu.com/item/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/5964436?fromModule=lemma_inlink">标记语言</a>。它包括一系列<a href="https://baike.baidu.com/item/%E6%A0%87%E7%AD%BE/2440469?fromModule=lemma_inlink">标签</a>．通过这些标签可以将网络上的<a href="https://baike.baidu.com/item/%E6%96%87%E6%A1%A3/1009768?fromModule=lemma_inlink">文档</a>格式统一，使分散的<a href="https://baike.baidu.com/item/Internet/272794?fromModule=lemma_inlink">Internet</a>资源连接为一个逻辑整体。HTML文本是由HTML命令组成的描述性<a href="https://baike.baidu.com/item/%E6%96%87%E6%9C%AC/5443630?fromModule=lemma_inlink">文本</a>，HTML命令可以说明<a href="https://baike.baidu.com/item/%E6%96%87%E5%AD%97/612910?fromModule=lemma_inlink">文字</a>，<a href="https://baike.baidu.com/item/%E5%9B%BE%E5%BD%A2/773307?fromModule=lemma_inlink">图形</a>、<a href="https://baike.baidu.com/item/%E5%8A%A8%E7%94%BB/206564?fromModule=lemma_inlink">动画</a>、<a href="https://baike.baidu.com/item/%E5%A3%B0%E9%9F%B3/33686?fromModule=lemma_inlink">声音</a>、<a href="https://baike.baidu.com/item/%E8%A1%A8%E6%A0%BC/3371820?fromModule=lemma_inlink">表格</a>、<a href="https://baike.baidu.com/item/%E9%93%BE%E6%8E%A5/2665501?fromModule=lemma_inlink">链接</a>等。</p><h1 id="一、HTML基本概念"><a href="#一、HTML基本概念" class="headerlink" title="一、HTML基本概念"></a>一、HTML基本概念</h1><h2 id="1-1-骨架结构"><a href="#1-1-骨架结构" class="headerlink" title="1.1    骨架结构"></a>1.1    骨架结构</h2><p>html：网页整体</p><p>head：网页头部</p><p>body：网页身体</p><p>title：网页标题</p><h2 id="1-2-快捷键"><a href="#1-2-快捷键" class="headerlink" title="1.2    快捷键"></a>1.2    快捷键</h2><table><thead><tr><th>快捷键</th><th>效果</th></tr></thead><tbody><tr><td>！</td><td>自动生成html骨架</td></tr><tr><td>ctrl+&#x2F;</td><td>注释</td></tr><tr><td>ctrl+d</td><td>多光标修改同样文字</td></tr></tbody></table><h2 id="1-3-注释"><a href="#1-3-注释" class="headerlink" title="1.3    注释"></a>1.3    注释</h2><!--  --><h2 id="1-4-标签结构"><a href="#1-4-标签结构" class="headerlink" title="1.4    标签结构"></a>1.4    标签结构</h2><p>1、单标签</p><p>2、双标签</p><h1 id="二、标签"><a href="#二、标签" class="headerlink" title="二、标签"></a>二、标签</h1><h2 id="2-1-标题标签"><a href="#2-1-标题标签" class="headerlink" title="2.1    标题标签"></a>2.1    标题标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2022/09/04/HTML/image-20220523112136876.png" class="" title="image-20220523112136876"><h2 id="2-2-段落标签"><a href="#2-2-段落标签" class="headerlink" title="2.2    段落标签"></a>2.2    段落标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>     <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>特点：</p><p>1、段落之间存在间隙</p><p>2、每个段落尾部为占满网页内容会独占一行</p><h2 id="2-3-换行标签"><a href="#2-3-换行标签" class="headerlink" title="2.3    换行标签"></a>2.3    换行标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-4-水平分割线"><a href="#2-4-水平分割线" class="headerlink" title="2.4    水平分割线"></a>2.4    水平分割线</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-5-文本格式化标签"><a href="#2-5-文本格式化标签" class="headerlink" title="2.5    文本格式化标签"></a>2.5    文本格式化标签</h2><table><thead><tr><th>标签</th><th>说明</th><th>标签</th><th>说明</th></tr></thead><tbody><tr><td><b></td><td>加粗</td><td><strong></td><td>加粗</td></tr><tr><td><u></td><td>下划线</td><td><ins></td><td>下划线</td></tr><tr><td><i></td><td>倾斜</td><td><em></td><td>倾斜</td></tr><tr><td><s></td><td>删除线</td><td><del></td><td>删除线</td></tr></tbody></table><p><font color = red>根据当前的语义选择不同标签（强调就选后者）</font></p><h2 id="2-6-图片标签"><a href="#2-6-图片标签" class="headerlink" title="2.6    图片标签"></a>2.6    图片标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./img/00874a5e-0df2-446b-8f69-a30edasb7d88ee8.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;加载失败&quot;</span> <span class="attr">title</span>=<span class="string">&quot;悬停的时候显示&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100&quot;</span> <span class="attr">height</span>=<span class="string">&quot;100&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>src：图片的路径（.&#x2F; 代表当前目录，..&#x2F;代表上级目录，默认不写也是代表当前目录）</p><p>alt：图片加载失败的时候显示的文本</p><p>title：鼠标悬停时显示的文本</p><p>width、height：宽度、高度，只需要设置一个属性，图片就可以等比例缩放</p><h2 id="2-7-音频标签"><a href="#2-7-音频标签" class="headerlink" title="2.7    音频标签"></a>2.7    音频标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span> <span class="attr">loop</span> &gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p>src：音频路径</p><p>controls：显示播放的控件</p><p>autoplay：自动播放（部分浏览器不支持）</p><p>loop：循环播放</p><h2 id="2-8-视频标签"><a href="#2-8-视频标签" class="headerlink" title="2.8    视频标签"></a>2.8    视频标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">controls</span> <span class="attr">autoplay</span>  <span class="attr">muted</span> <span class="attr">loop</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>src：视频路径</p><p>controls：显示播放的控件</p><p>autoplay：自动播放（<strong>谷歌浏览器可以使用muted静音属性实现自动播放</strong>）</p><p>loop：循环播放</p><h2 id="2-9-超链接标签"><a href="#2-9-超链接标签" class="headerlink" title="2.9    超链接标签"></a>2.9    超链接标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./html骨架.html&quot;</span>&gt;</span>超链接点击<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>href跳转地址：可以跳转到html的静态页面、也可以挑战到url的网址</p><p><strong>对于不知道跳转哪个页面的时候可以写  #</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;./html骨架.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_self / _blank&quot;</span>&gt;</span>超链接点击<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>target：默认_self在原网页打开，在新的窗口打开 _blank</strong></p><h2 id="2-10-列表标签"><a href="#2-10-列表标签" class="headerlink" title="2.10    列表标签"></a>2.10    列表标签</h2><h3 id="1、无序列表"><a href="#1、无序列表" class="headerlink" title="1、无序列表"></a>1、无序列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        列表项1</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">        列表项2</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ul：列表中的整体</p><p>li：列表中的每一项</p><img src="/2022/09/04/HTML/image-20220531100006950.png" class="" title="image-20220531100006950"><h3 id="2、有序列表"><a href="#2、有序列表" class="headerlink" title="2、有序列表"></a>2、有序列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>100<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>200<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2022/09/04/HTML/image-20220531100054828.png" class="" title="image-20220531100054828"><h3 id="3、自定义列表"><a href="#3、自定义列表" class="headerlink" title="3、自定义列表"></a>3、自定义列表</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dt</span>&gt;</span>主题<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dd</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dd</span>&gt;</span>内容2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2022/09/04/HTML/image-20220531100312238.png" class="" title="image-20220531100312238"><p><strong>默认显示缩进效果</strong></p><p>dl：整体包裹</p><p>dt：主题</p><p>dd：每项内容</p><h2 id="2-11-表格标签"><a href="#2-11-表格标签" class="headerlink" title="2.11    表格标签"></a>2.11    表格标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2222<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>22222<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>tr：行</p><p>td：行中的列</p><h3 id="1、表格标题，表头单元格标签"><a href="#1、表格标题，表头单元格标签" class="headerlink" title="1、表格标题，表头单元格标签"></a>1、表格标题，表头单元格标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">caption</span>&gt;</span></span><br><span class="line">        表格表头标签</span><br><span class="line">    <span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span>成绩<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>2222<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>22222<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>caption：表格表头标签，书写在table标签里</p><p>th：表头单元格标签书写在tr中</p><h3 id="2、结构标签（了解）"><a href="#2、结构标签（了解）" class="headerlink" title="2、结构标签（了解）"></a>2、结构标签（了解）</h3><p>强调表格中的结构</p><img src="/2022/09/04/HTML/image-20220531101718556.png" class="" title="image-20220531101718556"><h3 id="3、合并单元格"><a href="#3、合并单元格" class="headerlink" title="3、合并单元格"></a>3、合并单元格</h3><p> 上下合并：保留最上的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>单元格合并<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>3333<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;td&gt;22222&lt;/td&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>55555<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><p>左右合并：保留最左的</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>单元格合并<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>3333<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>11111<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>22222<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;td&gt;55555&lt;/td&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>不能跨结构标签合并单元格</strong></p><p><strong>跨行合并（上下合并）：rowspan &#x3D; “合并单元格个数”</strong></p><p><strong>跨列合并（垂直合并）： colspan &#x3D; “合并单元格个数”</strong></p><h2 id="2-12-表单标签"><a href="#2-12-表单标签" class="headerlink" title="2.12    表单标签"></a>2.12    表单标签</h2><p>登录、注册、搜索</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 文本框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 密码框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 单选框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 复选框 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 上传文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br></pre></td></tr></table></figure><p>placeholder：文本、密码框占位符</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 提示用户输入的文本 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-12-1-单选功能"><a href="#2-12-1-单选功能" class="headerlink" title="2.12.1    单选功能"></a>2.12.1    单选功能</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--单选功能  --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">checked</span>&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>&gt;</span>女</span><br></pre></td></tr></table></figure><p><strong>name属性需要一致才能实现单选</strong></p><h3 id="2-12-2-上传多个文件"><a href="#2-12-2-上传多个文件" class="headerlink" title="2.12.2    上传多个文件"></a>2.12.2    上传多个文件</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 上传多个文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">multiple</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>multiple：表示加入多个属性</strong></p><h3 id="2-12-3-form表单标签"><a href="#2-12-3-form表单标签" class="headerlink" title="2.12.3    form表单标签"></a>2.12.3    form表单标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 提交按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 重置按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- button按钮 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> =<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;value属性设置按钮文字&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>value： 设置按钮的文字</p><p>reset：重置表单内容</p><h3 id="2-12-4-button标签"><a href="#2-12-4-button标签" class="headerlink" title="2.12.4    button标签"></a>2.12.4    button标签</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>注册<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;reset&quot;</span>&gt;</span>重置按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span>&gt;</span>普通按钮<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-13-下拉菜单"><a href="#2-13-下拉菜单" class="headerlink" title="2.13    下拉菜单"></a>2.13    下拉菜单</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 下拉菜单的整体 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- selected 下拉菜单项的默认选中 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">selected</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-14-textarea文本域标签"><a href="#2-14-textarea文本域标签" class="headerlink" title="2.14    textarea文本域标签"></a>2.14    textarea文本域标签</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-15-label标签"><a href="#2-15-label标签" class="headerlink" title="2.15    label标签"></a>2.15    label标签</h2><p><strong>解决整体选择问题</strong></p><p>1、设置id并且保证和label的for属性相同</p><p>2、直接包裹，删除for属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">id</span>=<span class="string">&quot;nan&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;nan&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span>&gt;</span>女</span><br><span class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-16-语义化标签"><a href="#2-16-语义化标签" class="headerlink" title="2.16    语义化标签"></a>2.16    语义化标签</h2><p>无语义标签：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 多个div标签之间换行展示 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    1</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    2</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- span不换行展示 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>2<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><p>有语义标签：<strong>仅用于做手机端网页</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 有语义标签 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span>网页头部<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span>网页导航<span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span>网页底部<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span>网页侧边栏<span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span>网页区块<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span>网页文章区域<span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-17-字符实体"><a href="#2-17-字符实体" class="headerlink" title="2.17    字符实体"></a>2.17    字符实体</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 网页不认识多个空格认识一个空格 --&gt;</span></span><br><span class="line">你在干什么     啊？</span><br></pre></td></tr></table></figure><p>解决：浏览器只认识一个空格</p><img src="/2022/09/04/HTML/image-20220604121331309.png" class="" title="image-20220604121331309">]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java</title>
      <link href="/2022/09/04/Java/"/>
      <url>/2022/09/04/Java/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Java 是由 Sun Microsystems 公司于 1995 年 5 月推出的高级程序设计语言。</p><p>Java 可运行于多个平台，如 Windows, Mac OS 及其他多种 UNIX 版本的系统。</p><h1 id="一、Java运行环境"><a href="#一、Java运行环境" class="headerlink" title="一、Java运行环境"></a>一、Java运行环境</h1><h2 id="1-1编译运行"><a href="#1-1编译运行" class="headerlink" title="1.1编译运行"></a>1.1编译运行</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javac 类名.class/类名.java</span><br><span class="line">java 类名</span><br></pre></td></tr></table></figure><h1 id="二、Java数据结构"><a href="#二、Java数据结构" class="headerlink" title="二、Java数据结构"></a>二、Java数据结构</h1><h2 id="2-1命名规范"><a href="#2-1命名规范" class="headerlink" title="2.1命名规范"></a>2.1命名规范</h2><table><thead><tr><th>内容</th><th>规范</th></tr></thead><tbody><tr><td>类名</td><td>大写字母开头，驼峰命名</td></tr><tr><td>变量</td><td>小写字母开头，驼峰命名</td></tr><tr><td>常量</td><td>大写字母，<code>_</code>分割</td></tr></tbody></table><h2 id="2-2main函数"><a href="#2-2main函数" class="headerlink" title="2.2main函数"></a>2.2main函数</h2><p>main函数的退出码为0，表示成功的运行了程序</p><p>args：命令行参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java Message -g cruel world 以命令行方式启动程序</span><br><span class="line">则args参数为：</span><br><span class="line">args[0]:-g</span><br><span class="line">args[1]:cruel</span><br><span class="line">args[2]:world</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 采用严格的浮点计算</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">strictfp</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3注释"><a href="#2-3注释" class="headerlink" title="2.3注释"></a>2.3注释</h2><p>单行：<code>//</code></p><p>多行：<code>/*  */</code></p><p>文档：<code>/**   */</code></p><p>文档注释使用（可指定存储位置）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javadoc -encoding UTF-8 User.java</span><br></pre></td></tr></table></figure><h2 id="2-4整型"><a href="#2-4整型" class="headerlink" title="2.4整型"></a>2.4整型</h2><table><thead><tr><th>类型</th><th>存储需求（字节）</th><th>注意</th></tr></thead><tbody><tr><td>int</td><td>4</td><td></td></tr><tr><td>short</td><td>2</td><td></td></tr><tr><td>long</td><td>8</td><td>加后缀l或L</td></tr><tr><td>byte</td><td>1</td><td></td></tr></tbody></table><p>二进制：0b、0B</p><p>八进制：前缀0</p><p>十六机制：0x、0X</p><h2 id="2-5浮点"><a href="#2-5浮点" class="headerlink" title="2.5浮点"></a>2.5浮点</h2><table><thead><tr><th>类型</th><th>存储需求（字节）</th><th>注意</th></tr></thead><tbody><tr><td>float</td><td>4</td><td>有效位6-7，加后缀f或F</td></tr><tr><td>double</td><td>8</td><td>有效位15</td></tr></tbody></table><p><strong>浮点数不适用于金融计算。二进制系统无法精确的表示，会存在舍入误差，需要使用BigDecimal类解决</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="number">2.0</span>-<span class="number">1.1</span>);</span><br><span class="line">==&gt;<span class="number">0.8999999999999999</span></span><br></pre></td></tr></table></figure><h2 id="2-6char"><a href="#2-6char" class="headerlink" title="2.6char"></a>2.6char</h2><p>使用单引号括起来，可以包含特殊的转义字符</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x27;a&#x27;  &#x27;\u0008&#x27; &#x27;\u000a&#x27;</span><br></pre></td></tr></table></figure><h2 id="2-7boolean"><a href="#2-7boolean" class="headerlink" title="2.7boolean"></a>2.7boolean</h2><p>fasle和true，整型值和布尔值不能转换</p><h2 id="2-8变量"><a href="#2-8变量" class="headerlink" title="2.8变量"></a>2.8变量</h2><p><strong>必须显示的初始化变量，否则会报错</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">boolean</span> <span class="variable">test</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">System.out.println(test);</span><br></pre></td></tr></table></figure><h2 id="2-9常量"><a href="#2-9常量" class="headerlink" title="2.9常量"></a>2.9常量</h2><p>只能被赋值一次</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Constant</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">TEST</span> <span class="operator">=</span> <span class="number">1</span>; <span class="comment">// 类常量：可以在不同类的多个方法使用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">TEST_2</span> <span class="operator">=</span> <span class="number">2</span>; <span class="comment">// 只允许在本类中使用的常量</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类常量调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">test</span> <span class="operator">=</span> Constant.TEST;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-10枚举"><a href="#2-10枚举" class="headerlink" title="2.10枚举"></a>2.10枚举</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 声明枚举类</span></span><br><span class="line"><span class="comment"> * 可以为枚举类添加构造器、方法、字段</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">Enum</span> &#123;</span><br><span class="line">    SMALL(<span class="string">&quot;小&quot;</span>),MEDIUM(<span class="string">&quot;中&quot;</span>),LARGE(<span class="string">&quot;大&quot;</span>);  <span class="comment">// 类似于一个个构造器</span></span><br><span class="line">    <span class="keyword">private</span> String size;</span><br><span class="line">    Enum(String size)&#123;</span><br><span class="line">        <span class="built_in">this</span>.size = size;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSize</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testEnum</span><span class="params">()</span>&#123;</span><br><span class="line">    System.out.println(Enum.MEDIUM.getSize()); <span class="comment">// 获取常量值</span></span><br><span class="line">    <span class="type">Enum</span> <span class="variable">large</span> <span class="operator">=</span> Enum.valueOf(Enum.class, <span class="string">&quot;LARGE&quot;</span>);  <span class="comment">// 返回给定名字指定类型的常量名</span></span><br><span class="line">    System.out.println(large);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-11数值类型转换"><a href="#2-11数值类型转换" class="headerlink" title="2.11数值类型转换"></a>2.11数值类型转换</h2><p>两个操作数在运算的时候会自动转为精度高一级的类型计算</p><p>对于整数+浮点数</p><ul><li>有一个操作数是double，转为double</li><li>有一个操作数为float，转为float</li><li>两个都是int，转为int</li></ul><h2 id="2-12强制类型转换"><a href="#2-12强制类型转换" class="headerlink" title="2.12强制类型转换"></a>2.12强制类型转换</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> (<span class="type">int</span>)<span class="number">3.99</span></span><br><span class="line">==&gt;<span class="number">3</span>  <span class="comment">// 截取小数部分</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testCast</span><span class="params">()</span>&#123;</span><br><span class="line">    System.out.println(Math.round(<span class="number">9.998</span>)); <span class="comment">// 四舍五入</span></span><br><span class="line">&#125;</span><br><span class="line">==&gt;<span class="number">10</span></span><br></pre></td></tr></table></figure><h2 id="2-13String类型"><a href="#2-13String类型" class="headerlink" title="2.13String类型"></a>2.13String类型</h2><p>String类对象是不可变的，Java将字符串存入公共存储池中，变量指向存池中字符串的位置，复制变量就可以将多个变量指向相同的位置。</p><p>字符串类型在堆中分配，且具有自动垃圾回收机制，不会导致内存泄露。</p><p><strong>禁止使用 &#x3D;&#x3D; 对比，因为如果放在同一位置上是相等的，如果有多个字符串副本放在不同位置上，就会存在bug</strong></p><p><strong>注意：null不是空串，<code>str != null</code> 判断</strong></p><p>常用方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testString</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="string">&quot;Hello&quot;</span>;</span><br><span class="line">    <span class="comment">// 截取字符串</span></span><br><span class="line">    System.out.println(<span class="string">&quot;str.substring(0, 3) = &quot;</span> + str.substring(<span class="number">0</span>, <span class="number">3</span>));  <span class="comment">// 索引  0 &lt;= index &lt; 3  ==&gt; Hel</span></span><br><span class="line">    <span class="comment">// 字符串拼接</span></span><br><span class="line">    System.out.println(<span class="string">&quot;Hello&quot;</span> + <span class="string">&quot;Java&quot;</span>); <span class="comment">// ==&gt; HelloJava</span></span><br><span class="line">    <span class="comment">// 字符串相等</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> <span class="string">&quot;hello&quot;</span>;</span><br><span class="line">    System.out.println(str.equals(str2)); <span class="comment">// 将常量放第一个位置，避免空指针异常</span></span><br><span class="line">    System.out.println(str.equalsIgnoreCase(str2)); <span class="comment">// 忽略大小写对比</span></span><br><span class="line">    <span class="comment">// StringAPI</span></span><br><span class="line">    System.out.println(str.charAt(<span class="number">0</span>)); <span class="comment">// 获取为0的索引</span></span><br><span class="line">    System.out.println(str.isEmpty()); <span class="comment">// 判空</span></span><br><span class="line">    System.out.println(str.startsWith(<span class="string">&quot;Hel&quot;</span>)); <span class="comment">// 以 Hel 开头返回boolean</span></span><br><span class="line">    System.out.println(str.endsWith(<span class="string">&quot;lo&quot;</span>)); <span class="comment">// 以 lo 结尾返回boolean</span></span><br><span class="line">    System.out.println(str.length()); <span class="comment">// 字符串的长度</span></span><br><span class="line">    System.out.println(str.replace(<span class="string">&#x27;H&#x27;</span>, <span class="string">&#x27;h&#x27;</span>)); <span class="comment">// 将旧字符替换成新字符</span></span><br><span class="line">    System.out.println(str.toLowerCase()); <span class="comment">// 变成小写</span></span><br><span class="line">    System.out.println(str.toUpperCase()); <span class="comment">// 变成大写</span></span><br><span class="line">    System.out.println(str.trim()); <span class="comment">// 返回去除首尾空格的字符串</span></span><br><span class="line">    System.out.println(String.join(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;a&quot;</span>,<span class="string">&quot;b&quot;</span>));  <span class="comment">// a和b之间用 - 连接  ==&gt; a-b</span></span><br><span class="line">    System.out.println(str.indexOf(<span class="string">&#x27;H&#x27;</span>)); <span class="comment">// 返回 H 第一次出现的位置</span></span><br><span class="line">    System.out.println(str.indexOf(<span class="string">&#x27;l&#x27;</span>,<span class="number">3</span>)); <span class="comment">// 返回 l 从索引3开始出现的l的第一次的索引值</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-14字符串构建器"><a href="#2-14字符串构建器" class="headerlink" title="2.14字符串构建器"></a>2.14字符串构建器</h2><p><strong>解决频繁拼接字符串频繁的创建String对象的带来的耗时和浪费空间的问题</strong></p><p>StringBuilder：单线程使用</p><p>StringBuffer：多线程使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testStringBuilder</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    stringBuilder.append(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    stringBuilder.append(<span class="string">&quot;cd&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;stringBuilder = &quot;</span> + stringBuilder.toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testStringBuilder</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">StringBuilder</span> <span class="variable">stringBuilder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">    stringBuilder.append(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    stringBuilder.append(<span class="string">&quot;cd&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;stringBuilder = &quot;</span> + stringBuilder.toString());</span><br><span class="line">    <span class="type">StringBuffer</span> <span class="variable">stringBuffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">    stringBuffer.append(<span class="string">&quot;abc&quot;</span>);</span><br><span class="line">    stringBuffer.append(<span class="string">&quot;cd&quot;</span>);</span><br><span class="line">    System.out.println(<span class="string">&quot;stringBuffer.toString() = &quot;</span> + stringBuffer.toString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-15大数"><a href="#2-15大数" class="headerlink" title="2.15大数"></a>2.15大数</h2><p><strong>解决基本的整数和浮点数精度不能够满足需求</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testBigDecimal</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">value1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;2.00&quot;</span>);</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">value2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(<span class="string">&quot;1.99&quot;</span>);</span><br><span class="line">        <span class="type">double</span> <span class="variable">value3</span> <span class="operator">=</span> <span class="number">0.00</span>;</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">value3ForBigDecimal</span> <span class="operator">=</span> BigDecimal.valueOf(value3); <span class="comment">// 基本类型转换为大数类型</span></span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">add</span> <span class="operator">=</span> value1.add(value2);</span><br><span class="line">        <span class="type">BigDecimal</span> <span class="variable">subtract</span> <span class="operator">=</span> value1.subtract(value2);</span><br><span class="line"><span class="comment">//        BigDecimal divide = value1.divide(value2);</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> value1.compareTo(value2); <span class="comment">// 相等返回0，如果v1&lt;v2返回负，反之为正</span></span><br><span class="line">        System.out.println(add);</span><br><span class="line">        System.out.println(subtract);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="2-16数组"><a href="#2-16数组" class="headerlink" title="2.16数组"></a>2.16数组</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testArray</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span>[] a = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">100</span>]; <span class="comment">// 初始化空间</span></span><br><span class="line">    <span class="type">int</span>[] array = &#123;<span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;;</span><br><span class="line">    <span class="comment">// 增强for遍历</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> item : array) &#123;</span><br><span class="line">        System.out.println(item);   <span class="comment">// 无需 array[item] 增强for每次遍历的是一个元素</span></span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(Arrays.toString(array)); <span class="comment">// 数组转为字符串更方便地看到遍历结果</span></span><br><span class="line">    <span class="comment">// 数组拷贝</span></span><br><span class="line">    String[] str = &#123;<span class="string">&quot;apple&quot;</span>,<span class="string">&quot;banana&quot;</span>&#125;;</span><br><span class="line">    String[] newStr = Arrays.copyOf(str, str.length);</span><br><span class="line">    System.out.println(Arrays.toString(newStr));</span><br><span class="line">    System.out.println(Arrays.toString(str));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-17ArraysAPI"><a href="#2-17ArraysAPI" class="headerlink" title="2.17ArraysAPI"></a>2.17ArraysAPI</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testArraysAPI</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">int</span>[] array = &#123;<span class="number">10</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>&#125;;</span><br><span class="line">    Arrays.sort(array); <span class="comment">// 使用优化后的快速排序算法对数组从小到大排序</span></span><br><span class="line">    System.out.println(Arrays.toString(array)); <span class="comment">// 数组转换为字符串</span></span><br><span class="line">    <span class="type">int</span>[] copyOf = Arrays.copyOf(array, array.length);<span class="comment">// 声明数组和数组长度返回新的拷贝后的数组</span></span><br><span class="line">    System.out.println(Arrays.equals(copyOf, array)); <span class="comment">// 判断数组中元素是否相等</span></span><br><span class="line">    Arrays.fill(copyOf, -<span class="number">1</span>); <span class="comment">// 将所有元素设置为某个值</span></span><br><span class="line">    System.out.println(Arrays.toString(copyOf));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="三、面向对象"><a href="#三、面向对象" class="headerlink" title="三、面向对象"></a>三、面向对象</h1><h2 id="3-1LocalDate类的使用"><a href="#3-1LocalDate类的使用" class="headerlink" title="3.1LocalDate类的使用"></a>3.1LocalDate类的使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testLocalDate</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">LocalDate</span> <span class="variable">now</span> <span class="operator">=</span> LocalDate.now();   <span class="comment">// 获取当前年月日  构造对象</span></span><br><span class="line">    System.out.println(now); <span class="comment">// ==&gt; 2022-08-24</span></span><br><span class="line">    <span class="type">LocalDate</span> <span class="variable">date</span> <span class="operator">=</span> LocalDate.of(<span class="number">2021</span>, <span class="number">12</span>, <span class="number">1</span>);  <span class="comment">// 构造对象</span></span><br><span class="line">    System.out.println(date);</span><br><span class="line">    <span class="comment">// 分别获取年月日</span></span><br><span class="line">    System.out.println(date.getYear());</span><br><span class="line">    System.out.println(date.getMonthValue());</span><br><span class="line">    System.out.println(date.getDayOfMonth());</span><br><span class="line">    System.out.println(now.getDayOfWeek());  <span class="comment">// 得到当前日期是星期几   ==&gt;WEDNESDAY</span></span><br><span class="line">    System.out.println(now.plusDays(<span class="number">8</span>)); <span class="comment">// 获取当前日期之后8天的日期   ==&gt;2022-09-01</span></span><br><span class="line">    System.out.println(now.minusDays(<span class="number">8</span>)); <span class="comment">// 获取当前日期之前8天的日期</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-null"><a href="#3-2-null" class="headerlink" title="3.2 null"></a>3.2 null</h2><p>null：表示没有引用任何对象，出现于对象类型中，基本类型不会出现null值</p><h2 id="3-3警告"><a href="#3-3警告" class="headerlink" title="3.3警告"></a>3.3警告</h2><p>如果自定义类需要返回一个对象的引用，会改变这个对象的私有状态</p><p>因为这个时候均引用了同一对象</p><p>可以使用clone方法解决</p><h2 id="3-4final"><a href="#3-4final" class="headerlink" title="3.4final"></a>3.4final</h2><p>作用于类：阻止继承</p><p>作用于方法：最终方法，子类不能重写该方法</p><p>作用于属性：不能修改值</p><p>注意：对于一个对象使用了final修饰，可以改变里面的值，但改变不了对象的引用</p><h2 id="3-5static"><a href="#3-5static" class="headerlink" title="3.5static"></a>3.5static</h2><p>作用于方法、属性</p><p>可以使用对象调用静态方法，但还是建议使用类名调用方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">TEST</span> <span class="operator">=</span> <span class="number">1</span>; <span class="comment">// 类常量：可以在不同类的多个方法使用</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> User <span class="title function_">testStatic</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6重载"><a href="#3-6重载" class="headerlink" title="3.6重载"></a>3.6重载</h2><p>同一类下，相同名字不同参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 重载</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 空参构造器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 有参构造</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String username)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.username = username;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String username,String password)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.username = username;</span><br><span class="line">    <span class="built_in">this</span>.password = password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 空参构造器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>(<span class="string">&quot;调用另一个构造器&quot;</span>,<span class="string">&quot;1234&quot;</span>);  <span class="comment">// 调用了本类其他构造器</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-7初始化代码块"><a href="#3-7初始化代码块" class="headerlink" title="3.7初始化代码块"></a>3.7初始化代码块</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化代码块，只要类创建成对象就会执行该代码块</span></span><br><span class="line">&#123;</span><br><span class="line">    flag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化静态属性</span></span><br><span class="line"><span class="keyword">static</span> &#123;</span><br><span class="line">    str = <span class="string">&quot;调用了静态代码块,初始静态属性&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>静态代码块随类的创建而初始化</p><p>普通代码块需要创建对象才会生成</p><h2 id="3-8包、类"><a href="#3-8包、类" class="headerlink" title="3.8包、类"></a>3.8包、类</h2><p>完全限定名：com.wwj.java.User 包含类名</p><p> 静态导入：<code>import static java.lang.System.*</code>使用静态方法和属性的时候无需添加类名前缀</p><h2 id="3-9包访问"><a href="#3-9包访问" class="headerlink" title="3.9包访问"></a>3.9包访问</h2><p>private：标记本类使用</p><p>public：可以任意类使用，不能再各个模块使用</p><p>default：同一个包内访问</p><p>protected：对本包和所有子类可见</p><h2 id="3-10继承"><a href="#3-10继承" class="headerlink" title="3.10继承"></a>3.10继承</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 继承了People为子类，People可以称为父类、超类、基类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Man</span> <span class="keyword">extends</span> <span class="title class_">People</span>&#123;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">Man</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="built_in">super</span>(<span class="string">&quot;调用父类构造&quot;</span>,<span class="string">&quot;男&quot;</span>);  <span class="comment">// 调用父类构造器</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">getParentWork</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">super</span>.work();  <span class="comment">// 调用父类方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-11多态"><a href="#3-11多态" class="headerlink" title="3.11多态"></a>3.11多态</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDuoTai</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 运行看右边，编译看左边</span></span><br><span class="line">    <span class="type">People</span> <span class="variable">man</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Man</span>();</span><br><span class="line">    System.out.println(<span class="string">&quot;man.work() = &quot;</span> + man.work());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译父类所有的方法和属性，对象只能获取父类的方法和属性如果子类有重写就调用子类的方法和属性</p><h2 id="3-12判断实例对象类型"><a href="#3-12判断实例对象类型" class="headerlink" title="3.12判断实例对象类型"></a>3.12判断实例对象类型</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(man <span class="keyword">instanceof</span> Man);</span><br></pre></td></tr></table></figure><p>子类可以转超类</p><p>超类转子类需要上述检查</p><h2 id="3-13抽象类"><a href="#3-13抽象类" class="headerlink" title="3.13抽象类"></a>3.13抽象类</h2><p>抽象类可以包含抽象方法、字段、具体方法、构造器</p><h2 id="3-14hashCode"><a href="#3-14hashCode" class="headerlink" title="3.14hashCode"></a>3.14hashCode</h2><p>Object类中hashCode由对象的存储地址得出</p><p>每个对象都有一个默认的hashCode，不同对象的hashCode基本不会相同</p><h2 id="3-15自动装拆箱"><a href="#3-15自动装拆箱" class="headerlink" title="3.15自动装拆箱"></a>3.15自动装拆箱</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAutoBox</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">n</span> <span class="operator">=</span> <span class="number">3</span>;  <span class="comment">// 自动装箱</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> n;  <span class="comment">// 自动拆箱</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(<span class="string">&quot;Integer.parseInt(\&quot;1\&quot;) = &quot;</span> + Integer.parseInt(<span class="string">&quot;1&quot;</span>)); <span class="comment">// 转换为整型</span></span><br><span class="line"><span class="type">Integer</span> <span class="variable">integer</span> <span class="operator">=</span> Integer.valueOf(<span class="number">1</span>);  <span class="comment">// 转换为包装类型</span></span><br></pre></td></tr></table></figure><h2 id="3-16可变参数"><a href="#3-16可变参数" class="headerlink" title="3.16可变参数"></a>3.16可变参数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">param</span><span class="params">(String name,String ... param)</span>&#123;</span><br><span class="line">    System.out.println(Arrays.toString(param));  <span class="comment">// 此时这个param是一个字符串数组</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-17反射（了解）"><a href="#3-17反射（了解）" class="headerlink" title="3.17反射（了解）"></a>3.17反射（了解）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Reflect</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">        <span class="comment">// 获取Class方式1</span></span><br><span class="line">        Class&lt;? <span class="keyword">extends</span> <span class="title class_">User</span>&gt; userClass1 = user.getClass();</span><br><span class="line">        <span class="comment">// 获取Class方式2</span></span><br><span class="line">        Class&lt;?&gt; userClass2 = Class.forName(<span class="string">&quot;com.wwj.java.MyObject.User&quot;</span>);</span><br><span class="line">        <span class="comment">// 获取Class方式3</span></span><br><span class="line">        Class&lt;User&gt; userClass3 = User.class;</span><br><span class="line"></span><br><span class="line">        <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> userClass1.getConstructor().newInstance();  <span class="comment">// 反射通过无参构造器创建实例对象</span></span><br><span class="line">        System.out.println(user2);</span><br><span class="line"></span><br><span class="line">        Class&lt;People&gt; peopleClass = People.class;</span><br><span class="line">        Field[] fields = peopleClass.getDeclaredFields();</span><br><span class="line">        <span class="keyword">for</span> (Field field : fields) &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                返回属性字段</span></span><br><span class="line"><span class="comment">                private java.lang.String com.wwj.java.MyObject.People.name</span></span><br><span class="line"><span class="comment">                private java.lang.String com.wwj.java.MyObject.People.gender</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            System.out.println(field);</span><br><span class="line">        &#125;</span><br><span class="line">        Method[] declaredMethods = peopleClass.getDeclaredMethods();  <span class="comment">// 返回这个类和接口的全部方法</span></span><br><span class="line">        <span class="keyword">for</span> (Method declaredMethod : declaredMethods) &#123;</span><br><span class="line">            <span class="comment">/*</span></span><br><span class="line"><span class="comment">                public boolean com.wwj.java.MyObject.People.equals(java.lang.Object)</span></span><br><span class="line"><span class="comment">                public java.lang.String com.wwj.java.MyObject.People.toString()</span></span><br><span class="line"><span class="comment">                public int com.wwj.java.MyObject.People.hashCode()</span></span><br><span class="line"><span class="comment">                public java.lang.String com.wwj.java.MyObject.People.getName()</span></span><br><span class="line"><span class="comment">                public void com.wwj.java.MyObject.People.setName(java.lang.String)</span></span><br><span class="line"><span class="comment">                public java.lang.String com.wwj.java.MyObject.People.work()</span></span><br><span class="line"><span class="comment">                public java.lang.String com.wwj.java.MyObject.People.getGender()</span></span><br><span class="line"><span class="comment">                public void com.wwj.java.MyObject.People.setGender(java.lang.String)</span></span><br><span class="line"><span class="comment">                protected boolean com.wwj.java.MyObject.People.canEqual(java.lang.Object)</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            System.out.println(declaredMethod);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 获取全包名</span></span><br><span class="line">        <span class="type">Package</span> <span class="variable">aPackage</span> <span class="operator">=</span> peopleClass.getPackage();</span><br><span class="line">        System.out.println(aPackage);</span><br><span class="line">        <span class="type">Field</span> <span class="variable">name</span> <span class="operator">=</span> peopleClass.getDeclaredField(<span class="string">&quot;name&quot;</span>);  <span class="comment">// 获取name的Field</span></span><br><span class="line">        <span class="type">People</span> <span class="variable">people</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">People</span>(<span class="string">&quot;www&quot;</span>, <span class="string">&quot;nan&quot;</span>);</span><br><span class="line">        name.setAccessible(<span class="literal">true</span>); <span class="comment">// 覆盖Java访问控制</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">o</span> <span class="operator">=</span> name.get(people); <span class="comment">// 利用反射获取实例对象的属性值</span></span><br><span class="line">        System.out.println(o);</span><br><span class="line">        <span class="type">Method</span> <span class="variable">work</span> <span class="operator">=</span> peopleClass.getMethod(<span class="string">&quot;work&quot;</span>); <span class="comment">// 获取work方法用实例对象执行</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> (String) work.invoke(people);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-18接口"><a href="#3-18接口" class="headerlink" title="3.18接口"></a>3.18接口</h2><p>泛型接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">MyInterface</span>&lt;T&gt; &#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">testMethod</span><span class="params">(T other)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果实现接口指定了泛型传入的形参必须是指定的类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">testInterface</span> <span class="keyword">implements</span> <span class="title class_">MyInterface</span>&lt;People&gt;&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">testMethod</span><span class="params">(People other)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接口所有方法都是自动public</p><p>发生方法同名冲突，遵循类优先原则</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 默认方法，可以被实现类所覆盖，也可以调用其他的接口方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> other 泛型</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 整型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">default</span> <span class="type">int</span> <span class="title function_">testDefault</span><span class="params">(T other)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> testMethod(other);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-19lambda表达式"><a href="#3-19lambda表达式" class="headerlink" title="3.19lambda表达式"></a>3.19lambda表达式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">TestMain</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Worker[] workers = <span class="keyword">new</span> <span class="title class_">Worker</span>[<span class="number">3</span>];</span><br><span class="line">        <span class="type">Worker</span> <span class="variable">worker1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Worker</span>(<span class="number">1</span>,<span class="number">11</span>);</span><br><span class="line">        <span class="type">Worker</span> <span class="variable">worker2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Worker</span>(<span class="number">2</span>,<span class="number">22</span>);</span><br><span class="line">        <span class="type">Worker</span> <span class="variable">worker3</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Worker</span>(<span class="number">3</span>,<span class="number">33</span>);</span><br><span class="line">        workers[<span class="number">0</span>] = worker1;</span><br><span class="line">        workers[<span class="number">1</span>] = worker2;</span><br><span class="line">        workers[<span class="number">2</span>] = worker3;</span><br><span class="line">        <span class="comment">// lambda表达式实现自定义比较器</span></span><br><span class="line">        Arrays.sort(workers,(first,second) -&gt; second.getAge() - first.getAge());</span><br><span class="line">        <span class="keyword">for</span> (Worker worker : workers) &#123;</span><br><span class="line">            System.out.println(worker);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-20方法引用"><a href="#3-20方法引用" class="headerlink" title="3.20方法引用"></a>3.20方法引用</h2><p>只能替换单方法的Lambda表达式</p><p>类名：：静态方法</p><p>对象：：成员方法</p><p>类名：：成员方法</p><p>类名：：new（构造方法）</p><h2 id="3-21DateAPI使用"><a href="#3-21DateAPI使用" class="headerlink" title="3.21DateAPI使用"></a>3.21DateAPI使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDate</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException &#123;</span><br><span class="line">    <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();   <span class="comment">// 构造参数：1970 1 1 加的毫秒数</span></span><br><span class="line">    System.out.println(date.toString()); <span class="comment">// 获取当前日期时间</span></span><br><span class="line">    <span class="comment">// 日期比较：使用方法 before()，after() 和 equals()。例如，一个月的12号比18号早，则 new Date(99, 2, 12).before(new Date (99, 2, 18)) 返回true。</span></span><br><span class="line">    <span class="comment">// 使用getTime比较日期</span></span><br><span class="line">    date.compareTo(date);  <span class="comment">// 日期比较</span></span><br><span class="line">    <span class="comment">// 日期格式化</span></span><br><span class="line">    <span class="type">SimpleDateFormat</span> <span class="variable">format</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd hh:mm:ss&quot;</span>);</span><br><span class="line">    System.out.println(format.format(date));</span><br><span class="line">    <span class="comment">// 测量执行方法时间</span></span><br><span class="line">    <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">    System.out.println(<span class="string">&quot;业务方法&quot;</span>);</span><br><span class="line">    Thread.sleep(<span class="number">300</span>);</span><br><span class="line">    <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">    System.out.println(<span class="string">&quot;耗时：&quot;</span> + (end - start));</span><br><span class="line">    <span class="type">Calendar</span> <span class="variable">c</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">    System.out.println(c);</span><br><span class="line">    c.set(<span class="number">2009</span>, Calendar.JUNE, <span class="number">12</span>); <span class="comment">// 年 月 日</span></span><br><span class="line">    c.add(Calendar.DATE, <span class="number">10</span>);  <span class="comment">// 当前日期的天数 + 10天</span></span><br><span class="line">    <span class="comment">// 获得年份</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> c.get(Calendar.YEAR);</span><br><span class="line">    <span class="comment">// 获得月份</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> c.get(Calendar.MONTH) + <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 获得日期</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">date2</span> <span class="operator">=</span> c.get(Calendar.DATE);</span><br><span class="line">    <span class="comment">// 获得小时</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">hour</span> <span class="operator">=</span> c.get(Calendar.HOUR_OF_DAY);</span><br><span class="line">    <span class="comment">// 获得分钟</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">minute</span> <span class="operator">=</span> c.get(Calendar.MINUTE);</span><br><span class="line">    <span class="comment">// 获得秒</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">second</span> <span class="operator">=</span> c.get(Calendar.SECOND);</span><br><span class="line">    <span class="comment">// 获得星期几（注意（这个与Date类是不同的）：1代表星期日、2代表星期1、3代表星期二，以此类推）</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">day</span> <span class="operator">=</span> c.get(Calendar.DAY_OF_WEEK);</span><br><span class="line">    System.out.println(year);</span><br><span class="line">    System.out.println(month);</span><br><span class="line">    System.out.println(date2);</span><br><span class="line">    System.out.println(hour);</span><br><span class="line">    System.out.println(minute);</span><br><span class="line">    System.out.println(second);</span><br><span class="line">    System.out.println(day);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-22正则基本使用"><a href="#3-22正则基本使用" class="headerlink" title="3.22正则基本使用"></a>3.22正则基本使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testRegex</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">content</span> <span class="operator">=</span> <span class="string">&quot;I am noob from runoob.com.&quot;</span>;</span><br><span class="line">    <span class="type">String</span> <span class="variable">pattern</span> <span class="operator">=</span> <span class="string">&quot;.*runoob.*&quot;</span>;</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">isMatch</span> <span class="operator">=</span> Pattern.matches(pattern, content); <span class="comment">// 正则表达式，内容</span></span><br><span class="line">    System.out.println(<span class="string">&quot;字符串中是否包含了 &#x27;runoob&#x27; 子字符串? &quot;</span> + isMatch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-23IO流"><a href="#3-23IO流" class="headerlink" title="3.23IO流"></a>3.23IO流</h2><p>输入流用于从源读取数据，输出流用于向目标写数据。</p><p>读取控制台内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">        <span class="comment">// 读取键盘的输入流</span></span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line"><span class="comment">//        char c ;</span></span><br><span class="line">        String c;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line"><span class="comment">//            c = (char) br.read(); // 读取每个字符</span></span><br><span class="line">            c = (String) br.readLine();  <span class="comment">// 读取字符串</span></span><br><span class="line">            System.out.println(<span class="string">&quot;读取到的内容：&quot;</span>+c);</span><br><span class="line">        &#125;<span class="keyword">while</span> (!c.equals(<span class="string">&quot;q&quot;</span>));</span><br></pre></td></tr></table></figure><p>字符流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">fileIO2</span><span class="params">()</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">    <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;C:\\CodeStudy\\text.txt&quot;</span>);</span><br><span class="line">    <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> file.createNewFile();</span><br><span class="line">    System.out.println(<span class="string">&quot;创建文件:&quot;</span>+ (flag ? <span class="string">&quot;成功&quot;</span>:<span class="string">&quot;失败&quot;</span>));</span><br><span class="line">    <span class="type">FileWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileWriter</span>(file);</span><br><span class="line">    writer.write(<span class="string">&quot;hello word !&quot;</span>);</span><br><span class="line">    writer.flush();  <span class="comment">// 刷新暂存区</span></span><br><span class="line">    writer.close();</span><br><span class="line">    <span class="type">FileReader</span> <span class="variable">reader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileReader</span>(file);</span><br><span class="line">    <span class="type">char</span>[] a = <span class="keyword">new</span> <span class="title class_">char</span>[<span class="number">50</span>];   <span class="comment">// 准备缓存区</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">read</span> <span class="operator">=</span> reader.read(a);<span class="comment">// 将文件读取到缓存区中</span></span><br><span class="line">    System.out.println(<span class="string">&quot;===&gt;&quot;</span>+read);  <span class="comment">// 返回字符</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">char</span> c : a)&#123;</span><br><span class="line">        System.out.println(c);</span><br><span class="line">    &#125;</span><br><span class="line">    reader.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>字节流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">       <span class="comment">//输入文件目录</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">srcFilePath</span> <span class="operator">=</span> <span class="string">&quot;D:\\io_test\\加菲猫.jpg&quot;</span>;</span><br><span class="line">       <span class="comment">//输出文件目录（拷贝的路径）</span></span><br><span class="line">       <span class="type">String</span> <span class="variable">destFilePath</span> <span class="operator">=</span> <span class="string">&quot;D:\\io_test\\加菲猫2.jpg&quot;</span>;</span><br><span class="line">       <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">       <span class="type">FileOutputStream</span> <span class="variable">fileOutputStream</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="comment">//输入流,传入路径</span></span><br><span class="line">           fileInputStream = <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(srcFilePath);</span><br><span class="line">           <span class="comment">//输出流</span></span><br><span class="line">            fileOutputStream = <span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(destFilePath);</span><br><span class="line">           <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">               <span class="comment">//如果不等于-1说明还没有读取完成，要继续读取</span></span><br><span class="line">               <span class="keyword">while</span>((count = fileInputStream.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                   <span class="comment">//还有内容要读取,然后从0开始读取，上面count有读了多少个，那么就写多少个</span></span><br><span class="line">                   fileOutputStream.write(bytes,<span class="number">0</span>,count);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">           e.printStackTrace();</span><br><span class="line">       &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">           <span class="comment">//用完之后一定要关闭流,但是得判断不是空的时候才需要去关闭流</span></span><br><span class="line">           <span class="keyword">if</span>(fileInputStream != <span class="literal">null</span>)&#123;</span><br><span class="line">               fileInputStream.close();</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span>(fileOutputStream != <span class="literal">null</span>)&#123;</span><br><span class="line">               fileOutputStream.close();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>带缓冲区的字节流</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IoDemo5</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//输入文件目录</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">srcFilePath</span> <span class="operator">=</span> <span class="string">&quot;D:\\io_test\\加菲猫.jpg&quot;</span>;</span><br><span class="line">        <span class="comment">//输出文件目录（拷贝的路径）</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">destFilePath</span> <span class="operator">=</span> <span class="string">&quot;D:\\io_test\\加菲猫3.jpg&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//因为带有缓存区的是基于原始的类进行操作的</span></span><br><span class="line">            <span class="type">BufferedInputStream</span> <span class="variable">bufferedInputStream</span> <span class="operator">=</span></span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">BufferedInputStream</span>(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(srcFilePath));</span><br><span class="line">            <span class="type">BufferedOutputStream</span> <span class="variable">bufferedOutputStream</span> <span class="operator">=</span></span><br><span class="line">                    <span class="keyword">new</span> <span class="title class_">BufferedOutputStream</span>(<span class="keyword">new</span> <span class="title class_">FileOutputStream</span>(destFilePath));</span><br><span class="line">            &#123;</span><br><span class="line">                        <span class="type">byte</span>[] bytes = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">while</span> ((count = bufferedInputStream.read(bytes)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                            bufferedOutputStream.write(bytes,<span class="number">0</span>,count);</span><br><span class="line">                        &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-24自定义异常类"><a href="#3-24自定义异常类" class="headerlink" title="3.24自定义异常类"></a>3.24自定义异常类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyException</span> <span class="keyword">extends</span> <span class="title class_">Exception</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *    public Throwable(String message) &#123;</span></span><br><span class="line"><span class="comment">     *         fillInStackTrace();</span></span><br><span class="line"><span class="comment">     *         detailMessage = message;</span></span><br><span class="line"><span class="comment">     *     &#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="comment">// 重写构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyException</span><span class="params">(String message)</span>&#123;</span><br><span class="line">        System.out.println(message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-25集合"><a href="#3-25集合" class="headerlink" title="3.25集合"></a>3.25集合</h2><p>ArrayList</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testArrayListUsed</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// ArrayList 继承了 AbstractList ，并实现了 List 接口。</span></span><br><span class="line">    ArrayList&lt;People&gt; arrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    arrayList.add(<span class="keyword">new</span> <span class="title class_">People</span>(<span class="string">&quot;wwj&quot;</span>, <span class="string">&quot;nan&quot;</span>));</span><br><span class="line">    <span class="type">People</span> <span class="variable">people</span> <span class="operator">=</span> arrayList.get(<span class="number">0</span>); <span class="comment">// 访问元素</span></span><br><span class="line">    arrayList.set(<span class="number">0</span>, <span class="keyword">new</span> <span class="title class_">People</span>(<span class="string">&quot;www&quot;</span>,<span class="string">&quot;weww&quot;</span>)); <span class="comment">// 修改对应索引的值</span></span><br><span class="line">    arrayList.remove(<span class="number">0</span>); <span class="comment">// 移除元素</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> arrayList.size(); <span class="comment">// 计算大小</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>LinkedList</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testLinkedList</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 你需要通过循环迭代来访问列表中的某些元素。</span></span><br><span class="line"><span class="comment">     * 需要频繁的在列表开头、中间、末尾等位置进行添加和删除元素操作。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    LinkedList&lt;String&gt; linkedList = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">    linkedList.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">    linkedList.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">    linkedList.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">    linkedList.add(<span class="string">&quot;Weibo&quot;</span>);</span><br><span class="line">    <span class="comment">// 使用 addFirst() 在头部添加元素</span></span><br><span class="line">    linkedList.addFirst(<span class="string">&quot;Wiki&quot;</span>);</span><br><span class="line">    <span class="comment">// 使用 addLast() 在尾部添加元素</span></span><br><span class="line">    linkedList.addLast(<span class="string">&quot;Wiki&quot;</span>);</span><br><span class="line">    <span class="comment">// 使用 removeFirst() 移除头部元素</span></span><br><span class="line">    linkedList.removeFirst();</span><br><span class="line">    <span class="comment">// 使用 removeLast() 移除尾部元素</span></span><br><span class="line">    linkedList.removeLast();</span><br><span class="line">    <span class="comment">// 使用 getFirst() 获取头部元素</span></span><br><span class="line">    System.out.println(linkedList.getFirst());</span><br><span class="line">    <span class="comment">// 使用 getLast() 获取尾部元素</span></span><br><span class="line">    System.out.println(linkedList.getLast());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>hashSet</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  HashSet 基于 HashMap 来实现的，是一个不允许有重复元素的集合。</span></span><br><span class="line"><span class="comment"> *  HashSet 允许有 null 值。</span></span><br><span class="line"><span class="comment"> *  HashSet 是无序的，即不会记录插入的顺序。</span></span><br><span class="line"><span class="comment"> *  HashSet 不是线程安全的</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testHashSet</span><span class="params">()</span>&#123;</span><br><span class="line">    HashSet&lt;Integer&gt; hashSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    hashSet.add(<span class="number">1</span>);</span><br><span class="line">    hashSet.add(<span class="number">2</span>);</span><br><span class="line">    hashSet.add(<span class="number">3</span>);</span><br><span class="line">    hashSet.add(<span class="number">1</span>);</span><br><span class="line">    System.out.println(hashSet);</span><br><span class="line">    System.out.println(hashSet.contains(<span class="number">1</span>));  <span class="comment">// 集合是否包含 xxx</span></span><br><span class="line">    hashSet.remove(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>hashMap</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * HashMap 是无序的，即不会记录插入的顺序。</span></span><br><span class="line"><span class="comment">     * HashMap 继承于AbstractMap，实现了 Map、Cloneable、java.io.Serializable 接口。</span></span><br><span class="line"><span class="comment">     * HashMap 继承于AbstractMap，实现了 Map、Cloneable、java.io.Serializable 接口。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testHashMap</span><span class="params">()</span>&#123;</span><br><span class="line">        HashMap&lt;String,String&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        hashMap.put(<span class="string">&quot;1&quot;</span>, <span class="string">&quot;v1&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;2&quot;</span>, <span class="string">&quot;v2&quot;</span>);</span><br><span class="line">        hashMap.put(<span class="string">&quot;3&quot;</span>, <span class="string">&quot;v3&quot;</span>);</span><br><span class="line"><span class="comment">//        String s = hashMap.get(&quot;1&quot;);</span></span><br><span class="line"><span class="comment">//        String remove = hashMap.remove(&quot;1&quot;);</span></span><br><span class="line">        <span class="comment">// 函数式接口得带HashMap</span></span><br><span class="line">        hashMap.forEach((key,value) -&gt; &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;key:&quot;</span>+key+<span class="string">&quot;=&quot;</span>+<span class="string">&quot;value&quot;</span>+value);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>Iterator</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  Java Iterator（迭代器）不是一个集合，它是一种用于访问集合的方法，可用于迭代 ArrayList 和 HashSet 等集合。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testIterator</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 创建集合</span></span><br><span class="line">    ArrayList&lt;String&gt; sites = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">    sites.add(<span class="string">&quot;Google&quot;</span>);</span><br><span class="line">    sites.add(<span class="string">&quot;Runoob&quot;</span>);</span><br><span class="line">    sites.add(<span class="string">&quot;Taobao&quot;</span>);</span><br><span class="line">    sites.add(<span class="string">&quot;Zhihu&quot;</span>);</span><br><span class="line">    Iterator&lt;String&gt; iterator = sites.iterator();   <span class="comment">// 获取迭代器</span></span><br><span class="line">    <span class="keyword">while</span> (iterator.hasNext())&#123;</span><br><span class="line">        System.out.println(iterator.next());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-26泛型"><a href="#3-26泛型" class="headerlink" title="3.26泛型"></a>3.26泛型</h2><ul><li><p><strong>E</strong> - Element (在集合中使用，因为集合中存放的是元素)</p></li><li><p><strong>T</strong> - Type（Java 类）</p></li><li><p><strong>K</strong> - Key（键）</p></li><li><p><strong>V</strong> - Value（值）</p></li><li><p><strong>N</strong> - Number（数值类型）</p></li><li><p><strong>？</strong> - 表示不确定的 java 类型</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayList</span>&lt;E&gt; <span class="keyword">extends</span> <span class="title class_">AbstractList</span>&lt;E&gt;</span><br></pre></td></tr></table></figure><p>泛型类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Box</span>&lt;T&gt; &#123;</span><br></pre></td></tr></table></figure><p>类型通配符一般是使用 <strong>?</strong> 代替具体的类型参数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testFanXin</span><span class="params">(List&lt;?&gt; list)</span>&#123;</span><br><span class="line">    <span class="comment">// 此时形参代表可以传入不同类型的集合List&lt;String&gt;,List&lt;Integer&gt;</span></span><br><span class="line">    <span class="comment">// public static void getUperNumber(List&lt;? extends Number&gt; data) 如此定义就是通配符泛型值接受Number及其下层子类类型。</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>类型通配符下限通过形如 <strong>List&lt;? super Number&gt;</strong> 来定义，表示类型只能接受 <strong>Number</strong> 及其上层父类类型，如 <strong>Object</strong> 类型的实例。</p><h2 id="3-27多线程"><a href="#3-27多线程" class="headerlink" title="3.27多线程"></a>3.27多线程</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wwj.java.myThread;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 继承Thread创建线程</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyThread</span> <span class="keyword">extends</span> <span class="title class_">Thread</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">//        System.out.println(&quot;当前线程：&quot;+Thread.currentThread().getId());</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span> / <span class="number">2</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;当前线程&quot;</span> + Thread.currentThread().getId() + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;运行结果&quot;</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 实现Runnable接口创建线程</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyThead02</span> <span class="keyword">implements</span> <span class="title class_">Runnable</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span> / <span class="number">2</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;当前线程&quot;</span> + Thread.currentThread().getId() + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;运行结果&quot;</span> + i);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Callable创建线程(可以返回值)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Callable01</span> <span class="keyword">implements</span> <span class="title class_">Callable</span>&lt;Integer&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">call</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span> / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">testThread</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> ExecutionException, InterruptedException &#123;</span><br><span class="line">        <span class="type">Thread</span> <span class="variable">thread01</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThread</span>(); <span class="comment">// 继承Thread创建线程</span></span><br><span class="line">        thread01.start();</span><br><span class="line">        <span class="type">MyThead02</span> <span class="variable">myThead02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyThead02</span>(); <span class="comment">// 实现Runnable创建线程</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(myThead02).start();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// callable 带有返回值</span></span><br><span class="line">        FutureTask&lt;Integer&gt; futureTask = <span class="keyword">new</span> <span class="title class_">FutureTask</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">Callable01</span>());</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Thread</span>(futureTask).start();</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">integer</span> <span class="operator">=</span> futureTask.get();   <span class="comment">// 等待异步方法执行完成打印结果</span></span><br><span class="line">        System.out.println(<span class="string">&quot;callable创建线程返回的结果：&quot;</span> + integer);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 线程池创建</span></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@Param</span> corePoolSize： 核心线程数（一直存在除非设置超时）</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@Param</span> maximumPoolSize：最大线程数量</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@Param</span> keepAliveTime：最大线程数量-核心线程数）：存活时间，当前线程数量大于核心数量，释放空闲的线程，只要线程空闲时间大于指定的存活时间</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@Param</span> unit：时间单位</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@Param</span> workQueue:：阻塞队列，如果任务有很多，就会将目前多的任务放在队列里只要有线程空闲就会去队列里取出新的任务</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@Param</span> threadFactory：线程创建工厂</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@Param</span> handler：如果队列满了，按照指定的拒绝策略拒绝执行任务</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="type">ExecutorService</span> <span class="variable">threadPool</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>(</span><br><span class="line">                <span class="number">20</span>,</span><br><span class="line">                <span class="number">100</span>,</span><br><span class="line">                <span class="number">10L</span>,</span><br><span class="line">                TimeUnit.SECONDS,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">LinkedBlockingQueue</span>&lt;Runnable&gt;(<span class="number">10000</span>),</span><br><span class="line">                Executors.defaultThreadFactory(),</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>.AbortPolicy());</span><br><span class="line">        <span class="comment">// 异步任务（无返回值）</span></span><br><span class="line">        CompletableFuture&lt;Void&gt; future01 = CompletableFuture.runAsync(() -&gt; &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span> / <span class="number">2</span>;</span><br><span class="line">            System.out.println(<span class="string">&quot;当前线程&quot;</span> + Thread.currentThread().getId() + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;运行结果&quot;</span> + i);</span><br><span class="line">        &#125;, threadPool);</span><br><span class="line">        <span class="comment">// 异步任务（有返回值）</span></span><br><span class="line">        CompletableFuture&lt;Integer&gt; future02 = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span> / <span class="number">2</span>;</span><br><span class="line">            System.out.println(<span class="string">&quot;当前线程&quot;</span> + Thread.currentThread().getId() + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;运行结果&quot;</span> + i);</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;, threadPool);</span><br><span class="line">        System.out.println(<span class="string">&quot;future02异步任务返回值：&quot;</span> + future02.get());</span><br><span class="line">        <span class="comment">// 异步任务链</span></span><br><span class="line">        CompletableFuture&lt;Integer&gt; future03 = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span> / <span class="number">2</span>;</span><br><span class="line">            System.out.println(<span class="string">&quot;当前线程&quot;</span> + Thread.currentThread().getId() + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;运行结果&quot;</span> + i);</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;, threadPool).whenComplete((result, exception) -&gt; &#123;</span><br><span class="line">            <span class="comment">// 可以接收异常和结果</span></span><br><span class="line">            System.out.println(<span class="string">&quot;当前线程&quot;</span> + Thread.currentThread().getId() + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;接收结果&quot;</span> + result</span><br><span class="line">                    + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;异常：&quot;</span> + exception);</span><br><span class="line">        &#125;).exceptionally(throwable -&gt; &#123;</span><br><span class="line">            <span class="comment">// 异常返回类型</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">10</span>;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 异步任务链（同时处理异常和结果）</span></span><br><span class="line">        CompletableFuture&lt;Integer&gt; future04 = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span> / <span class="number">2</span>;</span><br><span class="line">            System.out.println(<span class="string">&quot;当前线程&quot;</span> + Thread.currentThread().getId() + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;运行结果&quot;</span> + i);</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;, threadPool).handle((result, exception) -&gt; &#123;   <span class="comment">// 能够同时处理异常和正确返回</span></span><br><span class="line">            <span class="keyword">if</span> (result != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> result * <span class="number">2</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 异步任务链（可以接收结果还可以返回数据）</span></span><br><span class="line">        CompletableFuture&lt;String&gt; future05 = CompletableFuture.supplyAsync(() -&gt; &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span> / <span class="number">2</span>;</span><br><span class="line">            System.out.println(<span class="string">&quot;当前线程&quot;</span> + Thread.currentThread().getId() + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;运行结果&quot;</span> + i);</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;, threadPool).thenApplyAsync(res -&gt; &#123;    <span class="comment">// 又可以接收返回值又可以返回数据</span></span><br><span class="line">            System.out.println(<span class="string">&quot;start2...&quot;</span> + res);</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;接收到的结果返回&quot;</span> + res;</span><br><span class="line">        &#125;, threadPool);</span><br><span class="line">        System.out.println(future05.get());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 异步任务组合操作(两个任务均完成)</span></span><br><span class="line">        future01.runAfterBoth(future02, () -&gt; &#123;  <span class="comment">// 两个任务均完成执行的操作（无返回值不接收结果）</span></span><br><span class="line">            System.out.println(<span class="string">&quot;两个任务均完成&quot;</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        future01.thenAcceptBoth(future02, (f1,f2) -&gt; &#123; <span class="comment">// 接收两个异步任务的返回结果</span></span><br><span class="line">            System.out.println(<span class="string">&quot;接收异步任务返回值&quot;</span>+ f1 + f2);</span><br><span class="line">        &#125;);</span><br><span class="line">        future01.thenCombineAsync(future02, (f1,f2) -&gt; &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;接收返回值&quot;</span>+ f1 + f2);</span><br><span class="line">            <span class="keyword">return</span> f1 + <span class="string">&quot;&quot;</span> + f2;</span><br><span class="line">        &#125;,threadPool);</span><br><span class="line">        <span class="comment">// 两个任务有一个完成</span></span><br><span class="line">        future01.runAfterEitherAsync(future02, ()-&gt;&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;任务3&quot;</span>);</span><br><span class="line">        &#125;,threadPool);</span><br><span class="line"></span><br><span class="line">        future03.acceptEitherAsync(future02, (res)-&gt;&#123;</span><br><span class="line">        &#125;,threadPool);</span><br><span class="line"></span><br><span class="line">        future02.applyToEither(future03, (res) -&gt; &#123;</span><br><span class="line">            System.out.println(res);</span><br><span class="line">            <span class="keyword">return</span> res;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        CompletableFuture&lt;Void&gt; allOf = CompletableFuture.allOf(future01, future02);</span><br><span class="line">        allOf.get();  <span class="comment">// 等待所有结果完成(阻塞)</span></span><br><span class="line"></span><br><span class="line">        CompletableFuture&lt;Object&gt; anyOf = CompletableFuture.anyOf(future01, future02);</span><br><span class="line">        anyOf.get();   <span class="comment">// 有一个成功就不阻塞</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 后端技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis</title>
      <link href="/2022/09/04/Redis/"/>
      <url>/2022/09/04/Redis/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Redis（Remote Dictionary Server )，即远程字典服务，是一个开源的使用ANSI <a href="https://baike.baidu.com/item/C%E8%AF%AD%E8%A8%80?fromModule=lemma_inlink">C语言</a>编写、支持网络、可基于内存亦可持久化的日志型、Key-Value<a href="https://baike.baidu.com/item/%E6%95%B0%E6%8D%AE%E5%BA%93/103728?fromModule=lemma_inlink">数据库</a>，并提供多种语言的API。</p><h1 id="一、Redis概念"><a href="#一、Redis概念" class="headerlink" title="一、Redis概念"></a>一、Redis概念</h1><p>NoSQL非关系型数据库</p><p>减少IO压力、直接可以作为缓存使用（减少数据库的压力）</p><p>适用于高并发和海量数据操作</p><h2 id="1-1-Redis安装"><a href="#1-1-Redis安装" class="headerlink" title="1.1    Redis安装"></a>1.1    Redis安装</h2><p>1、安装GCC</p><p><code>yum install gcc</code>安装</p><p><code>gcc --version</code>测试</p><p>2、解压redis压缩包</p><p><code>tar -zxvf redis06.2.7.tar.gz</code></p><p>3、进入Redis目录<code>make</code>命令编译</p><p>4、安装Redis<code>make install</code></p><p>5、切换目录到 <code>cd /user/local/bin</code></p><img src="/2022/09/04/Redis/2022-07-21-16-13-05-image.png" class=""><p>Redis-server： 服务器启动命令</p><p>Redis-cli：客户端，操作入口</p><h2 id="1-2-启动"><a href="#1-2-启动" class="headerlink" title="1.2    启动"></a>1.2    启动</h2><p>前台启动：<code>redis-server</code></p><p>后台启动：</p><p>1、将redis的核心配置文件赋值一份<code>cp redis.conf /etc/redis.conf</code></p><p>2、修改核心配置文件中的daemonize为yes</p><p>3、进入 <code>cd /user/local/bin</code>使用<code>redis-server /etc/redis.conf</code></p><p>4、进程查看 <code> ps -ef | grep redis</code></p><p>5、<code>redis-cli</code>启动客户端</p><p>6、关闭Redis：<code>shutdown</code></p><h2 id="1-3-基本概念"><a href="#1-3-基本概念" class="headerlink" title="1.3    基本概念"></a>1.3    基本概念</h2><p>端口：6379</p><p>技术：单线程+多路IO复用</p><img src="/2022/09/04/Redis/2022-07-21-18-39-43-image.png" class=""><p>默认16个数据库，默认0号数据库</p><h1 id="二、五大数据类型"><a href="#二、五大数据类型" class="headerlink" title="二、五大数据类型"></a>二、五大数据类型</h1><h2 id="2-1-Key操作"><a href="#2-1-Key操作" class="headerlink" title="2.1    Key操作"></a>2.1    Key操作</h2><p>查看所有key： <code>keys *</code></p><p>判断某个key是否存在： <code>exists key值</code></p><p>查看类型：<code>type key值</code></p><p>删除指定key：<code>del key值</code></p><p>非阻塞删除key：<code>unlink key值</code>(异步操作)</p><p>设置key的过期时间：<code>expire key值 秒数</code>  -1表示永不过期、-2表示过期</p><p>查看还有多少秒过期：<code>ttl key值</code></p><p>切换数据库：<code>select 数据库号</code></p><p>查看当前库有多少数量的key：<code>dbsize</code></p><p>清空当前库：<code>flushidb</code></p><p>清空所有库：<code>flushall</code></p><h2 id="2-2-字符串"><a href="#2-2-字符串" class="headerlink" title="2.2    字符串"></a>2.2    字符串</h2><p>字符串最多可以是512M</p><p>添加键值对：<code>set key value</code></p><p>获取键值对：<code>get key value</code></p><p><strong>设置相同的key会被覆盖</strong></p><p>追加原值：<code>append key value</code></p><p>获取值的长度：<code>strlen key</code></p><p>添加键值对（<strong>只有key不存在才会设置成功</strong>）： <code>setnx key value</code></p><p>使得数据值+1：<code>incr key</code>(数据类型)</p><p>使得数据值-1：<code>decr key</code>(数据类型)</p><p>数据值+自定义：<code>incrby/decrby key 自定义值</code></p><p> 设置多个键值对：<code>mest key1 value1 key2 value2</code></p><p>获取多个键值对：<code>mget key1 key2</code></p><p>添加多个键值对（<strong>只有key不存在才会设置成功</strong>）：<code>msetnx key1 value1 key2 value2</code>有任何一个不存在都会失败</p><p>获取值的范围：<code>get range key startIndex endIndex</code></p><p>将值设置到指定范围：<code>set range key index value</code></p><p>设置值的时候设置过期时间：<code>setex key outdate value</code></p><p>新值换旧值：<code>getset key value</code>取到的还是旧值但数据库中已经替换成了新值</p><p>底层数据结构：动态字符串</p><img src="/2022/09/04/Redis/2022-07-21-19-12-28-image.png" class=""><h2 id="2-3-列表List"><a href="#2-3-列表List" class="headerlink" title="2.3    列表List"></a>2.3    列表List</h2><p>单键多值</p><p>底层：双向链表</p><p>从左&#x2F;右插入多个值：<code>lpush/rpush key value1 value2 value3</code></p><p>从左&#x2F;右取值：<code>lrange key start stop(-1到尾部)</code>左取值顺序会以头插法顺序取出</p><p>从左&#x2F;右吐一个值：<code>lpop/rpop key</code>取值取完，键值也就不存在了</p><p>从key1列表右边吐出一个值插到key2列表的左边：<code>rpoplpush key1 key2</code></p><p>根据索引下标取出指定的值：<code>lindex key index</code></p><p>获取列表长度：<code>llen key</code></p><p>在value后面插入newvalue：<code>linsert before value newvalue</code></p><p>从左右删除n个value：<code>lrem key n value</code>将n个前相同value的值相同</p><p> 将列表key下标为index的值替换成value：<code>lset key index value</code></p><p>数据结构：快速链表</p><p>1、数据少：压缩列表</p><p>2、数据多：把多个压缩列表变成链表</p><h2 id="2-4-集合Set"><a href="#2-4-集合Set" class="headerlink" title="2.4    集合Set"></a>2.4    集合Set</h2><p>无序集合，底层是一个哈希表。</p><p>添加一个或多个元素：<code>sadd key value value</code></p><p>获取该集合所有值：<code>smembers key</code></p><p>判断集合中是否含有该value值：<code>sismember key value</code>有返回1没有返回0</p><p>返回集合的元素个数：<code>scard key</code></p><p>删除集合中的某个元素：<code>srem key value1 value2</code></p><p>随机从集合吐出一个值：<code>spop key</code></p><p>随机从集合取出n个值：<code>srandmember key n</code></p><p>把集合中的一个值从一个集合移动到另一个集合：<code>smove 起始key 目标key 值</code></p><p>返回两个集合的交集元素：<code>sinter key1 key2</code></p><p>返回两个集合的并集元素： <code>sunion key1 key2</code></p><p>返回两个集合的差集元素：<code>sdiff key1 key2</code>(key1中有的，key2中没有的)</p><p>数据结构：字典，哈希表实现</p><h2 id="2-5-哈希Hash"><a href="#2-5-哈希Hash" class="headerlink" title="2.5    哈希Hash"></a>2.5    哈希Hash</h2><p>是一组field和value的映射表</p><p>key：user</p><p>value：field：id 、name、age</p><p>            value：1、wwj、20</p><p>添加：<code>hset key field value</code></p><p>获取：<code>hget key field</code></p><p>添加多个：<code>hmset key field1 value1 field2 value2</code></p><p>判断field是否存在：<code>hexists key field</code></p><p>列出该集合的所有field：<code>hkeys key</code></p><p>列出该集合所有的value：<code>hvals key</code></p><p>为哈希表中的ifleld的值增量1 -1：<code>hincrby key field increment（第增量）</code></p><p>当前field不存在的时候设置值：<code>hsetnx key field value</code></p><p>数据结构：压缩列表、哈希表</p><h2 id="2-6-有序集合Zset"><a href="#2-6-有序集合Zset" class="headerlink" title="2.6    有序集合Zset"></a>2.6    有序集合Zset</h2><p>没有重复元素的字符串集合</p><p>评分机制类似于权重</p><p>添加：<code>zadd key score value</code></p><p>获取：<code>zrange key 0 -1</code> 从小到大  加入<code>withscores</code>能将评分一起返回</p><p>取评分范围：<code>zrangebyscore key min max</code></p><p>从大到小排序：<code>zrevrangebyscore key max min</code></p><p>score增量：<code>zincrby key 增量 value</code></p><p>删除该集合下的指定值元素：<code>zrem key value</code></p><p>统计该集合，分数区间内的元素个数：<code>zcount key min max</code></p><p>返回集合中的排名从分数0开始：<code>zrank key value</code></p><p>数据结构：等价于Map集合，跳跃表（类似B树，二分）、Hash、</p><h1 id="三、配置文件详解"><a href="#三、配置文件详解" class="headerlink" title="三、配置文件详解"></a>三、配置文件详解</h1><p>1、任何单位都是以bytes为基本单位</p><img src="/2022/09/04/Redis/2022-07-22-13-45-21-image.png" class=""><p>2、限定本地连接</p><img src="/2022/09/04/Redis/2022-07-22-13-47-58-image.png" class=""><p>3、开启保护模式（远程访问）</p><img src="/2022/09/04/Redis/2022-07-22-13-48-21-image.png" class=""><p>4、tcp-backlog时tcp的一个连接队列，包含未完成三次握手和已经完成三层握手总和的队列</p><p>5、timeout：默认0，超时时间</p><p>6、tcp-keepalive：心跳检测连接</p><p>7、pidfile：保存进程端口号</p><p>8、loglevel：日志级别</p><p>9、logfile：设置文件输出路径</p><p>10、security设置密码</p><p>11、LIMITS：设置客户端的连接数等</p><p>12、maxmemory-samples：样本数量</p><h1 id="四、发布和订阅"><a href="#四、发布和订阅" class="headerlink" title="四、发布和订阅"></a>四、发布和订阅</h1><p>消息发布：发布消息</p><p>消息订阅：接收消息</p><p>Redis客户端可以订阅任意数量的频道</p><img src="/2022/09/04/Redis/2022-07-22-13-58-17-image.png" class=""><p>订阅频道：<code>subscribe channel1</code></p><p>发送消息：<code>publish channel1 hello</code>返回数字是订阅的数量</p><h1 id="五、新数据类型"><a href="#五、新数据类型" class="headerlink" title="五、新数据类型"></a>五、新数据类型</h1><h2 id="5-1-Bitmaps"><a href="#5-1-Bitmaps" class="headerlink" title="5.1    Bitmaps"></a>5.1    Bitmaps</h2><p><strong>位操作</strong></p><p>value只能放二进制数据</p><p>偏移量可以称为一个用户的id记录</p><p>添加：<code>setbit key 偏移量 value</code></p><p>取值：<code>getbit key 偏移量</code></p><p>统计：<code>bitcount key index1 index2</code> 为1的总和数量，可以取index范围</p><p>操作 and or ：<code>setbit and 合并后的key key1 key2</code></p><h2 id="5-2-HyperLogLog"><a href="#5-2-HyperLogLog" class="headerlink" title="5.2    HyperLogLog"></a>5.2    HyperLogLog</h2><p>基数：不重复的元素集</p><p>添加：<code>pfadd key element</code></p><p>计算基数数量：<code>pfcount key</code></p><p>合并：<code>pfmerge newkey key1 key2</code>将key1和key2合并到newkey中</p><h2 id="5-3-Geospatial地理类型"><a href="#5-3-Geospatial地理类型" class="headerlink" title="5.3    Geospatial地理类型"></a>5.3    Geospatial地理类型</h2><p>添加：<code>geoadd key 经度 纬度 名字</code></p><p>获取坐标：<code>geopos key 名字</code></p><p>获取两个位置的直线距离：<code>geodsit key name1 name2 单位km</code></p><p>获取经纬度内的半径内的元素：<code>georadius key 经度 纬度 1000单位km</code></p><h1 id="六、Jedis操作"><a href="#六、Jedis操作" class="headerlink" title="六、Jedis操作"></a>六、Jedis操作</h1><p>1、导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>redis.clients<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jedis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、创建对象，操作数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">// 创建Jedis对象(设置linux的IP和Redis的端口)</span></span><br><span class="line">    <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jedis</span>(<span class="string">&quot;192.168.218.128&quot;</span>,<span class="number">6379</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ping测试</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">ping</span> <span class="operator">=</span> jedis.ping();</span><br><span class="line">    System.out.println(ping);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//  数据操作</span></span><br><span class="line">    Set&lt;String&gt; keys = jedis.keys(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    jedis.set(<span class="string">&quot;k5&quot;</span>, <span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">k5</span> <span class="operator">=</span> jedis.get(<span class="string">&quot;k5&quot;</span>);</span><br><span class="line">    System.out.println(k5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="七、Springboot整合Redis"><a href="#七、Springboot整合Redis" class="headerlink" title="七、Springboot整合Redis"></a>七、Springboot整合Redis</h1><p>1、引入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-pool2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、编写配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.redis.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonAutoDetect;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.PropertyAccessor;</span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.databind.ObjectMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.CacheManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.CachingConfigurerSupport;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cache.annotation.EnableCaching;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCacheConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.cache.RedisCacheManager;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.RedisSerializationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.RedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.Duration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableCaching</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RedisConfig</span> <span class="keyword">extends</span> <span class="title class_">CachingConfigurerSupport</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title function_">redisTemplate</span><span class="params">(RedisConnectionFactory factory)</span> &#123;</span><br><span class="line">        RedisTemplate&lt;String, Object&gt; template = <span class="keyword">new</span> <span class="title class_">RedisTemplate</span>&lt;&gt;();</span><br><span class="line">        RedisSerializer&lt;String&gt; redisSerializer = <span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>();</span><br><span class="line">        <span class="type">Jackson2JsonRedisSerializer</span> <span class="variable">jackson2JsonRedisSerializer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jackson2JsonRedisSerializer</span>(Object.class);</span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">om</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class="line">        template.setConnectionFactory(factory);</span><br><span class="line">        <span class="comment">//key序列化方式</span></span><br><span class="line">        template.setKeySerializer(redisSerializer);</span><br><span class="line">        <span class="comment">//value序列化</span></span><br><span class="line">        template.setValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        <span class="comment">//value hashmap序列化</span></span><br><span class="line">        template.setHashValueSerializer(jackson2JsonRedisSerializer);</span><br><span class="line">        <span class="keyword">return</span> template;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> CacheManager <span class="title function_">cacheManager</span><span class="params">(RedisConnectionFactory factory)</span> &#123;</span><br><span class="line">        RedisSerializer&lt;String&gt; redisSerializer = <span class="keyword">new</span> <span class="title class_">StringRedisSerializer</span>();</span><br><span class="line">        <span class="type">Jackson2JsonRedisSerializer</span> <span class="variable">jackson2JsonRedisSerializer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Jackson2JsonRedisSerializer</span>(Object.class);</span><br><span class="line">        <span class="comment">//解决查询缓存转换异常的问题</span></span><br><span class="line">        <span class="type">ObjectMapper</span> <span class="variable">om</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ObjectMapper</span>();</span><br><span class="line">        om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY);</span><br><span class="line">        om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL);</span><br><span class="line">        jackson2JsonRedisSerializer.setObjectMapper(om);</span><br><span class="line">        <span class="comment">// 配置序列化（解决乱码的问题）,过期时间600秒</span></span><br><span class="line">        <span class="type">RedisCacheConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> RedisCacheConfiguration.defaultCacheConfig()</span><br><span class="line">                .entryTtl(Duration.ofSeconds(<span class="number">600</span>)) <span class="comment">//缓存过期10分钟 ---- 业务需求。</span></span><br><span class="line">                .serializeKeysWith(RedisSerializationContext.SerializationPair.fromSerializer(redisSerializer))<span class="comment">//设置key的序列化方式</span></span><br><span class="line">                .serializeValuesWith(RedisSerializationContext.SerializationPair.fromSerializer(jackson2JsonRedisSerializer)) <span class="comment">//设置value的序列化</span></span><br><span class="line">                .disableCachingNullValues();</span><br><span class="line">        <span class="type">RedisCacheManager</span> <span class="variable">cacheManager</span> <span class="operator">=</span> RedisCacheManager.builder(factory)</span><br><span class="line">                .cacheDefaults(config)</span><br><span class="line">                .build();</span><br><span class="line">        <span class="keyword">return</span> cacheManager;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、使用redisTemplate操作Redis</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testRedis</span><span class="params">()</span>&#123;</span><br><span class="line">    redisTemplate.opsForValue().set(<span class="string">&quot;test&quot;</span>,<span class="string">&quot;wwj&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> (String)redisTemplate.opsForValue().get(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">    System.out.println(name);</span><br><span class="line">    <span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="八、事务操作"><a href="#八、事务操作" class="headerlink" title="八、事务操作"></a>八、事务操作</h1><h2 id="2-1-基本操作"><a href="#2-1-基本操作" class="headerlink" title="2.1    基本操作"></a>2.1    基本操作</h2><p>串联多个命令执行，防止别的命令插队</p><p>Multi：类似于开启事务，组队阶段，输入的命令会依次进入命令队列</p><p>Exec：Redis会将之前输入的命令队列中的命令一次执行</p><p>discard：放弃组队****</p><p><strong>在组件过程中命令发生失败，队列直接失败</strong></p><p><strong>在执行过程中命令发生失败，队列会执行失败之外的其余命令</strong></p><p>命令：<code>multi exec dicard</code></p><h2 id="2-2-事务冲突"><a href="#2-2-事务冲突" class="headerlink" title="2.2    事务冲突"></a>2.2    事务冲突</h2><img src="/2022/09/04/Redis/2022-07-22-16-58-55-image.png" class=""><p>悲观锁：每次拿数据的时候都认为别人会修改数据，所以在每次拿数据的时候都会上锁，这样别人想拿这个数据就会被锁，直到它拿到锁为止。</p><p>乐观锁：每次拿数据都认为别人不会修改，不会上锁，但在更新的时候会判断一下在此期间别人有没有更新数据，使用版本号等方式判断。（适合读）</p><img src="/2022/09/04/Redis/2022-07-22-17-03-38-image.png" class=""><p>乐观锁使用：在执行multi之前先对key执行 <code>watch key</code></p><p>当一个用户操作了里面的数据，另外一个用户再想进行操作就出现nil事务打断</p><p><code>unwatch</code> 取消监视</p><p><strong>事务的三大特性</strong></p><p>1、单独的隔离操作：事务中的所有命令都会序列化，按顺序执行，事务在执行的过程中，不会被其他客户端的及命令请求所打断</p><p>2、没有隔离级别概念</p><p>3、不保证原子性：事务中如果有一条命令执行失败，后面的命令仍然会被执行</p><p>ab工具（模拟并发操作）：<code>yum install httpd-tools</code></p><p>-n : 请求次数</p><p>-c : 并发次数</p><p>-t：提交数据类型POST请求请求地址</p><p>-p: 设置参数类型为content-type</p><h2 id="2-3-秒杀案例"><a href="#2-3-秒杀案例" class="headerlink" title="2.3    秒杀案例"></a>2.3    秒杀案例</h2><p>问题：</p><p>1、商品库存变成负数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 乐观锁监视库存</span></span><br><span class="line">jedis.watch(kcKey);</span><br><span class="line"><span class="comment">// 使用事务</span></span><br><span class="line"><span class="type">Transaction</span> <span class="variable">multi</span> <span class="operator">=</span> jedis.multi();</span><br><span class="line"><span class="comment">// 组队操作</span></span><br><span class="line">multi.decr(kcKey);  <span class="comment">// 减一</span></span><br><span class="line">multi.sadd(userKey, uid); <span class="comment">// 添加用户到set集合中</span></span><br><span class="line"></span><br><span class="line">List&lt;Object&gt; results = multi.exec();</span><br><span class="line"><span class="keyword">if</span> (results == <span class="literal">null</span> || results.size() == <span class="number">0</span>) &#123;</span><br><span class="line">    System.out.println(<span class="string">&quot;秒杀失败&quot;</span>);</span><br><span class="line">    jedis.close();</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、连接超时</p><p>解决连接超时</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 连接池工具类</span></span><br><span class="line"><span class="keyword">package</span> com.yanghui;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPool;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.JedisPoolConfig;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> YH</span></span><br><span class="line"><span class="comment"> * DCL 懒汉式</span></span><br><span class="line"><span class="comment"> * 1、确保一个类只有一个实例对象</span></span><br><span class="line"><span class="comment"> * 2、一个私有静态变量（实例对象）</span></span><br><span class="line"><span class="comment"> * 3、一个公共静态方法（获取实例对象的方法）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JedisPoolUtil</span> &#123;</span><br><span class="line">    <span class="comment">/** volatile 保证 内存可见性 */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">volatile</span> <span class="type">JedisPool</span> <span class="variable">jedisPool</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 构造器私有 */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="title function_">JedisPoolUtil</span><span class="params">()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/** 获取 JedisPool 的实例对象方法*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JedisPool <span class="title function_">getJedisPoolInstance</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 如果 jedisPoll 为 null，说明 jedisPool 还没有实例对象</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">if</span> (jedisPool == <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 加锁，防止多线程下争抢资源，同时 new 出多个实例对象</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">synchronized</span> (JedisPoolUtil.class) &#123;</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * 再判断一次 jedisPool 是否真的为 null</span></span><br><span class="line"><span class="comment">                 * 以防在加锁的时候已经有线程 new 了一个实例对象了</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                <span class="keyword">if</span> (jedisPool == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="comment">/** 这个类可以对连接池进行配置，如最大连接数等 */</span></span><br><span class="line">                    <span class="type">JedisPoolConfig</span> <span class="variable">jedisPoolConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JedisPoolConfig</span>();</span><br><span class="line">                    <span class="comment">/** 设置 JedisPool 最大连接数 */</span></span><br><span class="line">                    jedisPoolConfig.setMaxTotal(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">                    jedisPool = <span class="keyword">new</span> <span class="title class_">JedisPool</span>(jedisPoolConfig, <span class="string">&quot;127.0.0.1&quot;</span>, <span class="number">6379</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** 返回 JedisPool 实例 */</span></span><br><span class="line">        <span class="keyword">return</span> jedisPool;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放资源</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">release</span><span class="params">(JedisPool jedisPool, Jedis jedis)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (jedis != <span class="literal">null</span>) &#123;</span><br><span class="line">            jedis.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用连接池</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">JedisPool</span> <span class="variable">jedisPool</span> <span class="operator">=</span> JedisPoolUtil.getJedisPoolInstance();</span><br><span class="line">        <span class="type">Jedis</span> <span class="variable">jedis</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            jedis = jedisPool.getResource();</span><br><span class="line">            jedis.set(<span class="string">&quot;k18&quot;</span>, <span class="string">&quot;v183&quot;</span>);</span><br></pre></td></tr></table></figure><p>3、库存遗留（乐观锁当有一个人抢到了就会修改版本号，其他人就抢不到了）</p><p>Lua脚本，暂时不了解。</p><h1 id="九、数据持久化"><a href="#九、数据持久化" class="headerlink" title="九、数据持久化"></a>九、数据持久化</h1><p>Redis本身是一个内存数据库，可以使用RDB和AOF将数据存到硬盘（持久化操作）</p><h2 id="2-1-RDB"><a href="#2-1-RDB" class="headerlink" title="2.1    RDB"></a>2.1    RDB</h2><p>在指定的时间间隔内将内存中的数据集快照写入硬盘（每隔一段时间获取当前时间的所有数据进行持久化操作）</p><p>但单独创建一个子进程（fork）来进行持久化操作，会先将数据写入到一个临时文件中，等待持久化过程都结束了，再用临时文件替换上次持久化文件（写时复制技术）。</p><img src="/2022/09/04/Redis/2022-07-22-19-43-36-image.png" class=""><img src="/2022/09/04/Redis/2022-07-22-19-44-38-image.png" class=""><img src="/2022/09/04/Redis/2022-07-22-19-45-34-image.png" class=""><p>save：在一个时间间隔内，有多少个key发生变化进行持久化操作 <code>save seconds key</code></p><p>优势：适合大规模数据恢复</p><p>缺点：follk技术数据庞大造成性能影响，最后一次持久化操作可能丢失</p><img src="/2022/09/04/Redis/2022-07-22-19-54-22-image.png" class=""><h2 id="2-2-RDB文件恢复"><a href="#2-2-RDB文件恢复" class="headerlink" title="2.2    RDB文件恢复"></a>2.2    RDB文件恢复</h2><p>将RDB文件拷贝到rdb文件的工作目录</p><p>启动Redis，备份数据会自动加载</p><h2 id="2-3-AOF"><a href="#2-3-AOF" class="headerlink" title="2.3    AOF"></a>2.3    AOF</h2><p> 以日志的形式记录每个写操作，将所有写的指令写下来追加到文件中。</p><img src="/2022/09/04/Redis/2022-07-24-13-45-20-image.png" class=""><p><strong>AOF和RDB同时开启会默认读取AOF的数据</strong></p><p>异常恢复：修复AOF文件，通过 &#x2F;usr&#x2F;local&#x2F;redis-check-aof –fix 命令加上修复文件名称，可以进行修复</p><p>AOF同步频率设置：</p><p><code>appendsync always</code> ：始终同步，写入都会立刻记录到日志，性能较差完整性好</p><p><code>appednsync eversec</code>：每秒同步，如果宕机，本秒数据会丢失</p><p><code>appendsync no</code>： redis不主动进行同步，把同步时机交给操作系统</p><p>重写压缩操作：将多个指令合成一个指令（AOF当前大小&gt;&#x3D;baseSzie+baseSize * 100%）》&#x3D;64mb执行重写操作）</p><p>AOF持久化流程：</p><p>1、客户端请求写命令被追加到AOF缓存区</p><p>2、AOF缓冲区根据AOF持久化策略将操作sync同步磁盘AOF文件</p><p>3、AOF文件超过重写策略或手动重写时，会被AOF文件重写，压缩AOF文件容量</p><p>4、服务重启会加载AOF文件恢复数据 </p><h1 id="十、主从复制"><a href="#十、主从复制" class="headerlink" title="十、主从复制"></a>十、主从复制</h1><p>    主机数据更新后根据配置和策略，自动同步到备机的master&#x2F;slaver机制，master写为主，slave以读为主</p><p>1、实现读写分离，增大性能</p><p>2、容灾（一个从的宕机可以快速去切换别的从）快速恢复</p><h2 id="10-1-搭建主从"><a href="#10-1-搭建主从" class="headerlink" title="10.1    搭建主从"></a>10.1    搭建主从</h2><p>1、创建一个新的文件夹</p><p>2、将Redis.conf配置文件复制进来</p><p>3、复制多三个Redis核心配置文件分别启动</p><img src="/2022/09/04/Redis/2022-07-24-14-14-45-image.png" class=""><p>连接某个Redis服务：<code>redis-cli -p port</code></p><p>进入客户端查询服务器状态信息：<code>info repliation</code></p><img src="/2022/09/04/Redis/2022-07-24-14-24-52-image.png" class=""><p>配置从机：<code>salveof 主机IP 端口号</code></p><h2 id="10-2-一主两从，复制原理"><a href="#10-2-一主两从，复制原理" class="headerlink" title="10.2    一主两从，复制原理"></a>10.2    一主两从，复制原理</h2><p>一主二从：</p><p>1、当从服务器宕机之后再启动，从服务器失去从机的身份变成主机需要重新配置</p><p>2、当从服务器重新配置好从机的时候，数据和主机同步</p><p>3、当主服务器宕机之后，从服务器角色依然是从服务器，当主服务器重新启动的时候依然会回到主服务器的位置</p><p>复制原理：</p><p>1、从连接到主服务器之后会发送会向主服务器进行数据消息同步</p><p>2、主服务器会接到从服务器发过来的同步消息，把主服务器数据进行持久化，将rdb文件发送给从服务器，从服务器会进行读取</p><p>3、每次主服务器进行写操作之后会和从服务器进行数据同步</p><h2 id="10-3-薪火相传，反客为主"><a href="#10-3-薪火相传，反客为主" class="headerlink" title="10.3    薪火相传，反客为主"></a>10.3    薪火相传，反客为主</h2><p>薪火相传：</p><p>在从服务器中继续配置一个从服务器，解决主服务器同步压力</p><p>反客为主：</p><p><code>salveof non one</code>：当主机宕机的时候，将从机变成主机（手动切换）</p><h2 id="10-4-反客为主自动版"><a href="#10-4-反客为主自动版" class="headerlink" title="10.4    反客为主自动版"></a>10.4    反客为主自动版</h2><p>1、新建 sentinel.conf文件</p><p>2、配置内容(1：至少有多少个哨兵同意才切换主从）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sentinal monitor mymaster(监控对象起的服务名称) 127.0.0.1 6379 1</span><br></pre></td></tr></table></figure><p>3、启动哨兵：<code>redis-sentinal 配置文件</code></p><p>复制延迟：当主服务器宕机了，需要将一些数据给同步给从服务器带来的延迟</p><img src="/2022/09/04/Redis/2022-07-24-14-56-17-image.png" class=""><p><strong>主机宕机的时候之前的主机就会变成从机</strong></p><h1 id="十一、集群"><a href="#十一、集群" class="headerlink" title="十一、集群"></a>十一、集群</h1><h2 id="11-1-集群搭建"><a href="#11-1-集群搭建" class="headerlink" title="11.1    集群搭建"></a>11.1    集群搭建</h2><p>1、复制核心配置文件进行设置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">include /myredis/redis.conf   公共部分引入</span><br><span class="line">pidfile /var/run/redis_6379.pid  pid文件引入</span><br><span class="line">port 6379  端口号</span><br><span class="line">dbfilename dump6379.rdb  rdb文件</span><br><span class="line">cluster-enabled yes 集群开启</span><br><span class="line">cluster-config-file nodes-6379.conf  节点文件</span><br><span class="line">cluster-node-timeout 15000 设置节点超时时间（超时切换主从）</span><br></pre></td></tr></table></figure><p>2、集群命令需要在redis的src文件下执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-cli --cluster create --cluster-replicas 1 192.168.218.128:6379</span><br><span class="line">192.168.218.128:6380 192.168.218.128:6381 192.168.218.128:6389</span><br><span class="line">192.168.218.128:6390 192.168.218.128:6391</span><br></pre></td></tr></table></figure><p>集群连接：<code>redis-cli -c -p 6379</code></p><img src="/2022/09/04/Redis/2022-07-24-15-39-06-image.png" class=""><h2 id="11-2-集群操作故障恢复"><a href="#11-2-集群操作故障恢复" class="headerlink" title="11.2    集群操作故障恢复"></a>11.2    集群操作故障恢复</h2><p>分配原则：每个主数据库运行在不同的IP地址，每个从库和主库不在同一IP地址</p><img src="/2022/09/04/Redis/2022-07-24-15-41-26-image.png" class=""><img src="/2022/09/04/Redis/2022-07-24-15-44-10-image.png" class=""><img src="/2022/09/04/Redis/2022-07-24-15-44-48-image.png" class=""><img src="/2022/09/04/Redis/2022-07-24-15-48-07-image.png" class=""><img src="/2022/09/04/Redis/2022-07-24-15-48-43-image.png" class=""><img src="/2022/09/04/Redis/2022-07-24-15-49-37-image.png" class="">的<p>故障恢复：</p><img src="/2022/09/04/Redis/2022-07-24-15-53-38-image.png" class=""><p>cluster-require-full-coverage：yes&#x2F;no</p><p>yes：某一段插槽的主从都挂掉，整个集群挂掉</p><p>no：只是该插槽不能使用，其余能够使用</p><p>Jedis操作集群：</p><img src="/2022/09/04/Redis/2022-07-24-16-16-50-image.png" class=""><h2 id="11-3-缓存穿透"><a href="#11-3-缓存穿透" class="headerlink" title="11.3    缓存穿透"></a>11.3    缓存穿透</h2><p>    当应用服务器压力突然增大的时候，导致访问Redis缓存获取不存在的数据，就会去查数据库导致数据库压力增大</p><p>问题原因：</p><p>1、redis查询不到数据库</p><p>2、出现非正常访问数据库（因为Redis没有会一直访问数据库）</p><p>解决方案：</p><p>1、对空值进行缓存</p><p>2、设置可访问名单（bitmap）</p><p>3、采用布隆过滤器</p><p>4、实时监控</p><h2 id="11-4-缓存击穿"><a href="#11-4-缓存击穿" class="headerlink" title="11.4    缓存击穿"></a>11.4    缓存击穿</h2><p>    数据库访问压力瞬时增加，redis并没有出现大量key过期，redis还是正常运行状态。</p><p>问题原因：</p><p>1、redis某个key过期，大量访问都使用这个key</p><p>解决方案：</p><p>1、预先设置热门数据到redis中</p><p>2、实时调整，调整过期时长</p><p>3、使用锁：排它锁</p><h2 id="11-5-缓存雪崩"><a href="#11-5-缓存雪崩" class="headerlink" title="11.5    缓存雪崩"></a>11.5    缓存雪崩</h2><p>    数据库压力变大，服务器崩溃</p><p>1、在极少时间段，查询大量key的集中过期情况</p><p>解决方案：</p><p>1、构建多级缓存架构</p><p>2、使用锁或者队列</p><p>3、设置过期标志更新缓存</p><p>4、将缓存失效时间分散开</p><h2 id="11-6-分布式锁"><a href="#11-6-分布式锁" class="headerlink" title="11.6    分布式锁"></a>11.6    分布式锁</h2><p>解决问题：操作一把锁对整个集群都有效</p><p>使用setnx特性（数据库内不能加入相同的key值除非删除）实现分布式锁（添加一个数据就是加锁，删除一个数据就是释放锁）</p><p>需要设置过期时间：防止一直被锁，其他请求无法访问</p><p>问题：服务器宕机无法设置过期时间：上锁同时设置过期时间</p><img src="/2022/09/04/Redis/2022-07-24-16-39-30-image.png" class=""><img src="/2022/09/04/Redis/2022-07-24-16-49-36-image.png" class=""><img src="/2022/09/04/Redis/2022-07-24-16-51-55-image.png" class=""><p>Lua脚本：支持原子性操作而且不会被打断</p><h1 id="十二、新功能"><a href="#十二、新功能" class="headerlink" title="十二、新功能"></a>十二、新功能</h1><h2 id="12-1-ACL权限控制"><a href="#12-1-ACL权限控制" class="headerlink" title="12.1    ACL权限控制"></a>12.1    ACL权限控制</h2><img src="/2022/09/04/Redis/2022-07-24-16-59-55-image.png" class=""><h2 id="12-2-IO多线程"><a href="#12-2-IO多线程" class="headerlink" title="12.2    IO多线程"></a>12.2    IO多线程</h2><p>执行命令依然是单线程</p><h2 id="12-3-Cluster"><a href="#12-3-Cluster" class="headerlink" title="12.3    Cluster"></a>12.3    Cluster</h2><p>支持Ruby环境实现集群搭建</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 缓存 </tag>
            
            <tag> 分布式 </tag>
            
            <tag> 非关系数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot</title>
      <link href="/2022/09/04/SpringBoot/"/>
      <url>/2022/09/04/SpringBoot/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Spring Boot是由Pivotal团队提供的全新<a href="https://baike.baidu.com/item/%E6%A1%86%E6%9E%B6/1212667?fromModule=lemma_inlink">框架</a>，其设计目的是用来<a href="https://baike.baidu.com/item/%E7%AE%80%E5%8C%96/3374416?fromModule=lemma_inlink">简化</a>新<a href="https://baike.baidu.com/item/Spring/85061?fromModule=lemma_inlink">Spring</a>应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Spring Boot致力于在蓬勃发展的快速应用开发领域(rapid application development)成为领导者。</p><h1 id="一、SpringBoot基础配置"><a href="#一、SpringBoot基础配置" class="headerlink" title="一、SpringBoot基础配置"></a>一、SpringBoot基础配置</h1><h2 id="1-1-SpringBoot搭建"><a href="#1-1-SpringBoot搭建" class="headerlink" title="1.1    SpringBoot搭建"></a>1.1    SpringBoot搭建</h2><p>1、创建Maven空项目</p><p>2、引入SpringBoot依赖坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、引入web开发坐标（包括Spring、MVC等）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4、引入打包成jar包插件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5、编写启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 主程序类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 驱动类必要注解</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 运行SpringBoot必要代码行</span></span><br><span class="line">        SpringApplication.run(MainApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6、测试控制层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@Controller</span></span><br><span class="line"><span class="comment">//@ResponseBody</span></span><br><span class="line"><span class="meta">@RestController</span> <span class="comment">// 代表了ResponseBody和Controller注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/hello&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">handle01</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello SpringBoot&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7、创建SpringBoot核心配置文件</p><p><strong>application.properties</strong></p><p>具体配置可以看文档</p><p><a href="https://docs.spring.io/spring-boot/docs/current/reference/html/application-properties.html#appendix.application-properties">Common Application Properties (spring.io)</a></p><img src="/2022/09/04/SpringBoot/image-20220525120606431.png" class="" title="image-20220525120606431"><h2 id="1-2-父项目POM"><a href="#1-2-父项目POM" class="headerlink" title="1.2    父项目POM"></a>1.2    父项目POM</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.3.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br></pre></td></tr></table></figure><p>声明众多J常用ar依赖（进行依赖管理）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">activemq.version</span>&gt;</span>5.15.13<span class="tag">&lt;/<span class="name">activemq.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">antlr2.version</span>&gt;</span>2.7.7<span class="tag">&lt;/<span class="name">antlr2.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">appengine-sdk.version</span>&gt;</span>1.9.82<span class="tag">&lt;/<span class="name">appengine-sdk.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artemis.version</span>&gt;</span>2.12.0<span class="tag">&lt;/<span class="name">artemis.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">aspectj.version</span>&gt;</span>1.9.6<span class="tag">&lt;/<span class="name">aspectj.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">assertj.version</span>&gt;</span>3.16.1<span class="tag">&lt;/<span class="name">assertj.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">atomikos.version</span>&gt;</span>4.0.6<span class="tag">&lt;/<span class="name">atomikos.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">awaitility.version</span>&gt;</span>4.0.3<span class="tag">&lt;/<span class="name">awaitility.version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bitronix.version</span>&gt;</span>2.1.4<span class="tag">&lt;/<span class="name">bitronix.version</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>在POM中对于要引入父项目的依赖就可以无需声明版本</strong></p><h2 id="1-3-版本自定义"><a href="#1-3-版本自定义" class="headerlink" title="1.3    版本自定义"></a>1.3    版本自定义</h2><p>1、找父项目内的使用版本用到的属性名是什么</p><img src="/2022/09/04/SpringBoot/image-20220525191633281.png" class="" title="image-20220525191633281"><p>2、在当前POM引入属性</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.43<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-4-Starter"><a href="#1-4-Starter" class="headerlink" title="1.4    Starter"></a>1.4    Starter</h2><p>工件名：spring-boot-starter-*   *为具体应用名（starter是提供对某种开发场景的一组依赖坐标）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>所有场景最底层依赖的starter：spring-boot-starter</strong></p><h2 id="1-5-自动配置（包扫描）"><a href="#1-5-自动配置（包扫描）" class="headerlink" title="1.5    自动配置（包扫描）"></a>1.5    自动配置（包扫描）</h2><p>1、对于web的starter来说SpringBoot已经帮助配置完成了字符编码、前端控制器等一系列必要功能。</p><p>2、SpringBoot默认规则是从主程序所在包及其子包进行扫描组件操作，无需配置包扫描</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 自定义扫描路径可以使用scanBasePackages</span></span><br><span class="line"><span class="meta">@SpringBootApplication(scanBasePackages = &quot;com.wwj&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 运行SpringBoot必要代码行</span></span><br><span class="line">        <span class="type">ConfigurableApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> SpringApplication.run(MainApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// @SpringBootApplication()   // 等于下面三个注解</span></span><br><span class="line"><span class="meta">@SpringBootConfiguration</span> </span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.wwj&quot;)</span>     <span class="comment">// 配置包扫描的第二种方式</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainApplication</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 运行SpringBoot必要代码行</span></span><br><span class="line">        <span class="type">ConfigurableApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> SpringApplication.run(MainApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-6-Configuration注解"><a href="#1-6-Configuration注解" class="headerlink" title="1.6    @Configuration注解"></a>1.6    @Configuration注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SpringBoot的配置注解声明</span></span><br><span class="line"><span class="comment">// 获取的组件是单实例的多次获取都是一个地址值</span></span><br><span class="line"><span class="comment">// 配置类本身也是一个组件</span></span><br><span class="line"><span class="meta">@Configuration(proxyBeanMethods = false)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给IOC容器添加组件，以方法名为id，返回类型是组件类型，返回的值是容器中的实例</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">user</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;zhangsan&quot;</span>,<span class="string">&quot;1234&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>proxyBeanMethods代理bean方法属性：单实例、多实例</strong></p><p>true：full全模式，这时候的bean是单实例，从容器里拿多少次地址值都是相同的</p><p>false：lite轻量模式的，多实例</p><p>全模式：SpringBoot会检查容器里是否有该组件，降低效率</p><p>轻量级模式：SpringBoot会跳过检查</p><p><strong>对于有组件依赖的时候使用全模式（一个对象需要调用另一个组件IOC对象存在的值）</strong></p><h2 id="1-7-Import"><a href="#1-7-Import" class="headerlink" title="1.7    @Import"></a>1.7    @Import</h2><p>作用：调用组件中的类无参构造器创建组件</p><p>作用范围：使用在标注为Controller等标注Spring容器注解类上使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Import(&#123;User.class&#125;)</span>  <span class="comment">// 默认组件名是全类名</span></span><br></pre></td></tr></table></figure><h2 id="1-8-Conditional条件装配"><a href="#1-8-Conditional条件装配" class="headerlink" title="1.8    @Conditional条件装配"></a>1.8    @Conditional条件装配</h2><p>1、@ConditionalOnBean：当该条件成立创建bean</p><p>2、@ConditionalOnMissingBean：当容器没有name名称创建</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ConditionalOnBean(name = &quot;组件名&quot;)</span> <span class="comment">// 当IOC容器中有该name组件名就执行下面的创建bean方法</span></span><br><span class="line"><span class="meta">@ConditionalOnMissingBean(name = &quot;组件名&quot;)</span> <span class="comment">// 当IOC容器没有name组件名就执行下面方法</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">user</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;zhangsan&quot;</span>,<span class="string">&quot;1234&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>@Conditional注解可以作用在类上，如果条件下面方法全部执行，不成立类下方法全部不执行</strong></p><p><strong>也可以作用在方法上，条件成成立决定方法执行或不执行</strong></p><h2 id="1-9-ImportResource"><a href="#1-9-ImportResource" class="headerlink" title="1.9    @ImportResource"></a>1.9    @ImportResource</h2><p><strong>解决：xml配置IOC容器不想全部移植到配置类中</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ImportResource(&quot;classpath:beans.xml&quot;)</span>  <span class="comment">// 需要作用在配置类上</span></span><br><span class="line"><span class="meta">@Configuration(proxyBeanMethods = false)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> &#123;</span><br></pre></td></tr></table></figure><p>使得xml配置IOc容器生效，无需配置移植</p><h2 id="1-10-ConfigurationProperties属性注入"><a href="#1-10-ConfigurationProperties属性注入" class="headerlink" title="1.10    @ConfigurationProperties属性注入"></a>1.10    @ConfigurationProperties属性注入</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span>   <span class="comment">// 必须受IOC容器管理</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;myuser&quot;)</span> <span class="comment">// 声明前缀名不能使用驼峰</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">myuser.userName</span>=<span class="string">wwj</span></span><br><span class="line"><span class="attr">myuser.userPassword</span>=<span class="string">1234</span></span><br></pre></td></tr></table></figure><p><strong>通过properties文件配置注入数据</strong></p><hr><p>方法2：通过EnableConfigurationProperties</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;myuser&quot;)</span>  <span class="comment">// 就可以不用Component注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableConfigurationProperties(User.class)</span>  <span class="comment">// 必须在配置类上使用，开启配置绑定，并且放入IOC容器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyConfig</span> &#123;</span><br></pre></td></tr></table></figure><h2 id="1-11-自动配置流程"><a href="#1-11-自动配置流程" class="headerlink" title="1.11    自动配置流程"></a>1.11    自动配置流程</h2><p>1、SpringBoot加载所有自动配置类，xxxxAutoConfiguration（但自动配置内的组件并不是所有的组件都会生效）</p><p>2、每个自动配置类都会按照条件注解进行生效，默认会绑定配置文件下指定配置的值，xxxxProperties，进行配置文件绑定</p><p>3、通过条件注解生效的配置类就会给容器装配众多组件</p><p>4、容器中组件有了，相当于拥有了功能</p><p><strong>定制化配置</strong></p><p>1、可以自定义bean替换底层组件</p><p>2、看这个组件获取的配置文件的什么值，就可以去properties文件修改</p><h2 id="1-12-使用流程"><a href="#1-12-使用流程" class="headerlink" title="1.12    使用流程"></a>1.12    使用流程</h2><p>1、引入starter场景依赖</p><p>2、查看自动配置（查看依赖、配置文件中<code>debut=true</code>negative不生效、positive生效）</p><p>3、修改配置（查看文档、源码分析）</p><p>4、自定义加入或替换组件@Bean @Component</p><h1 id="二、简化开发"><a href="#二、简化开发" class="headerlink" title="二、简化开发"></a>二、简化开发</h1><h2 id="2-1-Lombok"><a href="#2-1-Lombok" class="headerlink" title="2.1    Lombok"></a>2.1    Lombok</h2><p>@Data ： get、set方法</p><p>@ToString：toString方法</p><p>@AllConstructor：全参构造器</p><p>@NoArgsConstructor：无参构造器</p><h2 id="2-2-dev-tools实时生效"><a href="#2-2-dev-tools实时生效" class="headerlink" title="2.2    dev-tools实时生效"></a>2.2    dev-tools实时生效</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>ctrl+F9</p><h2 id="2-3-SpringInitializr"><a href="#2-3-SpringInitializr" class="headerlink" title="2.3    SpringInitializr"></a>2.3    SpringInitializr</h2><img src="/2022/09/04/SpringBoot/image-20220529110811236.png" class="" title="image-20220529110811236"><h2 id="三、核心功能"><a href="#三、核心功能" class="headerlink" title="三、核心功能"></a>三、核心功能</h2><h2 id="3-1-yaml配置文件"><a href="#3-1-yaml配置文件" class="headerlink" title="3.1    yaml配置文件"></a>3.1    yaml配置文件</h2><p><strong>1、语法</strong></p><p>key：value之间有空格</p><p>缩进表示层级关系</p><p>不允许使用tab，只能是空格</p><p>#表示注释</p><p>单双引号表示字符串（字符串可以不用单引号和双引号）</p><p><strong>单引号会将转义字符转义，双引号就不会</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 对象表示</span></span><br><span class="line"><span class="attr">user:</span></span><br><span class="line">  <span class="attr">userName:</span> <span class="string">zhangsan</span></span><br><span class="line">  <span class="attr">userPassword:</span> <span class="number">1234</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#  数组写法</span></span><br><span class="line"><span class="attr">user:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">123</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">223</span></span><br><span class="line">  <span class="bullet">-</span> <span class="number">334</span></span><br><span class="line"><span class="attr">user:</span> [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># map集合</span></span><br><span class="line"><span class="attr">score:</span> &#123;<span class="string">user:wwj</span>,<span class="string">password:123</span>&#125;</span><br></pre></td></tr></table></figure><img src="/2022/09/04/SpringBoot/image-20220529112429474.png" class="" title="image-20220529112429474"><h2 id="3-2-配置提示"><a href="#3-2-配置提示" class="headerlink" title="3.2    配置提示"></a>3.2    配置提示</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>需要运行一次才会有提示</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">配置打包排除该提示jar包</span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">excludes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">exclude</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">artifacted</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifacted</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">exclude</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">excludes</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三、Web开发"><a href="#三、Web开发" class="headerlink" title="三、Web开发"></a>三、Web开发</h1><h2 id="3-1-静态资源目录"><a href="#3-1-静态资源目录" class="headerlink" title="3.1     静态资源目录"></a>3.1     静态资源目录</h2><img src="/2022/09/04/SpringBoot/image-20220529115335058.png" class="" title="image-20220529115335058"><p>访问：当前项目根路径&#x2F;+静态资源名</p><p>静态资源映射：先去找映射再去找静态资源</p><h2 id="3-2-配置静态资源访问"><a href="#3-2-配置静态资源访问" class="headerlink" title="3.2    配置静态资源访问"></a>3.2    配置静态资源访问</h2><p>默认无前缀：类路径&#x2F;静态资源名</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#    配置静态资源前缀，默认无前缀</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">mvc:</span></span><br><span class="line">    <span class="attr">static-path-pattern:</span> <span class="string">/res/**</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#    配置自定义的静态资源访问文件目录</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="attr">static-locations:</span> <span class="string">classpath:/pages/</span></span><br><span class="line">      <span class="comment"># 数组形式</span></span><br><span class="line">      <span class="attr">static-locations:</span> [<span class="string">classpath:/pages/</span>]</span><br></pre></td></tr></table></figure><h2 id="3-3-欢迎页和网页小图标"><a href="#3-3-欢迎页和网页小图标" class="headerlink" title="3.3    欢迎页和网页小图标"></a>3.3    欢迎页和网页小图标</h2><p>1、直接下静态资源目录下创建index.html文件夹</p><p><strong>不能配置静态资源访问前缀否则不能被正常访问</strong></p><p>2、favicon.ico图标图片名放入静态资源目录</p><p><strong>实现网页小图标自动设置，静态资源的前缀配置会影响到图标问题</strong></p><h2 id="3-4-HiddenFilter转换请求"><a href="#3-4-HiddenFilter转换请求" class="headerlink" title="3.4    HiddenFilter转换请求"></a>3.4    HiddenFilter转换请求</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">mvc:</span></span><br><span class="line">    <span class="attr">hiddenmethod:</span></span><br><span class="line">      <span class="attr">filter:</span></span><br><span class="line">        <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="3-5-常用注解"><a href="#3-5-常用注解" class="headerlink" title="3.5    常用注解"></a>3.5    常用注解</h2><p>1、参数名或接收名不一致实现绑定</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">(<span class="meta">@RequestParam(&quot;username&quot;)</span> String name)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、路径变量（适用于REST风格）可以使用map集合接收所有</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/user/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">hello</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> String name)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、@RequestHeader获取请求头java 可以使用map集合接收所有</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/user/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">hello2</span><span class="params">(<span class="meta">@RequestHeader</span> String name)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/09/04/SpringBoot/image-20220529140255742.png" class="" title="image-20220529140255742"><p>4、拿Cookie值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@CookieValue(&quot;-ga&quot;)</span> String cookeValue</span><br></pre></td></tr></table></figure><img src="/2022/09/04/SpringBoot/image-20220529140526716.png" class="" title="image-20220529140526716"><p>5、@RequestBody获取请求体</p><img src="/2022/09/04/SpringBoot/image-20220529140642510.png" class="" title="image-20220529140642510"><p>6、@RequestAttribute 获取请求域数据</p><img src="/2022/09/04/SpringBoot/image-20220529140925340.png" class="" title="image-20220529140925340"><p>6、矩阵变量</p><p>默认禁用该矩阵变量功能</p><p><strong>必须由路径变量才能被解析</strong></p><img src="/2022/09/04/SpringBoot/image-20220529142258544.png" class="" title="image-20220529142258544"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configurePathMatch</span><span class="params">(PathMatchConfigurer configurer)</span> &#123;</span><br><span class="line">        <span class="type">UrlPathHelper</span> <span class="variable">urlPathHelper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlPathHelper</span>();</span><br><span class="line">        <span class="comment">// 设置不移除分号后面的内容</span></span><br><span class="line">        urlPathHelper.setRemoveSemicolonContent(<span class="literal">false</span>);</span><br><span class="line">        configurer.setUrlPathHelper(urlPathHelper);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-5-表单重复提交解决"><a href="#3-5-表单重复提交解决" class="headerlink" title="3.5    表单重复提交解决"></a>3.5    表单重复提交解决</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 主页</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">main</span><span class="params">(User user, HttpSession session, Model model)</span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (StringUtils.hasLength(user.getUserName()) &amp;&amp; <span class="string">&quot;123456&quot;</span>.equals(user.getPassword()))&#123;</span><br><span class="line">         session.setAttribute(<span class="string">&quot;loginUser&quot;</span>,user);</span><br><span class="line">         <span class="comment">// 对于转发导致的表单重复提价，刷新的时候依然使用的/login这个映射</span></span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;redirect:/main.html&quot;</span>;  <span class="comment">// 防止表单重复提交使用重定向，到下面的一个方法的映射</span></span><br><span class="line">     &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">         model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;账号密码错误&quot;</span>);</span><br><span class="line">         <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@GetMapping(&quot;/main.html&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">mainPage</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 则刷新就会一致刷新该请求</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;main&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-6-拦截器配置"><a href="#3-6-拦截器配置" class="headerlink" title="3.6    拦截器配置"></a>3.6    拦截器配置</h2><p><strong>拦截器需要实现handleInterception接口</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.interceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LoginInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 目标方法执行之前</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> request.getSession();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">loginUser</span> <span class="operator">=</span> session.getAttribute(<span class="string">&quot;loginUser&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (loginUser != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        session.setAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;请先登录&quot;</span>);</span><br><span class="line">        response.sendRedirect(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 视图U渲染之前执行</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">postHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 视图渲染之后执行</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">afterCompletion</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注册拦截器实现web接口</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注册拦截器</span></span><br><span class="line"><span class="comment">// 配置web必须实现该类</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebAdminConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> <span class="title class_">LoginInterceptor</span>())</span><br><span class="line">                <span class="comment">// 拦截哪些路径</span></span><br><span class="line">                .addPathPatterns(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                <span class="comment">// 放行哪些路径(需要放行静态资源)</span></span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/&quot;</span>,<span class="string">&quot;/login&quot;</span>,<span class="string">&quot;/css/**&quot;</span>,<span class="string">&quot;/fonts/**&quot;</span>,<span class="string">&quot;/images/**&quot;</span>,<span class="string">&quot;/js/**&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>1、当前拦截器为true，顺序执拦截器的方法</p><p>2、如果为fasle，倒序执行已经执行了的拦截器的afterCompletion方法</p><p>3、所有拦截器都返回true执行目标方法，倒序执行所有拦截器的posthandle方法</p><p>4、页面渲染完成以后会倒序触发afterCondidition</p><img src="/2022/09/04/SpringBoot/image-20220529192810026.png" class="" title="image-20220529192810026"><h2 id="3-7-文件上传"><a href="#3-7-文件上传" class="headerlink" title="3.7    文件上传"></a>3.7    文件上传</h2><p>文件上传基本写法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">&quot;form&quot;</span> <span class="attr">th:action</span>=<span class="string">&quot;@&#123;/upload&#125;&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;exampleInputFile&quot;</span>&gt;</span>头像<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;headerImg&quot;</span> <span class="attr">id</span>=<span class="string">&quot;exampleInputFile&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;help-block&quot;</span>&gt;</span>Example block-level help text here.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;form-group&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;exampleInputFile&quot;</span>&gt;</span>生活照<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;photos&quot;</span>  <span class="attr">multiple</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;help-block&quot;</span>&gt;</span>Example block-level help text here.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">MultipartProperties   <span class="comment">// 配置文件上传属性类</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@AutoConfiguration</span></span><br><span class="line"><span class="meta">@ConditionalOnClass(&#123;Servlet.class, StandardServletMultipartResolver.class, MultipartConfigElement.class&#125;)</span></span><br><span class="line"><span class="meta">@ConditionalOnProperty(</span></span><br><span class="line"><span class="meta">    prefix = &quot;spring.servlet.multipart&quot;,</span></span><br><span class="line"><span class="meta">    name = &#123;&quot;enabled&quot;&#125;,</span></span><br><span class="line"><span class="meta">    matchIfMissing = true</span></span><br></pre></td></tr></table></figure><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改文件上传的相关参数</span></span><br><span class="line"><span class="comment"># 解决图片上传超内存异常</span></span><br><span class="line"><span class="attr">spring.servlet.multipart.max-file-size</span>=<span class="string">10MB</span></span><br><span class="line"><span class="attr">spring.servlet.multipart.max-request-size</span>=<span class="string">100MB</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/upload&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">upload</span><span class="params">(<span class="meta">@RequestParam(&quot;email&quot;)</span> String email,</span></span><br><span class="line"><span class="params">                     <span class="meta">@RequestParam(&quot;username&quot;)</span> String username,</span></span><br><span class="line"><span class="params">                     // 表单专用文件注解          专用文件类型</span></span><br><span class="line"><span class="params">                     // MultipartFile：自动封装上传的文件</span></span><br><span class="line"><span class="params">                     <span class="meta">@RequestPart(&quot;headerImg&quot;)</span> MultipartFile headerImg,</span></span><br><span class="line"><span class="params">                     <span class="meta">@RequestPart(&quot;photos&quot;)</span> MultipartFile[] photos)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line"></span><br><span class="line">    log.info(<span class="string">&quot;email=&#123;&#125;,username=&#123;&#125;,headerImg=&#123;&#125;,photos=&#123;&#125;&quot;</span>,</span><br><span class="line">            email,username,headerImg.getSize(),photos.length);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 文件保存</span></span><br><span class="line">    <span class="keyword">if</span> (!headerImg.isEmpty())&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">originalFilename</span> <span class="operator">=</span> headerImg.getOriginalFilename();<span class="comment">// 获取原始文件名</span></span><br><span class="line">        headerImg.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;E:\\&quot;</span>+originalFilename));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (photos.length&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span> (MultipartFile photo : photos) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!photo.isEmpty())&#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">originalFilename</span> <span class="operator">=</span> photo.getOriginalFilename();</span><br><span class="line">                photo.transferTo(<span class="keyword">new</span> <span class="title class_">File</span>(<span class="string">&quot;E:\\&quot;</span>+originalFilename));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;main&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>**MultipartResovler自动配置 **</p><p>原理：判断是否是文件上传请求，是的话就是封装文件上传请求。</p><h2 id="3-8-异常默认处理机制"><a href="#3-8-异常默认处理机制" class="headerlink" title="3.8    异常默认处理机制"></a>3.8    异常默认处理机制</h2><p>1、浏览器响应错误页面</p><p>2、不是浏览器响应JSON数据</p><img src="/2022/09/04/SpringBoot/image-20220530103948347.png" class="" title="image-20220530103948347"><p><strong>放在error文件夹下的可以自定义页面</strong></p><img src="/2022/09/04/SpringBoot/image-20220530104318595.png" class="" title="image-20220530104318595"><img src="/2022/09/04/SpringBoot/image-20220530104740703.png" class="" title="image-20220530104740703"><p><strong>显示默认JSON的自带消息和堆栈信息</strong></p><h2 id="3-9-原生Servlet使用"><a href="#3-9-原生Servlet使用" class="headerlink" title="3.9    原生Servlet使用"></a>3.9    原生Servlet使用</h2><p>1、编写Servlet类</p><p>2、配置原生Servlet扫描包注解</p><img src="/2022/09/04/SpringBoot/image-20220530105205578.png" class="" title="image-20220530105205578"><p>直接响应没有经过Spring的拦截器（需要保证单实例）</p><p><strong>使用配置类使用原生Servlet</strong></p><img src="/2022/09/04/SpringBoot/image-20220530110046153.png" class="" title="image-20220530110046153"><h2 id="3-10-定制Web"><a href="#3-10-定制Web" class="headerlink" title="3.10    定制Web"></a>3.10    定制Web</h2><p>@EnableWebMVc 全面接管SpringMVC自动配置的功能将会失效需要自己配置</p><p>WebMvcAutoConfiguration默认SpringMVC配置功能类，自动配置静态资源路径、欢迎页等</p><p>自定义配置Web需要实现WebCOnfigure接口</p><img src="/2022/09/04/SpringBoot/image-20220530110843858.png" class="" title="image-20220530110843858"><h1 id="四、数据访问"><a href="#四、数据访问" class="headerlink" title="四、数据访问"></a>四、数据访问</h1><h2 id="4-1-JDBC配置"><a href="#4-1-JDBC配置" class="headerlink" title="4.1    JDBC配置"></a>4.1    JDBC配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>未导入数据库驱动（<strong>数据库版本和驱动版本对应</strong>）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">maven的就近依赖原则</span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.49<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2022/09/04/SpringBoot/image-20220530115619607.png" class="" title="image-20220530115619607"><p>当前项目重新声明版本，属性优先原则</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">BootAdminApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Long</span> <span class="variable">count</span> <span class="operator">=</span> jdbcTemplate.queryForObject(<span class="string">&quot;select count(*) from user&quot;</span>, Long.class);</span><br><span class="line">        System.out.println(count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-Druid配置"><a href="#4-2-Druid配置" class="headerlink" title="4.2    Druid配置"></a>4.2    Druid配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>扩展配置项：<strong>spring.datasource.driud</strong></p><img src="/2022/09/04/SpringBoot/image-20220530124611535.png" class="" title="image-20220530124611535"><h2 id="4-3-Mybatis配置"><a href="#4-3-Mybatis配置" class="headerlink" title="4.3    Mybatis配置"></a>4.3    Mybatis配置</h2><p>1、引入坐标</p><p>2、boot配置文件配置mybatis位置</p><p>3、编写mapper接口</p><p>4、boot配置mapper的文件位置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>SqlSessionFactory：自动配置完成</p><p>SqlSession：自动配置</p><p>Mapper接口：只要标注了mapper注解就会自动扫描进来</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line">无需配置核心文件以及自动配置好了</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    User <span class="title function_">getUser</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">1234</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">  <span class="attr">jdbc:</span></span><br><span class="line">    <span class="attr">template:</span></span><br><span class="line">      <span class="attr">query-timeout:</span> <span class="number">3</span></span><br><span class="line"><span class="comment"># 一定需要配置数据源信息</span></span><br><span class="line"><span class="comment"># 配置文件位置</span></span><br><span class="line"><span class="comment"># 可以配置驼峰策略的配置</span></span><br><span class="line"><span class="comment"># mapper接口需要注解这样可以扫描包</span></span><br><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">config-location:</span> <span class="string">classpath:mybatis/mybatis-config.xml</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mybatis/mapper/*.xml</span></span><br></pre></td></tr></table></figure><h2 id="4-4-MybatisPlus配置"><a href="#4-4-MybatisPlus配置" class="headerlink" title="4.4    MybatisPlus配置"></a>4.4    MybatisPlus配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/test</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">1234</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line">  <span class="attr">jdbc:</span></span><br><span class="line">    <span class="attr">template:</span></span><br><span class="line">      <span class="attr">query-timeout:</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">User2Mapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>RedirectAttributes</strong></p><img src="/2022/09/04/SpringBoot/image-20220530154628073.png" class="" title="image-20220530154628073"><p>参数会添加到地址栏上</p><h1 id="五、单元测试"><a href="#五、单元测试" class="headerlink" title="五、单元测试"></a>五、单元测试</h1><h2 id="5-1-依赖坐标"><a href="#5-1-依赖坐标" class="headerlink" title="5.1    依赖坐标"></a>5.1    依赖坐标</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-2-常用注解"><a href="#5-2-常用注解" class="headerlink" title="5.2    常用注解"></a>5.2    常用注解</h2><p>@Test：测试方法</p><p>@DisplayName（“test”）：设置展示名称</p><p>@BeforeEach：每个测试方法之前都要运行</p><p>@AfterEach：每个测试方法结束以后运行</p><p>@BeforeAll：<strong>所有测试方法之前运行 需要是静态方法</strong></p><p>@AfterEach：<strong>所有测试方法之后执行 需要是静态方法</strong></p><p>@Disable： 禁用方法</p><p>@TimeOut（value &#x3D; 5,unit &#x3D; 单位）： 测试方法超时时间</p><p>@ExtendWith：使用Spring驱动的测试</p><p>@RepeatedTest（5）：重复测试方法</p><h2 id="5-3-断言、前置条件"><a href="#5-3-断言、前置条件" class="headerlink" title="5.3    断言、前置条件"></a>5.3    断言、前置条件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@DisplayName(&quot;断言测试&quot;)</span></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAssert</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 简单断言 自定义失败后返回的消息</span></span><br><span class="line">    assertEquals(<span class="number">1</span>, <span class="number">2</span>,<span class="string">&quot;业务失败&quot;</span>);</span><br><span class="line">    <span class="comment">// 测试对象是否类型一致</span></span><br><span class="line">    assertSame(<span class="keyword">new</span> <span class="title class_">User</span>() , <span class="keyword">new</span> <span class="title class_">User</span>());</span><br><span class="line">    <span class="comment">// 测试数组是否一致</span></span><br><span class="line">    assertArrayEquals(<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>&#125;, <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">1</span>,<span class="number">2</span>&#125;);</span><br><span class="line">    <span class="comment">// 组合断言</span></span><br><span class="line">    assertAll(<span class="string">&quot;test&quot;</span>,</span><br><span class="line">            ()-&gt;assertTrue(<span class="literal">true</span>),</span><br><span class="line">            ()-&gt;assertEquals(<span class="number">1</span>, <span class="number">1</span>));</span><br><span class="line">    <span class="comment">// 异常断言</span></span><br><span class="line">    assertThrows(ArithmeticException.class,</span><br><span class="line">            ()-&gt;&#123;<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">    fail();  <span class="comment">// 手动测试失败</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testAssumption</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 前置条件，当为false将不会执行方法</span></span><br><span class="line">    Assumptions.assumeTrue(<span class="literal">true</span>,<span class="string">&quot;nonono&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-4-参数化测试"><a href="#5-4-参数化测试" class="headerlink" title="5.4    参数化测试"></a>5.4    参数化测试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@ParameterizedTest</span></span><br><span class="line">    <span class="meta">@DisplayName(&quot;参数化测试&quot;)</span></span><br><span class="line"><span class="comment">//    @ValueSource(ints = &#123;1,2,3,4,5&#125;)</span></span><br><span class="line">    <span class="meta">@MethodSource(&quot;stringProvider&quot;)</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testParam</span><span class="params">(String i)</span>&#123;</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> Stream&lt;String&gt; <span class="title function_">stringProvider</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Stream.of(<span class="string">&quot;apple&quot;</span>,<span class="string">&quot;orange&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端技术 </tag>
            
            <tag> SpringBoot </tag>
            
            <tag> 后端框架 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud</title>
      <link href="/2022/09/04/SpringCloud/"/>
      <url>/2022/09/04/SpringCloud/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Spring Cloud是一系列框架的<a href="https://baike.baidu.com/item/%E6%9C%89%E5%BA%8F%E9%9B%86%E5%90%88/994839?fromModule=lemma_inlink">有序集合</a>。它利用Spring Boot的开发便利性巧妙地简化了分布式系统基础设施的开发，如服务发现注册、配置中心、消息总线、负载均衡、断路器、数据监控等，都可以用Spring Boot的开发风格做到一键启动和部署。</p><h1 id="一、微服务概念"><a href="#一、微服务概念" class="headerlink" title="一、微服务概念"></a>一、微服务概念</h1><h2 id="1-1-SpringCloud"><a href="#1-1-SpringCloud" class="headerlink" title="1.1    SpringCloud"></a>1.1    SpringCloud</h2><p>实现分布式微服务架构的一站式解决方案</p><h2 id="1-2-Springbboot和SpringCloud依赖规则"><a href="#1-2-Springbboot和SpringCloud依赖规则" class="headerlink" title="1.2    Springbboot和SpringCloud依赖规则"></a>1.2    Springbboot和SpringCloud依赖规则</h2><p>见官网对应原则</p><img src="/2022/09/04/SpringCloud/2022-07-31-15-02-46-image.png" class=""><h2 id="1-3-SpringCloud生态"><a href="#1-3-SpringCloud生态" class="headerlink" title="1.3    SpringCloud生态"></a>1.3    SpringCloud生态</h2><p>服务注册与发现</p><p>1、Eureka（不使用）</p><p>2、Zookeeper</p><p>3、Consul</p><p>4、Nacos</p><p>服务调用</p><p>1、Ribbon</p><p>2、LoadBalancer</p><p>服务调用</p><p>1、Feign（不使用）</p><p>2、OpenFeign<br>服务降级</p><p>1、Hystrix（不使用）</p><p>2、resilience4j</p><p>3、Sentienl</p><p>服务网关</p><p>1、Zuul（不使用）</p><p>2、gateway</p><p>服务配置</p><p>1、Cofig（不使用）</p><p>2、Nacos</p><p>服务总线</p><p>1、Bus（不使用）</p><p>2、Nacos</p><h2 id="1-4-创建项目"><a href="#1-4-创建项目" class="headerlink" title="1.4    创建项目"></a>1.4    创建项目</h2><p>1、创建maven</p><p>2、修改字符编码</p><p>3、注解生效激活</p><p>4、Java编译版本选择</p><p>5、File Type过滤</p><p>版本依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.wwj.springcloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud2020<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--统一管理jar包和版本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">junit.version</span>&gt;</span>4.12<span class="tag">&lt;/<span class="name">junit.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">log4j.version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">log4j.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">lombok.version</span>&gt;</span>1.16.18<span class="tag">&lt;/<span class="name">lombok.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mysql.version</span>&gt;</span>5.1.47<span class="tag">&lt;/<span class="name">mysql.version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">druid.verison</span>&gt;</span>1.1.17<span class="tag">&lt;/<span class="name">druid.verison</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mybatis.spring.boot.verison</span>&gt;</span>2.1.1<span class="tag">&lt;/<span class="name">mybatis.spring.boot.verison</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--子模块继承之后，提供作用：锁定版本+子module不用写groupId和version--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--spring boot 2.2.2--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.2.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--spring cloud Hoxton.SR1--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>Hoxton.SR1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--spring cloud alibaba 2.1.0.RELEASE--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- MySql --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mysql.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- Druid --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;druid.verison&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- mybatis-springboot整合 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;mybatis.spring.boot.verison&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--lombok--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;lombok.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;junit.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- log4j --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;log4j.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">fork</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fork</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">addResources</span>&gt;</span>true<span class="tag">&lt;/<span class="name">addResources</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-5-热部署"><a href="#1-5-热部署" class="headerlink" title="1.5    热部署"></a>1.5    热部署</h2><p>ctrl+f9</p><h2 id="1-6-RPC的RestTemplate"><a href="#1-6-RPC的RestTemplate" class="headerlink" title="1.6    RPC的RestTemplate"></a>1.6    RPC的RestTemplate</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参数1：URL  参数2：传过去的形参  参数3：返回值的class</span></span><br><span class="line"><span class="keyword">return</span> restTemplate.postForObject(PAYMENT_URL + <span class="string">&quot;/payment/create&quot;</span></span><br><span class="line">        , payment</span><br><span class="line">        , CommonResult.class);</span><br></pre></td></tr></table></figure><p>需要先注册该实体到容器中</p><h2 id="1-7-RequestBody"><a href="#1-7-RequestBody" class="headerlink" title="1.7    @RequestBody"></a>1.7    @RequestBody</h2><p>接收JSON数据格式就需要加这个注解到形参中</p><h2 id="1-8-工程重构"><a href="#1-8-工程重构" class="headerlink" title="1.8    工程重构"></a>1.8    工程重构</h2><p>实体类和工具类的抽取</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.wwj.springcloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>cloud-api-commons<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二、服务注册中心"><a href="#二、服务注册中心" class="headerlink" title="二、服务注册中心"></a>二、服务注册中心</h1><h2 id="2-1-Eurka服务注册与发现"><a href="#2-1-Eurka服务注册与发现" class="headerlink" title="2.1    Eurka服务注册与发现"></a>2.1    Eurka服务注册与发现</h2><p>服务治理：传统RPC管理服务错综复杂使用服务治理管理服务可以实现服务的远程调用、负载均衡、容错等。</p><p>服务注册：服务注册中心</p><p>Eurka Server：服务注册服务</p><p>Eurka Client：通过服务注册中心访问</p><p>Eurka安装步骤：</p><p><strong>配置服务注册中心</strong></p><p>1、新建模块引入坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- eureka-server --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、配置yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7001</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="comment"># eureka服务端的实例名称</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">localhost</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment"># 不注册自己</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 表示自己是注册中心，不用检索服务</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 设置与Eureka Server交互的地址查询服务和注册服务</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://$&#123;eureka.instance.hostname&#125;:$&#123;server.port&#125;/eureka/</span></span><br></pre></td></tr></table></figure><p>3、标记服务注册中心</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="comment">// 标记当前模块为Eureka的服务注册中心</span></span><br><span class="line"><span class="meta">@EnableEurekaServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">EurekaMain7001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(EurekaMain7001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>配置服务发现者</strong></p><p>1、引入坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Eureka客户端--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、配置yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment"># 注册自己</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 是否从注册中心抓取已有的注册信息默认true</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka</span></span><br></pre></td></tr></table></figure><p>3、标记为服务发现者</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PaymentMain8001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(PaymentMain8001.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>集群配置Eureka</strong></p><p>相互共享注册</p><p>模块2写模块1的服务地址</p><p>模块1写模块1的服务地址</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">7001</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="comment"># eureka服务端的实例名称(集群配置不能重名)</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka7001.com</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment"># 不注册自己</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 表示自己是注册中心，不用检索服务</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 设置与Eureka Server交互的地址查询服务和注册服务</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="comment"># 两个Eureka之间相互注册（集群配置）</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7002.com:7002/eureka/</span></span><br></pre></td></tr></table></figure><p>服务发现者yml配置文件:需要添加多个集群的访问路径（需要配置HOST文件域名才能达到效果）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment"># 注册自己</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 是否从注册中心抓取已有的注册信息默认true</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="comment"># 单机版配置</span></span><br><span class="line">      <span class="comment"># defaultZone: http://localhost:7001/eureka</span></span><br><span class="line">      <span class="comment"># 集群版配置</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com/eureka,http://eureka7002.com:7002/eureka</span></span><br></pre></td></tr></table></figure><p><strong>集群配置使用</strong></p><p>服务消费者需要修改调用路径为微服务名称</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderController</span> &#123;</span><br><span class="line"><span class="comment">//    public static final String PAYMENT_URL = &quot;http://localhost:8001&quot;;  // 只适用于单机使用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">PAYMENT_URL</span> <span class="operator">=</span> <span class="string">&quot;http://CLOUD-PAYMENT-SERVICE&quot;</span>; <span class="comment">// 集群使用名字是微服务的名称</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 远程调用工具，一个端口调用另一个端口</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="comment">// 开启负载均衡不用写死URL调用地址</span></span><br><span class="line"><span class="meta">@LoadBalanced</span></span><br><span class="line"><span class="keyword">public</span> RestTemplate <span class="title function_">getRestTemplate</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RestTemplate</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RestTemplate开启负载均衡</p><h2 id="2-2-Eureka服务额外配置"><a href="#2-2-Eureka服务额外配置" class="headerlink" title="2.2    Eureka服务额外配置"></a>2.2    Eureka服务额外配置</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">instance:</span></span><br><span class="line">  <span class="attr">instance-id:</span> <span class="string">payment8002</span>   <span class="comment">#  服务名称修改之前显示的主机名</span></span><br><span class="line">  <span class="attr">prefer-ip-address:</span> <span class="literal">true</span>    <span class="comment">#  显示ip地址</span></span><br></pre></td></tr></table></figure><p>服务信息发现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">// 服务发现</span></span><br><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> DiscoveryClient discoveryClient;</span><br><span class="line"> <span class="meta">@GetMapping(value = &quot;/payment/discovery&quot;)</span></span><br><span class="line"><span class="keyword">public</span> Object <span class="title function_">discovery</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">// 获取当前路径下的微服务的信息</span></span><br><span class="line">    List&lt;String&gt; services = discoveryClient.getServices();</span><br><span class="line">    services.forEach((element)-&gt; log.info(<span class="string">&quot;element:&#123;&#125;&quot;</span>,element));</span><br><span class="line">    List&lt;ServiceInstance&gt; instances = discoveryClient.getInstances(<span class="string">&quot;CLOUD-PAYMENT-SERVICE&quot;</span>);</span><br><span class="line">    instances.forEach((element)-&gt;log.info(element.getServiceId()+<span class="string">&quot;\t&quot;</span>+element.getHost()));</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.discoveryClient;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span> <span class="comment">// 开启服务注册发现</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PaymentMain8001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(PaymentMain8001.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-Eureka自我保护机制"><a href="#2-3-Eureka自我保护机制" class="headerlink" title="2.3    Eureka自我保护机制"></a>2.3    Eureka自我保护机制</h2><img src="/2022/09/04/SpringCloud/2022-08-01-14-45-56-image.png" class=""><p>微服务不可用Eureka不会清理依旧会对微服务进行保存</p><p>不会盲目注销可能不健康的服务</p><p>禁止自我保护</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="comment"># eureka服务端的实例名称(集群配置不能重名)</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">eureka7001.com</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment"># 不注册自己</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 表示自己是注册中心，不用检索服务</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 设置与Eureka Server交互的地址查询服务和注册服务</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="comment"># 两个Eureka之间相互注册（集群配置）</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7002.com:7002/eureka/</span></span><br><span class="line">  <span class="comment"># 关闭自我保护并且心跳时间改为2000ms（Eureka服务端）</span></span><br><span class="line"><span class="comment">#  server:</span></span><br><span class="line"><span class="comment">#    enable-self-preservation: false</span></span><br><span class="line"><span class="comment">#    eviction-interval-timer-in-ms: 2000</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment"># 注册自己</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># 是否从注册中心抓取已有的注册信息默认true</span></span><br><span class="line">    <span class="attr">fetch-registry:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="comment"># 单机版配置</span></span><br><span class="line">      <span class="comment"># defaultZone: http://localhost:7001/eureka</span></span><br><span class="line">      <span class="comment"># 集群版配置</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com/eureka,http://eureka7002.com:7002/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">payment8001</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br><span class="line"><span class="comment">#    lease-renewal-interval-in-seconds: 1  # 客户端向服务端发送心跳的间隔</span></span><br><span class="line"><span class="comment">#    lease-expiration-duration-in-seconds: 2 # 服务端收到最后一次心跳后等待时间上限  单位都是秒</span></span><br></pre></td></tr></table></figure><h2 id="2-4-Zookeeper注册与发现"><a href="#2-4-Zookeeper注册与发现" class="headerlink" title="2.4    Zookeeper注册与发现"></a>2.4    Zookeeper注册与发现</h2><p><strong>服务提供者</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zookeeper-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server:</span><br><span class="line">  port: <span class="number">8004</span></span><br><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: cloud-provider-payment</span><br><span class="line">  cloud:</span><br><span class="line">    zookeeper:</span><br><span class="line">      connect-string: <span class="number">192.168</span><span class="number">.218</span><span class="number">.128</span>:<span class="number">2181</span>  # Zookeeper的注册中心IP</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span>   <span class="comment">// 开启客户端用于consul和Zookeeper的注册中心注册服务</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PaymentMain8004</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(PaymentMain8004.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/09/04/SpringCloud/2022-08-01-15-12-27-image.png" class=""><p>排除版本冲突</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-zookeeper-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--排除自身自带的jar包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.zookeeper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>zookeeper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2022/09/04/SpringCloud/2022-08-01-15-22-04-image.png" class=""><p>服务节点是临时节点还是持久节点？</p><p>答：临时节点，不会永久保留服务。</p><p><strong>服务消费者</strong></p><p>1、导入坐标</p><p>2、配置yml</p><p>3、写主程序加上注解</p><h2 id="2-5-Consul服务注册与发现"><a href="#2-5-Consul服务注册与发现" class="headerlink" title="2.5    Consul服务注册与发现"></a>2.5    Consul服务注册与发现</h2><p>启动：<code>consul agent -dev</code></p><p>方式相同</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8006</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">consul-provider-payment</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">consul:</span></span><br><span class="line">      <span class="comment"># 连接到服务注册中心地址以及暴露得微服务名</span></span><br><span class="line">      <span class="attr">host:</span> <span class="string">localhost</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">8500</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">service-name:</span> <span class="string">$&#123;spring.application.name&#125;</span></span><br></pre></td></tr></table></figure><h2 id="2-6-三个配置中心比较"><a href="#2-6-三个配置中心比较" class="headerlink" title="2.6    三个配置中心比较"></a>2.6    三个配置中心比较</h2><p>Eureka：java、自我保护</p><p>Consul：go</p><p>Zookeeper：java</p><p>AP：Eureka</p><p>CP：Consul、Zookeeper</p><p>C：强一致性</p><p>A：可用性</p><p>P：分区容错性</p><p>CP：保证数据一致性就必须拒绝请求</p><p>AP：高可用</p><h2 id="2-7-Ribbon负载均衡"><a href="#2-7-Ribbon负载均衡" class="headerlink" title="2.7    Ribbon负载均衡"></a>2.7    Ribbon负载均衡</h2><p>提供客户端负载均衡算法和服务调用</p><p>集中式：Nginx</p><p>进程式：Ribbon</p><p>配置RestTemplate实现负载均衡调用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Eureka客户端(自动引入了Ribbon)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>getForObject：返回的是JSON格式的字符串</p><p>getForEntitiy：返回的实体对象包含很多头信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/concumer/payment/getForEntity/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> CommonResult&lt;Payment&gt; <span class="title function_">getEntity</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span>&#123;</span><br><span class="line">    ResponseEntity&lt;CommonResult&gt; entity = restTemplate.getForEntity(PAYMENT_URL + <span class="string">&quot;/payment/get/&quot;</span> + id</span><br><span class="line">            , CommonResult.class);</span><br><span class="line">    <span class="keyword">if</span> (entity.getStatusCode().is2xxSuccessful())&#123;</span><br><span class="line">        <span class="keyword">return</span> entity.getBody();</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CommonResult</span>&lt;&gt;(<span class="number">444</span>,<span class="string">&quot;操作失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>IRule接口：七种负载均衡策略（默认轮询）</p><p>替换负载均衡</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 该类不能被Springboot所扫描到所有要在主程序之外创建一个包</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MySelfRule</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> IRule <span class="title function_">myRule</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RandomRule</span>();  <span class="comment">// 定义为随机策略</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@RibbonClient(name = &quot;CLOUD-PAYMENT-SERVICE&quot;,configuration = MySelfRule.class)</span>  <span class="comment">// 所访问的微服务名称指定规则类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderMain80</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(OrderMain80.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>轮询算法原理：</p><p>接口的请求总数 % 服务器集群数量 &#x3D; 实际调用服务器下标，每次启动从1开始</p><h1 id="三、服务调用"><a href="#三、服务调用" class="headerlink" title="三、服务调用"></a>三、服务调用</h1><h2 id="3-1-OpenFeign"><a href="#3-1-OpenFeign" class="headerlink" title="3.1    OpenFeign"></a>3.1    OpenFeign</h2><p>声明式Web服务客户端，创建一个接口在接口上添加注解即可</p><p>集成了Ribbon</p><p>ribbon+restTemplate–&gt;OpenFeign</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>1、创建消费端接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@FeignClient(value = &quot;CLOUD-PAYMENT-SERVICE&quot;)</span>  <span class="comment">// 需要调用的微服务名称</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">PaymentFeignService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用了8001服务的映射</span></span><br><span class="line">    <span class="comment">// 该接口需要和服务提供者的控制层的方法一致</span></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/payment/get/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> CommonResult&lt;Object&gt; <span class="title function_">getPaymentById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="comment"># 注册自己</span></span><br><span class="line">    <span class="attr">register-with-eureka:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># 注册到哪个服务器</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com/eureka/,http://eureka7002.com:7002/eureka/</span></span><br></pre></td></tr></table></figure><p>3、开启Feign服务</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span>  <span class="comment">// 使用Feign激活并开启</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderFeignMain</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(OrderFeignMain.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderFeignController</span> &#123;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> PaymentFeignService paymentFeignService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/consumer/payment/get/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> CommonResult&lt;Object&gt; <span class="title function_">getPaymentById</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> paymentFeignService.getPaymentById(id);   <span class="comment">// 调用微服务</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>将Feign接口取出成对象调用接口内的方法去访问微服务的方法</strong></p><p><strong>类似于消费端的业务层用接口和微服务的控制层进行对接（用接口方式）</strong></p><h2 id="3-2-OpenFeign超时控制"><a href="#3-2-OpenFeign超时控制" class="headerlink" title="3.2    OpenFeign超时控制"></a>3.2    OpenFeign超时控制</h2><p>客户端一般默认等待一秒钟，超时了就会返回错误</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ribbon:</span></span><br><span class="line">  <span class="attr">ReadTimeout:</span> <span class="number">5000</span> <span class="comment"># 建立连接所用时间</span></span><br><span class="line">  <span class="attr">ConnectTimeout:</span> <span class="number">5000</span>  <span class="comment"># 建立连接后服务器读取到可用资源所用时间</span></span><br></pre></td></tr></table></figure><p>日志打印功能：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 监控接口和监控级别设置</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span> </span><br><span class="line">    <span class="attr">com.wwj.springcloud.service.PaymentFeignService:</span> <span class="string">debug</span></span><br></pre></td></tr></table></figure><p>配置Loger</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FeignConfig</span> &#123;</span><br><span class="line">    <span class="comment">// 详细日志日志级别</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    Logger.Level <span class="title function_">feignLoggerLevel</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Logger.Level.FULL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="四、服务降级"><a href="#四、服务降级" class="headerlink" title="四、服务降级"></a>四、服务降级</h1><p>服务雪崩：一个微服务调用其余微服务以及其依赖服务导致占用过高导致系统崩溃</p><p>服务降级：服务器忙不让客户端等待并且返回一个友好提示。fallback        </p><p>                    发生服务降级的情况</p><p>                    1、程序运行异常</p><p>                    2、超时</p><p>                    3、服务熔断触发降级</p><p>                    4、线程池、信号量打满</p><p>服务熔断：服务器到达最大访问量的时候直接拒绝访问，调用服务降级返回客户端友好提示</p><p>服务限流：秒杀场景，线程排队有序进行</p><h2 id="4-1-Hystrix断路器"><a href="#4-1-Hystrix断路器" class="headerlink" title="4.1    Hystrix断路器"></a>4.1    Hystrix断路器</h2><p>断路器：当某个服务发生故障通过断路器的故障监控向调用方返回一个符合预期的、可处理的备选响应，而不是长时间等待抛出调用方无法处理的异常。</p><p><strong>兜底方案</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>高并发压测会导致浏览器卡顿（系统资源占用过大）</strong></p><p><strong>服务降级配置</strong></p><p>服务提供者服务降级</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 服务降级:运行异常、超时异常情况下配置的兜底方案</span></span><br><span class="line"><span class="comment">// 兜底方法的方法名</span></span><br><span class="line"><span class="meta">@HystrixCommand(fallbackMethod = &quot;paymentInfo_TimeOutHandler&quot;,commandProperties = &#123;</span></span><br><span class="line"><span class="meta">        // 允许三秒内响应，超过三秒进入兜底方法</span></span><br><span class="line"><span class="meta">        @HystrixProperty(name = &quot;execution.isolation.thread.timeoutInMilliseconds&quot;,value = &quot;3000&quot;)</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">paymentInfo_Timeout</span><span class="params">(Integer id)</span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 超时错误</span></span><br><span class="line">        TimeUnit.SECONDS.sleep(<span class="number">5</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;线程池:    &quot;</span>+Thread.currentThread().getName()+<span class="string">&quot;paymentInfo_Timeout,id   &quot;</span>+id;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 兜底方法</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">paymentInfo_TimeOutHandler</span><span class="params">(Integer id)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;线程池:    &quot;</span>+Thread.currentThread().getName()+<span class="string">&quot;paymentInfo_TimeOutHandler,id   &quot;</span>+id+<span class="string">&quot;o(╥﹏╥)o&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableCircuitBreaker</span>  <span class="comment">// 服务熔断注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PaymentHystrixMain8001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(PaymentHystrixMain8001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务消费者服务降级</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启feign对hystrix的支持</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">hystrix:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableFeignClients</span></span><br><span class="line"><span class="meta">@EnableHystrix</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderHystrixMain80</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(OrderHystrixMain80.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/consumer/payment/hystrix/timeout/&#123;id&#125;&quot;)</span></span><br><span class="line"><span class="meta">@HystrixCommand(fallbackMethod = &quot;paymentInfoTimeOutHandler&quot;,commandProperties = &#123;</span></span><br><span class="line"><span class="meta">        // 允许三秒内响应，超过三秒进入兜底方法</span></span><br><span class="line"><span class="meta">        @HystrixProperty(name = &quot;execution.isolation.thread.timeoutInMilliseconds&quot;,value = &quot;1500&quot;)</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">payment_TimeOut</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> paymentHystrixService.payment_TimeOut(id);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 兜底方法</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">paymentInfoTimeOutHandler</span><span class="params">(Integer id)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;线程池:    &quot;</span>+Thread.currentThread().getName()+<span class="string">&quot;paymentInfoTimeOutHandler,id   &quot;</span>+id+<span class="string">&quot;o(╥﹏╥)o&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全局FallBack</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@DefaultProperties(defaultFallback = &quot;globalFallback&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderHystrixController</span> &#123;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局FallBack配置</span></span><br><span class="line"><span class="meta">@HystrixCommand</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">payment_TimeOut</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">result</span> <span class="operator">=</span> paymentHystrixService.payment_TimeOut(id);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>解耦兜底方法</p><p>1、在Feign使用fallback属性为兜底类名</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@FeignClient(value = &quot;CLOUD-PROVIDER-HYSTRIX-PAYMENT&quot;,fallback = PaymentFallbackService.class)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">PaymentHystrixService</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/payment/hystrix/ok/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">payment_OK</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/payment/hystrix/timeout/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">payment_TimeOut</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、创建兜底类并且实现Feign接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PaymentFallbackService</span> <span class="keyword">implements</span> <span class="title class_">PaymentHystrixService</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">payment_OK</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;payment-OK fallback&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">payment_TimeOut</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;payment_timeout fallback&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>服务熔断配置</strong></p><p>检测节点正常后恢复服务调用</p><p>错误率慢慢下降就会慢慢恢复正常</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  服务熔断</span></span><br><span class="line"><span class="comment">//   具体参数在HystrixCommandProperties</span></span><br><span class="line"><span class="meta">@HystrixCommand(fallbackMethod = &quot;paymentCircuitBreaker_fallback&quot;,commandProperties = &#123;</span></span><br><span class="line"><span class="meta">        @HystrixProperty(name = &quot;circuitBreaker.enabled&quot;,value = &quot;true&quot;),//是否启用断路器</span></span><br><span class="line"><span class="meta">        // 在每多少时间间隔内请求次数达到多少失败率达到多少开启断路器</span></span><br><span class="line"><span class="meta">        @HystrixProperty(name = &quot;circuitBreaker.requestVolumeThreshold&quot;,value = &quot;10&quot;),//请求次数</span></span><br><span class="line"><span class="meta">        @HystrixProperty(name = &quot;circuitBreaker.sleepWindowInMilliseconds&quot;,value = &quot;10000&quot;),//时间窗口期（时间间隔内）</span></span><br><span class="line"><span class="meta">        @HystrixProperty(name = &quot;circuitBreaker.errorThresholdPercentage&quot;,value = &quot;60&quot;)//失败率达到多少后跳闸</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">paymentCircuitBreaker</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(id&lt;<span class="number">0</span>)</span><br><span class="line">        <span class="comment">// 抛出错误</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;****id 不能为负数&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">serialNumber</span> <span class="operator">=</span> IdUtil.simpleUUID();<span class="comment">//hutool工具包</span></span><br><span class="line">    <span class="keyword">return</span> Thread.currentThread().getName()+<span class="string">&quot;\t&quot;</span>+<span class="string">&quot;调用成功，流水号：&quot;</span>+serialNumber;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 兜底方法</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">paymentCircuitBreaker_fallback</span><span class="params">(Integer id)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;id：&quot;</span>+id+<span class="string">&quot;，不能为负数，请稍后再试，。。。&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>服务监控</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-hystrix-dashboard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9001</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableHystrixDashboard</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HystrixDashBoardMain9001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(HystrixDashBoardMain9001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://localhost:9001/hystrix">Hystrix Dashboard</a></p><img src="/2022/09/04/SpringCloud/2022-08-02-14-49-39-image.png" class=""><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">服务提供端配置监控</span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="meta">@EnableCircuitBreaker</span>  <span class="comment">// 服务熔断注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PaymentHystrixMain8001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(PaymentHystrixMain8001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 此配置是为了服务监控而配置，与服务容错本身无关，springcloud升级后的坑</span></span><br><span class="line"><span class="comment">     * ServletRegistrationBean因为SpringBoot的默认路径不是 “/hystrix.stream&quot;</span></span><br><span class="line"><span class="comment">     * 只要在自己的项目里配置上下的servlet就可以了</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ServletRegistrationBean <span class="title function_">getServlet</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">HystrixMetricsStreamServlet</span> <span class="variable">streamServlet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HystrixMetricsStreamServlet</span>() ;</span><br><span class="line">        <span class="type">ServletRegistrationBean</span> <span class="variable">registrationBean</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ServletRegistrationBean</span>(streamServlet);</span><br><span class="line">        registrationBean.setLoadOnStartup(<span class="number">1</span>);</span><br><span class="line">        registrationBean.addUrlMappings(<span class="string">&quot;/hystrix.stream&quot;</span>);</span><br><span class="line">        registrationBean.setName(<span class="string">&quot;HystrixMetricsStreamServlet&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>  registrationBean;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五、服务网关"><a href="#五、服务网关" class="headerlink" title="五、服务网关"></a>五、服务网关</h1><h2 id="5-1-Gateway"><a href="#5-1-Gateway" class="headerlink" title="5.1    Gateway"></a>5.1    Gateway</h2><p>路由：匹配路由</p><p>断言：匹配</p><p>过滤：请求前、请求后</p><p><strong>去除web和监控依赖</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-gateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">payment_routh</span>           <span class="comment"># 路由的 ID，没有固定规则但要求唯一</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">http://localhost:8001</span>  <span class="comment"># 匹配后提供服务的路由地址</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/payment/get/**</span>     <span class="comment"># 断言，路径相匹配的进行路由</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">payment_routh2</span>           <span class="comment"># 路由的 ID，没有固定规则但要求唯一</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">http://localhost:8001</span>  <span class="comment"># 匹配后蹄冻服务的路由地址</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/payment/lb/**</span>     <span class="comment"># 断言，路径相匹配的进行路由</span></span><br></pre></td></tr></table></figure><p>硬编码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GateWayConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RouteLocator <span class="title function_">customRouteLocator</span><span class="params">(RouteLocatorBuilder routeLocatorBuilder)</span>&#123;</span><br><span class="line">        RouteLocatorBuilder.<span class="type">Builder</span> <span class="variable">routes</span> <span class="operator">=</span> routeLocatorBuilder.routes();</span><br><span class="line">        routes.route(<span class="string">&quot;path_route_moke&quot;</span>,r-&gt;r.path(<span class="string">&quot;/guonei&quot;</span>)  <span class="comment">// 输入localhost:9527/guonei --&gt; 跳转http://news.baidu.com/guonei</span></span><br><span class="line">                .uri(<span class="string">&quot;http://news.baidu.com/guonei&quot;</span>)).build();</span><br><span class="line">        <span class="keyword">return</span> routes.build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>网关动态路由配置</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-gateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">locator:</span></span><br><span class="line">          <span class="attr">enabled:</span> <span class="literal">true</span>              <span class="comment"># 开启从注册中心动态创建路由的功能，利用微服务名进行路由</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">payment_routh</span>           <span class="comment"># 路由的 ID，没有固定规则但要求唯一</span></span><br><span class="line"><span class="comment">#          uri: http://localhost:8001  # 匹配后提供服务的路由地址</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://CLOUD-PAYMENT-SERVICE</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/payment/get/**</span>     <span class="comment"># 断言，路径相匹配的进行路由</span></span><br><span class="line"></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">payment_routh2</span>           <span class="comment"># 路由的 ID，没有固定规则但要求唯一</span></span><br><span class="line"><span class="comment">#          uri: http://localhost:8001  # 匹配后蹄冻服务的路由地址</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">lb://CLOUD-PAYMENT-SERVICE</span></span><br><span class="line">          <span class="attr">predicates:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">Path=/payment/lb/**</span>     <span class="comment"># 断言，路径相匹配的进行路由</span></span><br></pre></td></tr></table></figure><img src="/2022/09/04/SpringCloud/2022-08-02-16-38-14-image.png" class=""><p>After属性：在这个时间之后这个路由才会生效（注意时间格式）</p><p>Cookie属性：内容，正则表达式</p><p>Header：请求头需要含有这个，正则表达式</p><p>method：限定方法是什么get、post</p><p><strong>自定义过滤器</strong></p><p>必须携带参数url才可以放行</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyLogGateWayFilter</span> <span class="keyword">implements</span> <span class="title class_">GlobalFilter</span>, Ordered &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Mono&lt;Void&gt; <span class="title function_">filter</span><span class="params">(ServerWebExchange exchange, GatewayFilterChain chain)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;*****************************come inn filter&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">uname</span> <span class="operator">=</span> exchange.getRequest().getQueryParams().getFirst(<span class="string">&quot;uname&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (uname == <span class="literal">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;***************************非法用户&quot;</span>);</span><br><span class="line">            exchange.getResponse().setStatusCode(HttpStatus.NOT_ACCEPTABLE);</span><br><span class="line">            <span class="keyword">return</span> exchange.getResponse().setComplete();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> chain.filter(exchange);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getOrder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六、服务配置"><a href="#六、服务配置" class="headerlink" title="六、服务配置"></a>六、服务配置</h1><h2 id="6-1-Config配置"><a href="#6-1-Config配置" class="headerlink" title="6.1    Config配置"></a>6.1    Config配置</h2><p>一处修改处处生效</p><p>中心化的外部配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-config-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">3344</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-config-center</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server:</span></span><br><span class="line">        <span class="attr">git:</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://gitee.com/wang-wenjie2001/springcloud-config.git</span></span><br><span class="line">          <span class="attr">search-paths:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">springcloud-config</span></span><br><span class="line">          <span class="attr">username:</span> <span class="number">15316536758</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">2001730a</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span> <span class="string">分支</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableConfigServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainAppConfigCenter3355</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(MainAppConfigCenter3355.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://config-3344.com:3344/master/application.yml">http://config-3344.com:3344/master/application.yml</a></p><p><strong>客户端搭建</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">3355</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">config-client</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="comment"># 分支名称、配置文件名称、读取后缀名称、配置中心地址</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">      <span class="attr">profile:</span> <span class="string">dev</span>   <span class="comment"># application-dev.yml</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">http://localhost:3344</span>   <span class="comment"># 注册配置中心</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigClientController</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String configInfo;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/configInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getConfigInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> configInfo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>动态刷新配置</p><p>服务端</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 暴露监控端口</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RestartScope</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigClientController</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String configInfo;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/configInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getConfigInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> configInfo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要post</p><p><a href="http://localhost:3355/actuator/refresh">http://localhost:3355/actuator/refresh</a></p><h2 id="6-2-Bus数据总线"><a href="#6-2-Bus数据总线" class="headerlink" title="6.2    Bus数据总线"></a>6.2    Bus数据总线</h2><p>消息总线触发一个微服务然后影响其他微服务</p><p>消息总线直接触发服务端更新其余微服务的配置（使用这种）</p><p>安装在配置中心端</p><p>客户端</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--消息总线--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-bus-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">3344</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-config-center</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="attr">server:</span></span><br><span class="line">        <span class="attr">git:</span></span><br><span class="line">          <span class="attr">uri:</span> <span class="string">https://gitee.com/wang-wenjie2001/springcloud-config.git</span></span><br><span class="line">          <span class="attr">search-paths:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">springcloud-config</span></span><br><span class="line">          <span class="attr">username:</span> <span class="number">15316536758</span></span><br><span class="line">          <span class="attr">password:</span> <span class="string">2001730a</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.218</span><span class="number">.128</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">guest</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">guest</span></span><br><span class="line"></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露bus刷新配置端点</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&#x27;bus-refresh&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wwj.springcloud;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.config.server.EnableConfigServer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableConfigServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainAppConfigCenter3344</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(MainAppConfigCenter3344.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>数据被更新端</p><p>bootstrap</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">3355</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">config-client</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">config:</span></span><br><span class="line">      <span class="comment"># 分支名称、配置文件名称、读取后缀名称、配置中心地址</span></span><br><span class="line">      <span class="attr">label:</span> <span class="string">master</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">application</span></span><br><span class="line">      <span class="attr">profile:</span> <span class="string">dev</span>   <span class="comment"># application-dev.yml</span></span><br><span class="line">      <span class="attr">uri:</span> <span class="string">http://localhost:3344</span></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.218</span><span class="number">.128</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">guest</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">guest</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://localhost:7001/eureka</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 暴露监控端口</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RefreshScope</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigClientController</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;config.info&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String configInfo;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/configInfo&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getConfigInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> configInfo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableEurekaClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigClient3355</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(ConfigClient3355.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="七、SpringCloudStream"><a href="#七、SpringCloudStream" class="headerlink" title="七、SpringCloudStream"></a>七、SpringCloudStream</h1><p>屏蔽底层消息中间件的差异，降低切换成本，统一消息的编程模型</p><p>对于众多消息中间件用Stream统一使用</p><p> 使用binder对象负责对消息中间件进行交互</p><h2 id="7-1-设计思想"><a href="#7-1-设计思想" class="headerlink" title="7.1   设计思想"></a>7.1   设计思想</h2><p>消息到通道到接收</p><p>Binder作为中间层实现应用程序与消息中间件细节之间的隔离</p><p>Input：消息消费者</p><p>Output：消息生产者</p><p>发布-订阅模式</p><h2 id="7-2-常用注解"><a href="#7-2-常用注解" class="headerlink" title="7.2   常用注解"></a>7.2   常用注解</h2><p>Input：注解表示输入通道，接收消息进入应用程序</p><p>Output：输出通道，发布消息</p><p>StreamListener：监听队列用于消费者的队列的消息接收</p><p>EnableBinding：指channel和exchange绑定在一起</p><h2 id="7-3-使用"><a href="#7-3-使用" class="headerlink" title="7.3    使用"></a>7.3    使用</h2><p><strong>消息发送者</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-stream-rabbit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8801</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-stream-provider</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">stream:</span></span><br><span class="line">      <span class="attr">binders:</span> <span class="comment"># 在此处配置要绑定的rabbitMQ的服务信息</span></span><br><span class="line">        <span class="attr">defaultRabbit:</span> <span class="comment"># 表示定义的名称，用于binding的整合</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">rabbit</span> <span class="comment"># 消息中间件类型</span></span><br><span class="line">          <span class="attr">environment:</span> <span class="comment"># 设置rabbitMQ的相关环境配置</span></span><br><span class="line">            <span class="attr">spring:</span></span><br><span class="line">              <span class="attr">rabbitmq:</span></span><br><span class="line">                <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.218</span><span class="number">.128</span></span><br><span class="line">                <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">                <span class="attr">username:</span> <span class="string">guest</span></span><br><span class="line">                <span class="attr">password:</span> <span class="string">guest</span></span><br><span class="line">      <span class="attr">bindings:</span> <span class="comment"># 服务的整合处理</span></span><br><span class="line">        <span class="attr">output:</span> <span class="comment"># 这个名字是一个通道的名称</span></span><br><span class="line">          <span class="attr">destination:</span> <span class="string">studyExchange</span> <span class="comment"># 表示要使用的exchange名称定义</span></span><br><span class="line">          <span class="attr">content-type:</span> <span class="string">application/json</span> <span class="comment"># 设置消息类型，本次为json，文本则设为text/plain</span></span><br><span class="line">          <span class="attr">default-binder:</span> <span class="string">defaultRabbit</span> <span class="comment"># 设置要绑定的消息服务的具体设置</span></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.218</span><span class="number">.128</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">guest</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">guest</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com:7001/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">lease-renewal-interval-in-seconds:</span> <span class="number">2</span> <span class="comment"># 设置心跳的间隔时间，默认30</span></span><br><span class="line">    <span class="attr">lease-expiration-duration-in-seconds:</span> <span class="number">5</span> <span class="comment"># 超过5秒间隔，默认90</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">send-8801.com</span> <span class="comment"># 主机名</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span> <span class="comment"># 显示ip</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableBinding(Source.class)</span> <span class="comment">// 定义消息的推送管道</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MessageProvider</span> <span class="keyword">implements</span> <span class="title class_">IMessageProvider</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> MessageChannel output;  <span class="comment">// 消息发送管道</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">send</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">serial</span> <span class="operator">=</span> UUID.randomUUID().toString();</span><br><span class="line">        output.send(MessageBuilder.withPayload(serial).build());  <span class="comment">// 发送消息</span></span><br><span class="line">        System.out.println(<span class="string">&quot;serial = &quot;</span> + serial);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;1&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>消息消费</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8802</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloud-stream-consumer</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">stream:</span></span><br><span class="line">      <span class="attr">binders:</span> <span class="comment"># 在此处配置要绑定的rabbitMQ的服务信息</span></span><br><span class="line">        <span class="attr">defaultRabbit:</span> <span class="comment"># 表示定义的名称，用于binding的整合</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">rabbit</span> <span class="comment"># 消息中间件类型</span></span><br><span class="line">          <span class="attr">environment:</span> <span class="comment"># 设置rabbitMQ的相关环境配置</span></span><br><span class="line">            <span class="attr">spring:</span></span><br><span class="line">              <span class="attr">rabbitmq:</span></span><br><span class="line">                <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.218</span><span class="number">.128</span></span><br><span class="line">                <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">                <span class="attr">username:</span> <span class="string">guest</span></span><br><span class="line">                <span class="attr">password:</span> <span class="string">guest</span></span><br><span class="line">      <span class="attr">bindings:</span> <span class="comment"># 服务的整合处理</span></span><br><span class="line">        <span class="attr">input:</span> <span class="comment"># 这个名字是一个通道的名称</span></span><br><span class="line">          <span class="attr">destination:</span> <span class="string">studyExchange</span> <span class="comment"># 表示要使用的exchange名称定义</span></span><br><span class="line">          <span class="attr">content-type:</span> <span class="string">application/json</span> <span class="comment"># 设置消息类型，本次为json，文本则设为text/plain</span></span><br><span class="line">          <span class="attr">default-binder:</span> <span class="string">defaultRabbit</span> <span class="comment"># 设置要绑定的消息服务的具体设置</span></span><br><span class="line"><span class="comment">#          group: spectrumrpcA # 不同的组存在重复消费，相同的组之间竞争消费。</span></span><br><span class="line">  <span class="attr">rabbitmq:</span></span><br><span class="line">    <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.218</span><span class="number">.128</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">guest</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">guest</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://eureka7001.com:7001/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">lease-renewal-interval-in-seconds:</span> <span class="number">2</span> <span class="comment"># 设置心跳的间隔时间，默认30</span></span><br><span class="line">    <span class="attr">lease-expiration-duration-in-seconds:</span> <span class="number">5</span> <span class="comment"># 超过5秒间隔，默认90</span></span><br><span class="line">    <span class="attr">instance-id:</span> <span class="string">receive-8802.com</span> <span class="comment">#主机名</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span> <span class="comment"># 显示ip</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@EnableBinding(Sink.class)</span> <span class="comment">// 消费者以Sink标识</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ReceiveMessage</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;server.port&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String serverPort;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@StreamListener(Sink.INPUT)</span>  <span class="comment">// 作为一个输入源监听队列</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">input</span><span class="params">(Message&lt;String&gt; message)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;消费者1号============== ：&quot;</span>+ message.getPayload()+<span class="string">&quot;\t&quot;</span>+serverPort);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-4-消息分组"><a href="#7-4-消息分组" class="headerlink" title="7.4    消息分组"></a>7.4    消息分组</h2><p><strong>一个发送者的对应两个消毒者会存在消息重复消费的问题</strong></p><p>同一组就不存在重复消费的问题（竞争消息）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bindings:</span> <span class="comment"># 服务的整合处理</span></span><br><span class="line">  <span class="attr">input:</span> <span class="comment"># 这个名字是一个通道的名称</span></span><br><span class="line">    <span class="attr">destination:</span> <span class="string">studyExchange</span> <span class="comment"># 表示要使用的exchange名称定义</span></span><br><span class="line">    <span class="attr">content-type:</span> <span class="string">application/json</span> <span class="comment"># 设置消息类型，本次为json，文本则设为text/plain</span></span><br><span class="line">    <span class="attr">default-binder:</span> <span class="string">defaultRabbit</span> <span class="comment"># 设置要绑定的消息服务的具体设置</span></span><br><span class="line">    <span class="attr">group:</span> <span class="string">spectrumrpcA</span> <span class="comment"># 不同的组存在重复消费，相同的组之间竞争消费。</span></span><br></pre></td></tr></table></figure><h2 id="7-5-持久化"><a href="#7-5-持久化" class="headerlink" title="7.5    持久化"></a>7.5    持久化</h2><p>发送消息对于无分组配置后台不会消费之前的消息，对于有分组属性的配置就会对之前的消息消费。</p><h1 id="八、Sleuth请求链路跟踪"><a href="#八、Sleuth请求链路跟踪" class="headerlink" title="八、Sleuth请求链路跟踪"></a>八、Sleuth请求链路跟踪</h1><p> 详见尚硅谷视频</p><h1 id="九、SpringCloudAlibaba"><a href="#九、SpringCloudAlibaba" class="headerlink" title="九、SpringCloudAlibaba"></a>九、SpringCloudAlibaba</h1><h2 id="9-1-Nacos服务注册和配置中心"><a href="#9-1-Nacos服务注册和配置中心" class="headerlink" title="9.1    Nacos服务注册和配置中心"></a>9.1    Nacos服务注册和配置中心</h2><p>Nacos&#x3D;Eureka+Config+Bus</p><p><strong>使用</strong></p><p><code>startup.cmd</code>运行Nacos</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-alibaba-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2.0.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>子模块</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Nacos--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">9001</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nacos-payment-provider</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span>  <span class="comment"># 注册到Nacos地址</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&quot;*&quot;</span>  <span class="comment"># 对外暴露端口</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PaymentMain9001</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(PaymentMain9001.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>服务消费者</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">83</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nacos-order-consummer</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span>  <span class="comment"># 注册到Nacos地址</span></span><br><span class="line"><span class="attr">service-url:</span></span><br><span class="line">  <span class="attr">nacos-user-service:</span> <span class="string">http://nacos-payment-provider</span>  <span class="comment"># 消费者微服务的名称</span></span><br></pre></td></tr></table></figure><p>将RestTemplate放入容器并且加上负载均衡注解</p><h2 id="9-2-服务中心对比"><a href="#9-2-服务中心对比" class="headerlink" title="9.2    服务中心对比"></a>9.2    服务中心对比</h2><p>Nacos支持AP和CP切换</p><p>C：数据一致性</p><h2 id="9-3-Nacos服务配置中心"><a href="#9-3-Nacos服务配置中心" class="headerlink" title="9.3   Nacos服务配置中心"></a>9.3   Nacos服务配置中心</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Nacos--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-config<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RefreshScope</span> <span class="comment">// 保证Nacos的动态刷新功能</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ConfigController</span> &#123;</span><br><span class="line">    <span class="meta">@Value(&quot;$&#123;config.info&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> String configInfo;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/config/info&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getConfigInfo</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> configInfo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>公共配置文件命名格式：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$&#123;spring.application.name&#125;-$&#123;spring.profile.active&#125;.$&#123;spring.cloud.nacos.config.file-extension&#125;</span></span><br><span class="line"><span class="string">nacos-config-client-dev.yaml</span></span><br></pre></td></tr></table></figure><p>微服务名-当前环境.文件后缀名</p><p><strong>分类配置</strong></p><p>namespace：区分部署环境</p><p>group和DataId：区分两个目标对象</p><p>根据不同DataId切换不同的配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">test</span> <span class="comment"># 测试环境（加载测试环境的配置）</span></span><br><span class="line"><span class="comment">#    active: dev # 开发环境</span></span><br></pre></td></tr></table></figure><p>group</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">group:</span> <span class="string">TEST_GROUP</span>   <span class="comment"># 配置什么组就读取什么组里面的配置文件</span></span><br></pre></td></tr></table></figure><img src="/2022/09/04/SpringCloud/2022-08-04-17-14-54-image.png" class=""><p>namespace</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">namespace:</span> <span class="string">4ccc4c4c-51ec-4bd1-8280-9e70942c0d0c</span>  <span class="comment"># namespace具有隔离性</span></span><br></pre></td></tr></table></figure><p><strong>Nacos集群配置</strong></p><p>请求-》nginx-》Nacos集群》Mysql集群</p><p>derby：Nacos内嵌式数据库（可以切换到mysql数据库起到数据的一致性）</p><p>1、nacos-server-1.1.4 tar.gz Linux压缩包</p><p>2、解压上述压缩包</p><p>3、 拷贝nacos文件夹</p><p>4、进入bin目录</p><p>5、修改Linux的Nacos脚本（防止不知道启动的哪个nacos）</p><p>6、nacos&#x2F;conf&#x2F;nacos-mysql.sql（SQL源语句切换mysql数据）</p><p>7、切换到自己的mysql数据库执行上述脚本</p><p>8、nacos&#x2F;conf&#x2F;application.properties设置粘贴官网切换数据库的配置信息修改数据库的账户和密码</p><p>9、nacos&#x2F;conf&#x2F;cluster.conf 拷贝该文件</p><p>10、修改 cluster.conf配置文件（配置集群）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.168.218.128:3333</span><br><span class="line">192.168.218.128:4444</span><br><span class="line">192.168.218.128:5555</span><br></pre></td></tr></table></figure><p>11、编辑nacos启动脚本使得接受不同的端口启动</p><p>s：后添加p： 详见尚硅谷视频</p><p>12、修改nginx.conf 修改listen1111，详见尚硅谷视频</p><h2 id="9-4-Sentinel熔断器"><a href="#9-4-Sentinel熔断器" class="headerlink" title="9.4    Sentinel熔断器"></a>9.4    Sentinel熔断器</h2><p>Hystrix：需要自己手工搭建平台，没有web界面进行监控</p><p>使用java -jar运行jar包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--Nacos--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.csp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sentinel-datasource-nacos<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-sentinel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8401</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">cloudalibaba-sentinel-service</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br><span class="line">    <span class="attr">sentinel:</span></span><br><span class="line">      <span class="attr">transport:</span></span><br><span class="line">        <span class="attr">dashboard:</span> <span class="string">localhost:8080</span> <span class="comment"># 配置Sentinel监控地址</span></span><br><span class="line">        <span class="attr">port:</span> <span class="number">8719</span> <span class="comment"># 默认8719自动从8719开始扫描找到未被占用的端口，服务端口</span></span><br><span class="line"><span class="attr">management:</span></span><br><span class="line">  <span class="attr">endpoints:</span></span><br><span class="line">    <span class="attr">web:</span></span><br><span class="line">      <span class="attr">exposure:</span></span><br><span class="line">        <span class="attr">include:</span> <span class="string">&#x27;*&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>采用了懒加载机制需要使用了服务才会出现</strong></p><img src="/2022/09/04/SpringCloud/2022-08-05-12-59-27-image.png" class=""><p>流控模式：使用rest地址进行控制。</p><p>1、直接-》快速失败，超过流量直接返回错误页面</p><p>2、线程数直接失败：</p><p>QPS：外面的请求数</p><p>线程数：内部机器的工作人员（处理任务）</p><p>关联：A关联B，B达到某个阈值就限流A自己，A调用B，B达到阈值就让A失效</p><p>链路：多个请求调用同一个微服务</p><p>流控效果</p><p>1、直接-》快速失败</p><p>2、预热：在QPS的多个个请求后，在预热时长之后请求慢慢达到QPS阈值（warm up）</p><p>冷因子：3</p><p>默认coldFactor为3，即请求QPS从threshold&#x2F;3开始，经过预热时长逐渐升至设定的QPS阙值。</p><p><strong>请求数线性递增到阈值，防止服务器宕机</strong></p><p>排队等待</p><p>请求以均匀的速度通过</p><p>熔断降级</p><p>RT：平均响应时间 超出阈值且 在时间窗口内通过的请求大于等于5，两个条件同时按满足触发降级</p><p>RT：平均响应时间</p><img src="/2022/09/04/SpringCloud/2022-08-05-13-59-46-image.png" class=""><p>异常比例：异常率达到阈值开启熔断</p><p>异常数：资源近一分钟异常数目超过阈值进行熔断</p><p><strong>热点规则</strong></p><p>根据URL传递的参数内容进行限流</p><p><a href="http://localhost:8401/testHotKey?p1=ada">http://localhost:8401/testHotKey?p1=ada</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/testHotKey&quot;)</span></span><br><span class="line"><span class="comment">// value: web控制台根据这个名字找到该方法</span></span><br><span class="line"><span class="meta">@SentinelResource(value = &quot;testHotkey&quot;,blockHandler = &quot;dealHotKey&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">testHotKey</span><span class="params">(<span class="meta">@RequestParam(value = &quot;p1&quot;,required = false)</span> String p1)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;--------HotKey&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">dealHotKey</span><span class="params">(String p1, BlockException exception)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;兜底&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/09/04/SpringCloud/2022-08-05-14-27-45-image.png" class=""><p>参数为某个特殊值的时候不被限流或者自定义限流</p><img src="/2022/09/04/SpringCloud/2022-08-05-14-30-46-image.png" class=""><p>不管Java的运行异常，这个兜底方法不会被调用</p><p><strong>系统规则</strong></p><p>系统自适应限流，全局限流</p><p>1、LOAD：自适应，对Linux生效</p><p>2、CPU usage：对CPU使用率触发保护</p><p>3、平均RT：平均流量</p><p>4、并发线程数</p><p>5、入口QPS所有QPS触发就会保护</p><img src="/2022/09/04/SpringCloud/2022-08-05-14-37-22-image.png" class=""><p><strong>解耦兜底方法</strong></p><p>1、创建处理类</p><p>2、添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 选择CustomerBlockHandler这个自定义类的handlerException作为兜底方法</span></span><br><span class="line"><span class="meta">@SentinelResource(value = &quot;byResource2&quot;,blockHandlerClass = CustomerBlockHandler.class,blockHandler = &quot;handlerException&quot;)</span></span><br><span class="line"><span class="keyword">public</span> CommonResult&lt;Object&gt; <span class="title function_">byResource2</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CommonResult</span>&lt;&gt;(<span class="number">200</span>,<span class="string">&quot;OK&quot;</span>,<span class="keyword">new</span> <span class="title class_">Payment</span>(<span class="number">222L</span>,<span class="string">&quot;用户自定义&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomerBlockHandler</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CommonResult&lt;Object&gt; <span class="title function_">handlerException</span><span class="params">(BlockException exception)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CommonResult</span>&lt;Object&gt;(<span class="number">444</span>,<span class="string">&quot;global&quot;</span>,<span class="keyword">new</span> <span class="title class_">Payment</span>(<span class="number">222L</span>,<span class="string">&quot;serial3&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="meta">@GetMapping(&quot;/consumer/fallback/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  没有任何配置返回的是错误的信息页面</span></span><br><span class="line"><span class="comment">     *  fallback：Java程序运行异常就会调用fallback写的对应的兜底方法</span></span><br><span class="line"><span class="comment">     *  blockHandler：只负责处理sentinel控制台的配置规则违规带来的错误才会执行这个属性对应的兜底方法</span></span><br><span class="line"><span class="comment">     *  两个都配置的只会的进入blockHandler处理</span></span><br><span class="line"><span class="comment">     *  exceptionsToIgnore：忽略异常属性</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="comment">//    @SentinelResource(value = &quot;fallback&quot;)  //没有配置</span></span><br><span class="line"><span class="comment">//    @SentinelResource(value = &quot;fallback&quot;,fallback = &quot;handlerFallback&quot;)  //fallback只负责业务异常</span></span><br><span class="line"><span class="comment">//    @SentinelResource(value = &quot;fallback&quot;,blockHandler = &quot;blockHandler&quot;) //blockHandler只负责sentine控制台配置违规</span></span><br><span class="line"><span class="comment">//    @SentinelResource(value = &quot;fallback&quot;,fallback = &quot;handlerFallback&quot;,blockHandler = &quot;blockHandler&quot;) //handlerFallback和blockHandler都配置</span></span><br><span class="line">    <span class="meta">@SentinelResource(value = &quot;fallback&quot;,fallback = &quot;handlerFallback&quot;,blockHandler = &quot;blockHandler&quot;, exceptionsToIgnore = IllegalAccessException.class)</span> <span class="comment">//exceptionsToIgnore配置</span></span><br><span class="line">    <span class="keyword">public</span> CommonResult&lt;Payment&gt; <span class="title function_">fallback</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span> &#123;</span><br></pre></td></tr></table></figure><p>整合OpenFeign（配置服务降级）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@FeignClient(value = &quot;nacos-payment-provider&quot;,fallback = PaymentFallbackService.class )</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">PaymentService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/paymentSQL/&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> CommonResult&lt;Payment&gt; <span class="title function_">paymentSQL</span><span class="params">(<span class="meta">@PathVariable(&quot;id&quot;)</span> Long id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PaymentFallbackService</span> <span class="keyword">implements</span> <span class="title class_">PaymentService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> CommonResult&lt;Payment&gt; <span class="title function_">paymentSQL</span><span class="params">(Long id)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CommonResult</span>&lt;&gt;(<span class="number">444</span>,<span class="string">&quot;服务降级返回---PaymentFallbackService&quot;</span>,<span class="keyword">new</span> <span class="title class_">Payment</span>(id,<span class="string">&quot;errorService&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>规则持久化</strong></p><p>重启应用Sentinel的规则就会消失</p><img src="/2022/09/04/SpringCloud/2022-08-05-15-28-32-image.png" class=""><img src="/2022/09/04/SpringCloud/2022-08-05-15-28-15-image.png" class=""><img src="/2022/09/04/SpringCloud/2022-08-05-15-29-06-image.png" class=""><p>配置JSON串</p><img src="/2022/09/04/SpringCloud/2022-08-05-15-30-08-image.png" class=""><h2 id="9-5-Seata处理分布式事务"><a href="#9-5-Seata处理分布式事务" class="headerlink" title="9.5    Seata处理分布式事务"></a>9.5    Seata处理分布式事务</h2><p>一次业务操作需要跨多个数据源和跨多个系统进行RPC调用</p><p>解决全局数据一致性</p><p>Transaction ID XID：全局唯一事务ID</p><img src="/2022/09/04/SpringCloud/2022-08-05-15-39-44-image.png" class=""><img src="/2022/09/04/SpringCloud/2022-08-05-15-44-59-image.png" class=""><img src="/2022/09/04/SpringCloud/2022-08-05-15-45-09-image.png" class=""><img src="/2022/09/04/SpringCloud/2022-08-05-15-51-47-image.png" class=""><img src="/2022/09/04/SpringCloud/2022-08-05-15-53-33-image.png" class=""><p>运行该数据库脚本建表<img src="/2022/09/04/SpringCloud/2022-08-05-15-55-23-image.png" class=""></p><p>修改registery文件</p><img src="/2022/09/04/SpringCloud/2022-08-05-15-57-15-image.png" class=""><p>给每个业务库下面都有一个回滚日志表</p><img src="/2022/09/04/SpringCloud/2022-08-05-16-04-13-image.png" class=""><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- nacos --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-nacos-discovery<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- nacos --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- seata--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-alibaba-seata<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">exclusions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">exclusion</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.seata<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>seata-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">exclusion</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">exclusions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.seata<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>seata-all<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">2001</span></span><br><span class="line"></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">seata-order-service</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">alibaba:</span></span><br><span class="line">      <span class="attr">seata:</span></span><br><span class="line">        <span class="comment"># 自定义事务组名称需要与seata-server中的对应</span></span><br><span class="line">        <span class="attr">tx-service-group:</span> <span class="string">fsp_tx_group</span></span><br><span class="line">    <span class="attr">nacos:</span></span><br><span class="line">      <span class="attr">discovery:</span></span><br><span class="line">        <span class="attr">server-addr:</span> <span class="string">localhost:8848</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="comment"># 当前数据源操作类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="comment"># mysql驱动类</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/seata_order?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=GMT%2B8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">feign:</span></span><br><span class="line">  <span class="attr">hystrix:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">level:</span></span><br><span class="line">    <span class="attr">io:</span></span><br><span class="line">      <span class="attr">seata:</span> <span class="string">info</span> <span class="comment"># </span></span><br></pre></td></tr></table></figure><p>复制File.conf文件</p><p>复制registry.conf文件</p><p>GlobalTransactional注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GlobalTransactional(name = &quot;随便起&quot;, rollbackFor = Exception.class)</span>对所有异常惊醒</span><br><span class="line">进行回滚</span><br></pre></td></tr></table></figure><p>TC：全局协调管理Seata服务器</p><p>TM：注解标注，事务发起方</p><p>RM：数据库，事务参与方</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端技术 </tag>
            
            <tag> 分布式 </tag>
            
            <tag> 后端框架 </tag>
            
            <tag> Spring </tag>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring</title>
      <link href="/2022/09/04/Spring/"/>
      <url>/2022/09/04/Spring/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Spring框架由Rod Johnson开发，2004年发布了Spring框架的第一版。Spring是一个从实际开发中抽取出来的框架，因此它完成了大量开发中的通用步骤，留给开发者的仅仅是与特定应用相关的部分，从而大大提高了企业应用的开发效率。</p><h1 id="一、Spring概述"><a href="#一、Spring概述" class="headerlink" title="一、Spring概述"></a>一、Spring概述</h1><h2 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1    概述"></a>1.1    概述</h2><p>1、轻量级开源JavaEE框架</p><p>2、解决开发复杂性</p><p>3、核心：IOC、AOP</p><p>4、IOC：控制翻转，创建对象交给spring管理</p><p>5、AOP：面向切面，不修改源代码进行功能增强</p><h2 id="1-2-Spring所需jar包"><a href="#1-2-Spring所需jar包" class="headerlink" title="1.2    Spring所需jar包"></a>1.2    Spring所需jar包</h2><img src="/2022/09/04/Spring/image-20220508113027059.png" class="" title="image-20220508113027059"><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-beans<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-expression<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--spring所依赖的日志包--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-logging<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="二、IOC容器"><a href="#二、IOC容器" class="headerlink" title="二、IOC容器"></a>二、IOC容器</h1><p>IOC：对象创建和对象之间的调用过程，交给Spring管理</p><img src="/2022/09/04/Spring/image-20220508115032820.png" class="" title="image-20220508115032820"><p><strong>原理：</strong></p><p>本质就是对象工厂类</p><p>1、配置xml创建对象</p><p>2、根据id查找到类的全包名</p><p>3、根据反射返回类对象</p><p><strong>实现IOC的两种方式</strong></p><p>1、BeanFactory：IOC容器基本实现方式，Spring内部使用接口</p><p>​    特点：加载配置文件的配置文件不会创建对象，在获取使用的时候才会创建对象</p><p>2、ApplicationContext：<strong>BeanFactory的子接口</strong>，提供比BeanFactory提供更强大的功能</p><p>​    特点：加载配置文件的时候就会把配置文件的对象创建</p><p><strong>IOC接口对应的实现类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 类路径src下的文件</span></span><br><span class="line"><span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>();</span><br><span class="line"><span class="comment">// 盘的路径</span></span><br><span class="line"><span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileSystemXmlApplicationContext</span>();</span><br></pre></td></tr></table></figure><h1 id="三、Bean管理XML方式"><a href="#三、Bean管理XML方式" class="headerlink" title="三、Bean管理XML方式"></a>三、Bean管理XML方式</h1><h2 id="3-1-Bean管理"><a href="#3-1-Bean管理" class="headerlink" title="3.1    Bean管理"></a>3.1    Bean管理</h2><p>1、Spring创建对象</p><p>2、Spring注入属性</p><p>xml配置文件、注解</p><h2 id="3-2-XML创建对象"><a href="#3-2-XML创建对象" class="headerlink" title="3.2    XML创建对象"></a>3.2    XML创建对象</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.User&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>1、创建对象默认执行午无参构造方法</strong></p><h2 id="3-3-DI依赖注入"><a href="#3-3-DI依赖注入" class="headerlink" title="3.3    DI依赖注入"></a>3.3    DI依赖注入</h2><p><strong>1、set方法注入</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="comment">// 创建对应的set方法,才能使Spring通过反射注入</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getUsername</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.User&quot;</span> &gt;</span></span><br><span class="line">    <span class="comment">&lt;!--属性注入--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;wwj&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>class：想要创建bean的全包名</p><p><strong>2、有参构造注入</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 有参构造</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String username)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.username = username;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.User&quot;</span> &gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;!–属性注入–&gt;--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--        &lt;property name=&quot;username&quot; value=&quot;wwj&quot;/&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--有参构造注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;wwj&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>constructor-arg：有参构造注入标签</p><p>name：注入属性</p><p>value：注入值</p><h2 id="3-4-空值特殊符号注入"><a href="#3-4-空值特殊符号注入" class="headerlink" title="3.4    空值特殊符号注入"></a>3.4    空值特殊符号注入</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--注入空值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">null</span>&gt;</span><span class="tag">&lt;/<span class="name">null</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--特殊符号注入--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>&lt;![CDATA[&lt;&lt;&gt;&gt;]]&gt;<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-5-注入外部bean"><a href="#3-5-注入外部bean" class="headerlink" title="3.5    注入外部bean"></a>3.5    注入外部bean</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userServuce&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.service.UserService&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;userDao&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;userDaoImpl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userDaoImpl&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.dao.UserDaoImpl&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>name：类里属性的名称</p><p>ref：userDao对象bean中的id值</p><h2 id="3-6-注入内部bean"><a href="#3-6-注入内部bean" class="headerlink" title="3.6    注入内部bean"></a>3.6    注入内部bean</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--内部bean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;emp&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.bean.Emp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;wwj&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dept&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.bean.Dept&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dep&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>bean标签内可以嵌套一个bean标签</p><h2 id="3-7-级联赋值"><a href="#3-7-级联赋值" class="headerlink" title="3.7    级联赋值"></a>3.7    级联赋值</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--级联赋值--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;emp&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.bean.Emp&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;wwj&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;gender&quot;</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dept&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dept&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.bean.Dept&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dep&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dept.dname&quot;</span> <span class="attr">value</span>=<span class="string">&quot;dept&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>必须要生成get方法，实体类.属性</p><h2 id="3-8-注入集合类型"><a href="#3-8-注入集合类型" class="headerlink" title="3.8    注入集合类型"></a>3.8    注入集合类型</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;stu&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.collectiontype.Stu&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--数组类型--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;courses&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>1<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--集合类型--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--map类型--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;maps&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>集合类型是对象类型</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--集合类型--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;对象&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;对象&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">ref</span> <span class="attr">bean</span>=<span class="string">&quot;对象&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ref</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><p>提取value，简化书写，使用util命名空间</p><img src="/2022/09/04/Spring/image-20220508153222231.png" class="" title="image-20220508153222231"><h2 id="3-9-FactoryBean"><a href="#3-9-FactoryBean" class="headerlink" title="3.9    FactoryBean"></a>3.9    FactoryBean</h2><p>普通Bean：定义什么类型返回什么类型</p><p>FactoryBean：定义类型可以返回不同的类型</p><p>1、定义工厂类继承FactoryBean接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBean</span> <span class="keyword">implements</span> <span class="title class_">FactoryBean</span>&lt;User&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义返回bean</span></span><br><span class="line">    <span class="keyword">public</span> User <span class="title function_">getObject</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Class&lt;?&gt; getObjectType() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、创建bean</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;MyBean&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.factoryBean.MyBean&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSpring</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;ApplicationContext.xml&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;MyBean&quot;</span>, User.class);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>定义是MyFactoryBean返回的是User对象</p><h2 id="3-10-Bean作用域"><a href="#3-10-Bean作用域" class="headerlink" title="3.10    Bean作用域"></a>3.10    Bean作用域</h2><p>Spring默认单实例对象：两次获取同一对象地址值一样</p><p>多实例：两次获取同一对象地址值不一样</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scope=&quot;singleton&quot;    单实例</span><br><span class="line">scope=&quot;prototype&quot;    多实例</span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;MyBean&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.factoryBean.MyBean&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3-11-Bean生命周期"><a href="#3-11-Bean生命周期" class="headerlink" title="3.11    Bean生命周期"></a>3.11    Bean生命周期</h2><p>1、通过无参构造创建bean的实例</p><p>2、为bean属性设置或对其他外部bean引用</p><p>（后置处理器才有的步骤）把bean的实例传递给bean的后置处理器方法</p><p>3、调用bean的初始化方法    init-method</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;MyBean&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.factoryBean.MyBean&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span> <span class="attr">init-method</span>=<span class="string">&quot;初始化方法&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>（后置处理器才有的步骤）把bean的实例传递给bean的后置处理器方法</p><p>4、得到bean实例对象</p><p>5、当容器关闭，调用bean销毁的方法    destroy-method</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;MyBean&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.factoryBean.MyBean&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span> <span class="attr">destroy-method</span>=<span class="string">&quot;销毁方法&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>6、容器关闭</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testSpring</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="type">ClassPathXmlApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathXmlApplicationContext</span>(<span class="string">&quot;ApplicationContext.xml&quot;</span>);</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;MyBean&quot;</span>, User.class);</span><br><span class="line">    System.out.println(user);</span><br><span class="line">    <span class="comment">// 销毁方法</span></span><br><span class="line">    context.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后置处理器需要实现接口，第一个是初始化bean之前执行的方法，第二个是初始化bean之后执行的方法</p><img src="/2022/09/04/Spring/image-20220508160316001.png" class="" title="image-20220508160316001"><p>核心配置文件配置该后置处理器</p><img src="/2022/09/04/Spring/image-20220508160336697.png" class="" title="image-20220508160336697"><h2 id="3-12-XML方式自动装配"><a href="#3-12-XML方式自动装配" class="headerlink" title="3.12    XML方式自动装配"></a>3.12    XML方式自动装配</h2><p>自动装配：指定装配规则，根据<strong>属性名称或者属性类型</strong>，Spring自动将属性值注入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.wwj.User&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>byName：根据属性名称自动装配，id要和属性名一致</p><p>byType：根据类型自动装配</p><h2 id="3-13-引用外部属性文件"><a href="#3-13-引用外部属性文件" class="headerlink" title="3.13    引用外部属性文件"></a>3.13    引用外部属性文件</h2><p>1、创建properties文件</p><p>2、spring引入properties文件使用context命名空间</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">http://www.springframework.org/schema/context</span><br><span class="line">       http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>3、${}引入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置德鲁伊连接池--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;prop.driverClass&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;prop.url&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;prop.userName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;prop.paswword&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="四、Bean管理注解方式"><a href="#四、Bean管理注解方式" class="headerlink" title="四、Bean管理注解方式"></a>四、Bean管理注解方式</h1><p>1、注解所需依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、开启注解扫描</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--开启组件注解扫描--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--扫描多个包可以用逗号连接--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.wwj&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-1-Bean创建对象提供的注解"><a href="#4-1-Bean创建对象提供的注解" class="headerlink" title="4.1    Bean创建对象提供的注解"></a>4.1    Bean创建对象提供的注解</h2><p>value属性值可以省略，默认为类名首字母小写</p><p>1、@Component</p><p>2、@Service</p><p>3、@Controller</p><p>4、@Repository</p><h2 id="4-2-组件扫描注意事项"><a href="#4-2-组件扫描注意事项" class="headerlink" title="4.2    组件扫描注意事项"></a>4.2    组件扫描注意事项</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--开启组件注解扫描--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--扫描多个包可以用逗号连接--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--use-default-filters=&quot;false&quot; 表示不使用默认filter扫描。自己配置filter--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--扫描该包下面带有Controller注解的类--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.wwj.annotation&quot;</span> <span class="attr">use-default-filters</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:include-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Controller&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:exclude-filter</span> <span class="attr">type</span>=<span class="string">&quot;annotation&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;org.springframework.stereotype.Service&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-3-属性注入"><a href="#4-3-属性注入" class="headerlink" title="4.3    属性注入"></a>4.3    属性注入</h2><p>1、@Autowired：根据属性类型自动注入（无需set方法）</p><p>2、@Qualifier：根据属性名称进行注入（需要和@Autowired一起使用）</p><p><strong>@Autowired</strong></p><p><strong>@Qualifier（value&#x3D;”注入属性名称”）</strong></p><p>3、@Resource：可根据类型也可根据名称注入</p><p><strong>@Resource类型注入</strong></p><p><strong>@Resource（name&#x3D;“注入属性名称”）名称注入</strong></p><p>4、@Value：注入普通类型属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value(value = &quot;abc&quot;)</span></span><br><span class="line"><span class="keyword">private</span> String name;</span><br></pre></td></tr></table></figure><h2 id="4-4-完全注解开发"><a href="#4-4-完全注解开发" class="headerlink" title="4.4    完全注解开发"></a>4.4    完全注解开发</h2><p>1、配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &#123;&quot;com.wwj&quot;&#125;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SpringConfig</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">ApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(SpringConfig.class);</span><br></pre></td></tr></table></figure><h1 id="五、AOP"><a href="#五、AOP" class="headerlink" title="五、AOP"></a>五、AOP</h1><h2 id="5-1-概念"><a href="#5-1-概念" class="headerlink" title="5.1    概念"></a>5.1    概念</h2><p>1、面向切面编程</p><p><strong>2、不通过修改源代码，在主干功能里添加新的功能</strong></p><h2 id="5-2-底层原理—-动态代理"><a href="#5-2-底层原理—-动态代理" class="headerlink" title="5.2    底层原理—-动态代理"></a>5.2    底层原理—-动态代理</h2><p>1、有接口（JDK动态代理）</p><img src="/2022/09/04/Spring/image-20220508184543325.png" class="" title="image-20220508184543325"><p>2、无接口（CGLIB）</p><img src="/2022/09/04/Spring/image-20220508184719626.png" class="" title="image-20220508184719626"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JdkProxy</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        Class[] interfaces = &#123;UserDao.class&#125;;</span><br><span class="line">        <span class="type">UserDaoImpl</span> <span class="variable">userDao</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserDaoImpl</span>();</span><br><span class="line">        <span class="comment">// 通过proxy生成代理对象 传入类加载器，要被增强的接口，以及对应增强对象的接口</span></span><br><span class="line">        <span class="type">UserDao</span> <span class="variable">dao</span> <span class="operator">=</span> (UserDao) Proxy.newProxyInstance(JdkProxy.class.getClassLoader(), interfaces, <span class="keyword">new</span> <span class="title class_">UserDaoProxy</span>(userDao));</span><br><span class="line">        <span class="type">int</span> <span class="variable">calculate</span> <span class="operator">=</span> dao.calculate(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">        System.out.println(calculate);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserDaoProxy</span> <span class="keyword">implements</span> <span class="title class_">InvocationHandler</span>&#123;</span><br><span class="line">    <span class="comment">// 传入obj对象，就是实现类对象，用于反射调用方法</span></span><br><span class="line">    <span class="keyword">private</span> Object obj;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UserDaoProxy</span><span class="params">(Object obj)</span>&#123;</span><br><span class="line">        <span class="built_in">this</span>.obj=obj;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 增强逻辑</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        <span class="comment">// 执行方法前增强</span></span><br><span class="line">        System.out.println(<span class="string">&quot;方法之前执行&quot;</span>+method.getName()+<span class="string">&quot;参数：&quot;</span>+ Arrays.toString(args));</span><br><span class="line">        <span class="comment">// 执行方法时</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">res</span> <span class="operator">=</span> method.invoke(obj, args);</span><br><span class="line">        <span class="comment">// 执行方法后增阿基</span></span><br><span class="line">        System.out.println(<span class="string">&quot;方法之后执行&quot;</span>+obj);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3-术语"><a href="#5-3-术语" class="headerlink" title="5.3    术语"></a>5.3    术语</h2><p>1、连接点：类里面哪些方法可以被增强</p><p>2、切入点：实际被增强的方法</p><p>3、通知（增强）：实际被增强的逻辑部分</p><p>4、切面：将通知应用到切入点的过程（增强内容应用到方法中）</p><p><strong>通知的类型</strong></p><p>1、前置通知：方法前执行</p><p>2、后置通知：方法后执行</p><p>3、环绕通知：方法前后执行</p><p>4、异常通知：出异常执行</p><p>5、最终通知：无论有无异常都会执行</p><h2 id="5-4-Spring实现AOP操作"><a href="#5-4-Spring实现AOP操作" class="headerlink" title="5.4    Spring实现AOP操作"></a>5.4    Spring实现AOP操作</h2><p>基于AspectJ实现AOP操作</p><p>AspectJ：独立的AOP框架</p><p><strong>1、引入依赖</strong></p><img src="/2022/09/04/Spring/image-20220508193315181.png" class="" title="image-20220508193315181"><p><strong>2、切入点表达式：知道哪个类的哪个方法增强</strong></p><p><strong>语法：</strong></p><p>execution（【权限修饰符】【返回类型】【类全路径】【方法名称】【（参数列表）】）</p><p>权限修饰符：* </p><p>返回值：省略</p><p>参数列表：..表示参数</p><p>execution（*com.wwj.BookDao.add(..)）</p><p><strong>对类中所有方法增强：可用星号代替</strong></p><p>execution（*com.wwj.BookDao. * (..)）</p><h2 id="5-5-AspectJ注解实现"><a href="#5-5-AspectJ注解实现" class="headerlink" title="5.5    AspectJ注解实现"></a>5.5    AspectJ注解实现</h2><p>1、打开注解扫描、开启生成代理对象，<strong>需要使用context、aop命名空间</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--开启组件注解扫描--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--扫描多个包可以用逗号连接--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.wwj.AspectJ&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--开启生成代理对象--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:aspectj-autoproxy</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>2、配置增强类方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span>  <span class="comment">// 生成代理对象</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserProxy</span> &#123;</span><br><span class="line">    <span class="comment">// 增强方法</span></span><br><span class="line">    <span class="comment">// 填写切面表达式</span></span><br><span class="line">    <span class="meta">@Before(value = &quot;execution(* com.wwj.AspectJ.User.add(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;before...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@Before：前置通知</p><p>@After：方法之后执行</p><p>@AfterReturning：方法返回值之后执行（最终通知）</p><p>@AfterThrowing：异常通知</p><p>@Around：方法前后都执行</p><img src="/2022/09/04/Spring/image-20220508195510704.png" class="" title="image-20220508195510704"><h2 id="5-6-相同的切入点表达式提取"><a href="#5-6-相同的切入点表达式提取" class="headerlink" title="5.6    相同的切入点表达式提取"></a>5.6    相同的切入点表达式提取</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">// 切入点表达式抽取</span></span><br><span class="line">    <span class="meta">@Pointcut(value = &quot;execution(* com.wwj.AspectJ.User.add(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pointDemo</span><span class="params">()</span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 增强方法</span></span><br><span class="line">    <span class="comment">// 填写切面表达式</span></span><br><span class="line">    <span class="comment">// 可以使用方法名抽取</span></span><br><span class="line">    <span class="meta">@Before(value = &quot;pointDemo()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;before...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-7-多个增强类对同一个方法增强"><a href="#5-7-多个增强类对同一个方法增强" class="headerlink" title="5.7    多个增强类对同一个方法增强"></a>5.7    多个增强类对同一个方法增强</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Order(1)</span>  <span class="comment">// 增强类优先级</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserProxy2</span> &#123;</span><br></pre></td></tr></table></figure><p>增加Order注解：数字值越大，哪个类就优先被执行</p><h2 id="5-8-AspectJ配置文件实现"><a href="#5-8-AspectJ配置文件实现" class="headerlink" title="5.8    AspectJ配置文件实现"></a>5.8    AspectJ配置文件实现</h2><img src="/2022/09/04/Spring/image-20220509103656901.png" class="" title="image-20220509103656901"><h2 id="5-9-全注解开发切面注解"><a href="#5-9-全注解开发切面注解" class="headerlink" title="5.9    全注解开发切面注解"></a>5.9    全注解开发切面注解</h2><p>@EnableAspectJAutoProxy</p><img src="/2022/09/04/Spring/image-20220509103940205.png" class="" title="image-20220509103940205"><p>proxyTargetClass&#x3D;true 默认为false</p><h1 id="六、JDBC-Template"><a href="#六、JDBC-Template" class="headerlink" title="六、JDBC Template"></a>六、JDBC Template</h1><h2 id="6-1-依赖引入"><a href="#6-1-依赖引入" class="headerlink" title="6.1    依赖引入"></a>6.1    依赖引入</h2><p>1、spring的jdbc整合</p><p>2、spring事务</p><p>3、整合依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-tx<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-2-实现"><a href="#6-2-实现" class="headerlink" title="6.2    实现"></a>6.2    实现</h2><p>配置文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.wwj.JDBC&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">context:component-scan</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">&quot;classpath:jdbc.properties&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置德鲁伊连接池--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.alibaba.druid.pool.DruidDataSource&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;prop.driverClass&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;prop.url&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;prop.userName&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;prop.paswword&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;jdbcTemplate&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.core.JdbcTemplate&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="6-3-CRUD操作"><a href="#6-3-CRUD操作" class="headerlink" title="6.3    CRUD操作"></a>6.3    CRUD操作</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 增加操作</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addUser</span><span class="params">(User user)</span>&#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> jdbcTemplate.update(<span class="string">&quot;insert into user values (?,?)&quot;</span>, user.getUsername(), user.getPassword());</span><br><span class="line">    System.out.println(result);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 返回一条结果操作</span></span><br><span class="line"><span class="keyword">public</span> Integer  <span class="title function_">selectCount</span><span class="params">(User user)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select count(*) from user&quot;</span>;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">count</span> <span class="operator">=</span> jdbcTemplate.queryForObject(sql, Integer.class);</span><br><span class="line">    System.out.println(<span class="string">&quot;总记录：&quot;</span>+count);</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 返回对象操作</span></span><br><span class="line"><span class="keyword">public</span> User <span class="title function_">selectObject</span><span class="params">(User user)</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from user where username = ?&quot;</span>;</span><br><span class="line">    <span class="comment">// 参数1：sql语句    参数2：BeanPropertyRowMapper实现类对象传入User泛型以及User字节码     参数3：占位符参数</span></span><br><span class="line">    <span class="keyword">return</span> jdbcTemplate.queryForObject(sql,<span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;User&gt;(User.class),user.getUsername());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 返回集合</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectByList</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;select * from user&quot;</span>;</span><br><span class="line">    <span class="comment">// 参数2：上述一致</span></span><br><span class="line">    List&lt;User&gt; query = jdbcTemplate.query(sql, <span class="keyword">new</span> <span class="title class_">BeanPropertyRowMapper</span>&lt;User&gt;(User.class));</span><br><span class="line">    <span class="keyword">for</span> (User user : query) &#123;</span><br><span class="line">        System.out.println(user.getUsername()+user.getPassword());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 批量添加</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addAll</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="comment">//  每个数组是每条添加的信息</span></span><br><span class="line">    List&lt;Object[]&gt; batchArgs = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Object[]&gt;();</span><br><span class="line">    Object[] o1 = &#123;<span class="number">12321</span>,<span class="string">&quot;32&quot;</span>&#125;;</span><br><span class="line">    Object[] o2 = &#123;<span class="number">454</span>,<span class="string">&quot;z&quot;</span>&#125;;</span><br><span class="line">    Object[] o3 = &#123;<span class="number">154</span>,<span class="string">&quot;ed&quot;</span>&#125;;</span><br><span class="line">    batchArgs.add(o1);</span><br><span class="line">    batchArgs.add(o2);</span><br><span class="line">    batchArgs.add(o3);</span><br><span class="line">    <span class="type">String</span> <span class="variable">sql</span> <span class="operator">=</span> <span class="string">&quot;insert into user values (?,?)&quot;</span>;</span><br><span class="line">    jdbcTemplate.batchUpdate(sql,batchArgs);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="七、Spring事务管理"><a href="#七、Spring事务管理" class="headerlink" title="七、Spring事务管理"></a>七、Spring事务管理</h1><h2 id="7-1-分类"><a href="#7-1-分类" class="headerlink" title="7.1    分类"></a>7.1    分类</h2><p>1、编程式事务管理</p><p>2、声明式事务管理（注解、XML）（底层：AOP）</p><h2 id="7-2-注解实现"><a href="#7-2-注解实现" class="headerlink" title="7.2    注解实现"></a>7.2    注解实现</h2><p>1、配置事务管理器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置事务管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、开启事务注解（整合不同的框架对应的实现类不同）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置事务管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--开启事务注解--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--指定事务管理器--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">&quot;transactionManager&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tx:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、添加注解（可加类或者方法上）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">accountMoney</span><span class="params">()</span>&#123;</span><br><span class="line">        userDao.reduceMoney();</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">10</span>/<span class="number">0</span>;</span><br><span class="line">        userDao.addMoney();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-3-声明式事务管理参数配置"><a href="#7-3-声明式事务管理参数配置" class="headerlink" title="7.3    声明式事务管理参数配置"></a>7.3    声明式事务管理参数配置</h2><p><strong>@Transaction参数配置</strong></p><p><strong>1、propagation：事务传播行为</strong></p><p>多事务方法进行调用，事务的管理方式</p><img src="/2022/09/04/Spring/image-20220509123747915.png" class="" title="image-20220509123747915"><p><strong>2、isolation：事务隔离级别</strong></p><p> 脏读：</p><p>不可重复度</p><p>幻读</p><img src="/2022/09/04/Spring/image-20220509134843615.png" class="" title="image-20220509134843615"><p><strong>3、timeout：超时时间</strong></p><p>事务在规定内提交，超时回滚操作，默认-1，可以设置以秒为单位的时间</p><p><strong>4、readOnly：是否只读</strong></p><p>默认false，true只能查询操作</p><p><strong>5、rollbackFor：回滚</strong></p><p>设置查询哪些异常进行回滚</p><p><strong>6、noRollbackFor：不回滚</strong></p><p>设置查询哪里异常进行不回滚</p><h2 id="7-4-XML实现"><a href="#7-4-XML实现" class="headerlink" title="7.4    XML实现"></a>7.4    XML实现</h2><p>1、配置事务管理器</p><p>2、配置通知</p><p>3、配置切入点和切面</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--配置事务管理--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;transactionManager&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DataSourceTransactionManager&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置通知--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">&quot;txadvice&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">&quot;accountMoney&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--配置切入点和切面--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--切入点--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pt&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.wwj.tx.service.UserService.accountMoney(..))&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--切面--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;txadvice&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pt&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="7-5-完全注解开发"><a href="#7-5-完全注解开发" class="headerlink" title="7.5    完全注解开发"></a>7.5    完全注解开发</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span> <span class="comment">//配置类</span></span><br><span class="line"><span class="meta">@ComponentScan(basePackages = &quot;com.wwj.tx&quot;)</span><span class="comment">// 组件扫描</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TxConfig</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DruidDataSource <span class="title function_">getDruidDataSource</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">DruidDataSource</span> <span class="variable">druidDataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">        druidDataSource.setDriverClassName();</span><br><span class="line">        druidDataSource.setUrl();</span><br><span class="line">        druidDataSource.setUsername();</span><br><span class="line">        druidDataSource.setPassword();</span><br><span class="line">        <span class="keyword">return</span> druidDataSource;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="comment">// 到IOC容器根据类型找到完成注入形参</span></span><br><span class="line">    <span class="keyword">public</span> JdbcTemplate <span class="title function_">getJdbcTemplate</span><span class="params">(DataSource dataSource)</span>&#123;</span><br><span class="line">        <span class="type">JdbcTemplate</span> <span class="variable">jdbcTemplate</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JdbcTemplate</span>();</span><br><span class="line">        jdbcTemplate.setDataSource(dataSource);</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> DataSourceTransactionManager <span class="title function_">getTx</span><span class="params">(DataSource dataSource)</span>&#123;</span><br><span class="line">        <span class="type">DataSourceTransactionManager</span> <span class="variable">dataSourceTransactionManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceTransactionManager</span>();</span><br><span class="line">        dataSourceTransactionManager.setDataSource(dataSource);</span><br><span class="line">        <span class="keyword">return</span> dataSourceTransactionManager;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试一定使用注解的实现类方发出获取上下文</p><h1 id="八、Spring5新特性"><a href="#八、Spring5新特性" class="headerlink" title="八、Spring5新特性"></a>八、Spring5新特性</h1><h2 id="8-1-自带日志封装"><a href="#8-1-自带日志封装" class="headerlink" title="8.1    自带日志封装"></a>8.1    自带日志封装</h2><h2 id="8-2-Nullable注解"><a href="#8-2-Nullable注解" class="headerlink" title="8.2    Nullable注解"></a>8.2    Nullable注解</h2><p>使用在方法上，属性上，参数上表示方法返回可以为空，属性值可以为空，参数值可以为空</p><p>方法上&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;返回值可以为空</p><p>方法参数&#x3D;&#x3D;&#x3D;方法参数可以为空</p><p>属性上&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;属性值可以为空</p><h2 id="8-3-Junit4"><a href="#8-3-Junit4" class="headerlink" title="8.3    Junit4"></a>8.3    Junit4</h2><p>1、依赖引入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.6.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、测试类加入注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith(SpringJUnit4ClassRunner.class)</span>  <span class="comment">//整合Junit4</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:druid.xml&quot;)</span> <span class="comment">// 加载配置文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">test</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DataSource dataSource;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Junit</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(dataSource);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="8-4-Junit5"><a href="#8-4-Junit5" class="headerlink" title="8.4    Junit5"></a>8.4    Junit5</h2><p>1、添加JUnit5</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br></pre></td></tr></table></figure><p>2、添加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ExtendWith(SpringExtension.class)</span></span><br><span class="line"><span class="meta">@ContextConfiguration(&quot;classpath:druid.xml&quot;</span></span><br><span class="line"><span class="meta">//@RunWith(SpringJUnit4ClassRunner.class)  //整合Junit4</span></span><br><span class="line"><span class="meta">//@ContextConfiguration(&quot;classpath:druid.xml&quot;) // 加载配置文件</span></span><br><span class="line"><span class="meta">public class test &#123;</span></span><br><span class="line"><span class="meta">    @Autowired</span></span><br><span class="line"><span class="meta">    private DataSource dataSource;</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">    @Test</span></span><br><span class="line"><span class="meta">    public void Junit()&#123;</span></span><br><span class="line"><span class="meta">        System.out.println(dataSource);</span></span><br><span class="line"><span class="meta">    &#125;</span></span><br></pre></td></tr></table></figure><p>3、替代</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringJUnitConfig(locations = &quot;classpath:druid.xml&quot;)</span>  <span class="comment">//替代上面两个注解</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端技术 </tag>
            
            <tag> 后端框架 </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序</title>
      <link href="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
      <url>/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>小程序提供了一个简单、高效的应用开发框架和丰富的组件及API，帮助开发者在微信中开发具有原生 APP 体验的服务。</p><p><a href="https://baike.baidu.com/item/%E5%BE%AE%E4%BF%A1/3905974?fromModule=lemma_inlink">微信</a>小程序，<a href="https://baike.baidu.com/item/%E5%B0%8F%E7%A8%8B%E5%BA%8F?fromModule=lemma_inlink">小程序</a>的一种，英文名Wechat Mini Program，是一种不需要下载安装即可使用的<a href="https://baike.baidu.com/item/%E5%BA%94%E7%94%A8?fromModule=lemma_inlink">应用</a>，它实现了应用“触手可及”的梦想，用户扫一扫或搜一下即可打开应用。</p><h1 id="一、小程序基本使用"><a href="#一、小程序基本使用" class="headerlink" title="一、小程序基本使用"></a>一、小程序基本使用</h1><h2 id="1-1接口展示"><a href="#1-1接口展示" class="headerlink" title="1.1接口展示"></a>1.1接口展示</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626102859659.png" class="" title="image-20220626102859659"><h2 id="1-2获取AppID"><a href="#1-2获取AppID" class="headerlink" title="1.2获取AppID"></a>1.2获取AppID</h2><p> wx4e626b7b1a297f98</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626103419996.png" class="" title="image-20220626103419996"><h2 id="1-3运行"><a href="#1-3运行" class="headerlink" title="1.3运行"></a>1.3运行</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626104737203.png" class="" title="image-20220626104737203"><h2 id="1-4小程序项目结构"><a href="#1-4小程序项目结构" class="headerlink" title="1.4小程序项目结构"></a>1.4小程序项目结构</h2><p><strong>pages：存放页面</strong></p><p>utils：存在工具性质的模块</p><p><strong>app.js： 小程序入口文件</strong></p><p><strong>app.json：小程序全局配置文件</strong></p><p>app.wxss：小程序全局样式文件</p><p>project.config.json：项目配置文件</p><p>sitemap.json：配置小程序及其页面是否允许被微信索引</p><h2 id="1-5小程序页面组成"><a href="#1-5小程序页面组成" class="headerlink" title="1.5小程序页面组成"></a>1.5小程序页面组成</h2><p>.js：脚本文件，页面数据、事件处理函数等</p><p>.json：当前页面的配置文件，窗口的外观、表现</p><p>.wxml：页面的模板结构文件</p><p>.wxss：页面的样式文件</p><h2 id="1-6JSON配置文件"><a href="#1-6JSON配置文件" class="headerlink" title="1.6JSON配置文件"></a>1.6JSON配置文件</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626105836997.png" class="" title="image-20220626105836997"><h2 id="1-7app-json全局配置文件"><a href="#1-7app-json全局配置文件" class="headerlink" title="1.7app.json全局配置文件"></a>1.7app.json全局配置文件</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626110217507.png" class="" title="image-20220626110217507"><h2 id="1-8project-config-json项目配置文件"><a href="#1-8project-config-json项目配置文件" class="headerlink" title="1.8project.config.json项目配置文件"></a>1.8project.config.json项目配置文件</h2><p>对小程序开发工具的一些个性化配置</p><p>setting：保存编译相关配置</p><p>projectName：项目名称</p><p>appid：引入别人项目的时候需要进行修改</p><h2 id="1-9sitemap-json"><a href="#1-9sitemap-json" class="headerlink" title="1.9sitemap.json"></a>1.9sitemap.json</h2><p>允许被微信索引（搜索）</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626110702409.png" class="" title="image-20220626110702409"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626110825271.png" class="" title="image-20220626110825271"><h2 id="1-10页面json文件"><a href="#1-10页面json文件" class="headerlink" title="1.10页面json文件"></a>1.10页面json文件</h2><p>对当前页面外观进行配置</p><p><strong>会覆盖全局配置项的配置</strong></p><h2 id="1-11新建页面"><a href="#1-11新建页面" class="headerlink" title="1.11新建页面"></a>1.11新建页面</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626111203828.png" class="" title="image-20220626111203828"><h2 id="1-12修改项目首页"><a href="#1-12修改项目首页" class="headerlink" title="1.12修改项目首页"></a>1.12修改项目首页</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626111309290.png" class="" title="image-20220626111309290"><h2 id="1-13WXML模板"><a href="#1-13WXML模板" class="headerlink" title="1.13WXML模板"></a>1.13WXML模板</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626111420953.png" class="" title="image-20220626111420953"><h2 id="1-14WXSS"><a href="#1-14WXSS" class="headerlink" title="1.14WXSS"></a>1.14WXSS</h2><p>CSS</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626111623762.png" class="" title="image-20220626111623762"><h2 id="1-15JS逻辑交互"><a href="#1-15JS逻辑交互" class="headerlink" title="1.15JS逻辑交互"></a>1.15JS逻辑交互</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626111815680.png" class="" title="image-20220626111815680"><h2 id="1-16宿主环境"><a href="#1-16宿主环境" class="headerlink" title="1.16宿主环境"></a>1.16宿主环境</h2><p>程序运行所必须依赖的环境</p><p><strong>小程序宿主环境</strong></p><p>1、通信模型：WXML和WXSS工作在渲染层、JS工作在逻辑层</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626112157040.png" class="" title="image-20220626112157040"><p>2、运行机制</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626112500408.png" class="" title="image-20220626112500408"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626112534829.png" class="" title="image-20220626112534829"><p>3、组件</p><p>4、API</p><h1 id="二、小程序组件"><a href="#二、小程序组件" class="headerlink" title="二、小程序组件"></a>二、小程序组件</h1><h2 id="2-1视图容器类"><a href="#2-1视图容器类" class="headerlink" title="2.1视图容器类"></a>2.1视图容器类</h2><p>view：类似于div</p><p>scroll-view：可以滚动的视图区域</p><p>swiper和swiper-item：轮播图和对应的每项组件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 普通div --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;container1&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>a<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>b<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>c<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 滚动视图标签 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- scroll-y: 开启纵向滚动  --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 纵向必须设置强制性的高，横向必须设置强制性的宽 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scroll-view</span> <span class="attr">class</span>=<span class="string">&quot;container2&quot;</span> <span class="attr">scroll-y</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>a<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>b<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>c<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scroll-view</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>轮播图</strong></p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626115612959.png" class="" title="image-20220626115612959"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 轮播图 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- swiper --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">swiper</span> <span class="attr">class</span>=<span class="string">&quot;swiper-container&quot;</span> <span class="attr">indicator-dots</span>=<span class="string">&quot;true&quot;</span> <span class="attr">indicator-color</span>=<span class="string">&quot;white&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">indicator-active-color</span>=<span class="string">&quot;blue&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">autoplay</span></span></span><br><span class="line"><span class="tag"><span class="attr">interval</span>=<span class="string">&quot;1000&quot;</span></span></span><br><span class="line"><span class="tag"><span class="attr">circular</span>=<span class="string">&quot;true&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>A<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>B<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span>C<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">swiper-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">swiper</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 得先用swiper-item选中再类选择器 */</span></span><br><span class="line">swiper-item<span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) <span class="selector-class">.item</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line">swiper-item<span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) <span class="selector-class">.item</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: coral;</span><br><span class="line">&#125;</span><br><span class="line">swiper-item<span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>) <span class="selector-class">.item</span>&#123;</span><br><span class="line">  <span class="attribute">background-color</span>: silver;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2-2基本内容组件"><a href="#2-2基本内容组件" class="headerlink" title="2.2基本内容组件"></a>2.2基本内容组件</h2><p>text：span</p><p>rich-text：支持把HTML字符串渲染为WXML结构</p><p>长按选中：增加selectable属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">长按选中</span><br><span class="line"><span class="tag">&lt;<span class="name">text</span> <span class="attr">selectable</span>&gt;</span>1232132143214231<span class="tag">&lt;/<span class="name">text</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rich-text</span> <span class="attr">nodes</span>=<span class="string">&quot;&lt;h1 style=&#x27;color: red&#x27;&gt;test&lt;/h1&gt;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">rich-text</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-3常用组件"><a href="#2-3常用组件" class="headerlink" title="2.3常用组件"></a>2.3常用组件</h2><p>button：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- type指定按钮颜色类型 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span>&gt;</span>test<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;warn&quot;</span>&gt;</span>test<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 小尺寸按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span>&gt;</span>test<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 镂空按钮 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">plain</span>&gt;</span>test<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><p>image:</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626121242173.png" class="" title="image-20220626121242173"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 默认情况图片有宽高 --&gt;</span></span><br><span class="line"><span class="comment">&lt;!--mode: 裁剪和缩放模式 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;/images/屏幕截图(2).png&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;aspectFit&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三、API"><a href="#三、API" class="headerlink" title="三、API"></a>三、API</h1><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626121618816.png" class="" title="image-20220626121618816"><h1 id="四、模板与配置"><a href="#四、模板与配置" class="headerlink" title="四、模板与配置"></a>四、模板与配置</h1><h2 id="4-1数据绑定"><a href="#4-1数据绑定" class="headerlink" title="4.1数据绑定"></a>4.1数据绑定</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 页面的初始数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="attr">data</span>: &#123;</span><br><span class="line">  <span class="attr">info</span>:<span class="string">&#x27;hello world&#x27;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>支持三元运算</strong></p><p><strong>支持算数运算</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 绑定属性和vue不同vue采用的是v-bind绑定 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;imgSrc&#125;&#125;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">image</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-2事件绑定"><a href="#4-2事件绑定" class="headerlink" title="4.2事件绑定"></a>4.2事件绑定</h2><p>渲染层到逻辑层的通讯方式</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626141944681.png" class="" title="image-20220626141944681"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626142240344.png" class="" title="image-20220626142240344"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626142529500.png" class="" title="image-20220626142529500"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 触摸事件函数</span></span><br><span class="line"><span class="title function_">btnTapHandler</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="comment">// 赋新值</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">    <span class="comment">// this指向的是旧数据</span></span><br><span class="line">    <span class="attr">count</span>: <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">count</span>+<span class="number">1</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">count</span>);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;btnTapHandler&quot;</span>&gt;</span>click<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-3事件传参"><a href="#4-3事件传参" class="headerlink" title="4.3事件传参"></a>4.3事件传参</h2><p><strong>不能在绑定事件的同时绑定传递参数</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;btnTapHandler&quot;</span></span></span><br><span class="line"><span class="tag">&lt;!<span class="attr">--</span> <span class="attr">传递的是数字类型</span> <span class="attr">--</span>&gt;</span></span><br><span class="line">data-info=&quot;&#123;&#123;2&#125;&#125;&quot;&gt;click<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 接收数据</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;data:&quot;</span>,e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">info</span>)</span><br></pre></td></tr></table></figure><h2 id="4-4文本框事件"><a href="#4-4文本框事件" class="headerlink" title="4.4文本框事件"></a>4.4文本框事件</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">bindinput</span>=<span class="string">&quot;inputHandler&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文本框事件</span></span><br><span class="line"><span class="title function_">inputHandler</span>(<span class="params">e</span>)&#123;</span><br><span class="line">  <span class="comment">// 获取文本框最新的值</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">detail</span>.<span class="property">value</span>);</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4-5文本框和data的数据同步"><a href="#4-5文本框和data的数据同步" class="headerlink" title="4.5文本框和data的数据同步"></a>4.5文本框和data的数据同步</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文本框事件</span></span><br><span class="line"> <span class="title function_">inputHandler</span>(<span class="params">e</span>)&#123;</span><br><span class="line">   <span class="comment">// 获取文本框最新的值</span></span><br><span class="line">   <span class="comment">// 实现数据同步</span></span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">detail</span>.<span class="property">value</span>);</span><br><span class="line">   <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">     <span class="attr">msg</span>:e.<span class="property">detail</span>.<span class="property">value</span></span><br><span class="line">   &#125;)</span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">msg</span>);</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h2 id="4-6条件渲染"><a href="#4-6条件渲染" class="headerlink" title="4.6条件渲染"></a>4.6条件渲染</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;condition === 1&#125;&#125;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:elif</span>=<span class="string">&quot;&#123;&#123;condition === 2&#125;&#125;&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:else</span>&gt;</span>3<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 一次性控制多个组件的展示和隐藏 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">block</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;true&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 放入多个组件渲染没有block组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">block</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 状态等于1隐藏--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">hidden</span>=<span class="string">&quot;&#123;&#123;condition === 1&#125;&#125;&quot;</span>&gt;</span>hidden<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-7列表渲染"><a href="#4-7列表渲染" class="headerlink" title="4.7列表渲染"></a>4.7列表渲染</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626145913583.png" class="" title="image-20220626145913583"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index：索引 item：每一项 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;arr1&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  &#123;&#123;index&#125;&#125;,&#123;&#123;item&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626150042522.png" class="" title="image-20220626150042522"><h2 id="4-8WXSS模板样式"><a href="#4-8WXSS模板样式" class="headerlink" title="4.8WXSS模板样式"></a>4.8WXSS模板样式</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626150303602.png" class="" title="image-20220626150303602"><p>rpx：解决屏幕适配尺寸</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626150449296.png" class="" title="image-20220626150449296">**样式导入**<img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626150819900.png" class="" title="image-20220626150819900"><h2 id="4-9全局样式、局部样式"><a href="#4-9全局样式、局部样式" class="headerlink" title="4.9全局样式、局部样式"></a>4.9全局样式、局部样式</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* iphone6换算 1px = 2rpx */</span></span><br><span class="line">view&#123;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">10</span>rpx;</span><br><span class="line">  <span class="attribute">background-color</span>: silver;</span><br><span class="line">&#125;</span><br><span class="line">app<span class="selector-class">.wxss</span> 全局样式</span><br></pre></td></tr></table></figure><p><strong>局部样式：作用于当前页面，发生冲突的时候局部样式会覆盖全局样式</strong></p><h2 id="4-10全局配置文件app-json"><a href="#4-10全局配置文件app-json" class="headerlink" title="4.10全局配置文件app.json"></a>4.10全局配置文件app.json</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626151350094.png" class="" title="image-20220626151350094"><p> 窗口的三个部分</p><p>1、导航栏（使用window配置）</p><p>2、背景区别（使用window配置）</p><p>3、主体区域</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626151544543.png" class="" title="image-20220626151544543"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626152000646.png" class="" title="image-20220626152000646"><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;enablePullDownRefresh&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>   下拉刷新（全局开启）</span><br></pre></td></tr></table></figure><p><strong>开启下拉刷新后指定背景颜色</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;backgroundColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;#efefef&quot;</span>  开启下拉刷新后指定背景颜色</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;backgroundTextStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;light&quot;</span><span class="punctuation">,</span>  设置下拉刷新三个小圆点样式</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;onReachBottomDistance&quot;</span><span class="punctuation">:</span> <span class="number">100</span>   上拉触底 默认<span class="number">50</span>px</span><br></pre></td></tr></table></figure><h2 id="4-11tabBar"><a href="#4-11tabBar" class="headerlink" title="4.11tabBar"></a>4.11tabBar</h2><p><strong>需要在app.json配置</strong></p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626152943782.png" class="" title="image-20220626152943782"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626153106885.png" class="" title="image-20220626153106885"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626153138222.png" class="" title="image-20220626153138222"><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;tabBar&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>  和window节点平级</span><br><span class="line">  <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/index/index&quot;</span><span class="punctuation">,</span>  路径</span><br><span class="line">    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;111&quot;</span><span class="punctuation">,</span>  文本</span><br><span class="line">    <span class="attr">&quot;iconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iconPath&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;selectedIconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;selectedIconPath&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pagePath&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;222&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;iconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iconPath&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;selectedIconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;selectedIconPath&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p><strong>tabBar的页面路径必须放在最前面</strong></p><h2 id="4-12页面配置"><a href="#4-12页面配置" class="headerlink" title="4.12页面配置"></a>4.12页面配置</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626154247198.png" class="" title="image-20220626154247198"><p>可以设置当前页面的配置</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626154308079.png" class="" title="image-20220626154308079"><h1 id="五、数据请求"><a href="#五、数据请求" class="headerlink" title="五、数据请求"></a>五、数据请求</h1><h2 id="5-1发送请求"><a href="#5-1发送请求" class="headerlink" title="5.1发送请求"></a>5.1发送请求</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626154826134.png" class="" title="image-20220626154826134"><p>1、配置域名</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626155352054.png" class="" title="image-20220626155352054"><p>2、发送请求</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getInfo</span>(<span class="params"></span>)&#123;</span><br><span class="line">  wx.<span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;https://www.escook.cn/api/get&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>:<span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">      <span class="attr">name</span>:<span class="string">&#x27;wwj&#x27;</span>,</span><br><span class="line">      <span class="attr">age</span>:<span class="number">20</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">success</span>: <span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(res.<span class="property">data</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="5-2页面加载的时候请求数据"><a href="#5-2页面加载的时候请求数据" class="headerlink" title="5.2页面加载的时候请求数据"></a>5.2页面加载的时候请求数据</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626160104674.png" class="" title="image-20220626160104674"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生命周期函数--监听页面加载</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="attr">onLoad</span>: <span class="keyword">function</span> (<span class="params">options</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">getInfo</span>()</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="5-3跳过合法https校验"><a href="#5-3跳过合法https校验" class="headerlink" title="5.3跳过合法https校验"></a>5.3跳过合法https校验</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626160807623.png" class="" title="image-20220626160807623"><p>仅限开发和调试使用</p><h1 id="六、视图逻辑"><a href="#六、视图逻辑" class="headerlink" title="六、视图逻辑"></a>六、视图逻辑</h1><h2 id="6-1声明式导航"><a href="#6-1声明式导航" class="headerlink" title="6.1声明式导航"></a>6.1声明式导航</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 跳转tabBar页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">&quot;/pages/index/index&quot;</span> <span class="attr">open-type</span>=<span class="string">&quot;switchTab&quot;</span>&gt;</span>导航页面<span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>必须指定open-type&#x3D;switchTab必须以根目录开头</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 跳转非tabbar页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">&quot;/pages/info/info&quot;</span> <span class="attr">open-type</span>=<span class="string">&quot;navigate&quot;</span>&gt;</span>导航页面<span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>必须指定open-type&#x3D;navigate，可以省略</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">navigator</span> <span class="attr">url</span>=<span class="string">&quot;/pages/info/info&quot;</span> <span class="attr">open-type</span>=<span class="string">&quot;navigate&quot;</span> <span class="attr">delta</span>=<span class="string">&quot;1&quot;</span>&gt;</span>返回上一页<span class="tag">&lt;/<span class="name">navigator</span>&gt;</span></span><br></pre></td></tr></table></figure><p>delta：后退步数 <strong>必须指定open-type&#x3D;navigate，后退上一个页面可以省略</strong></p><h2 id="6-2编程式导航"><a href="#6-2编程式导航" class="headerlink" title="6.2编程式导航"></a>6.2编程式导航</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626164336250.png" class="" title="image-20220626164336250"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 跳转tabBar类型页面</span></span><br><span class="line"><span class="title function_">gotoMsg</span>(<span class="params"></span>)&#123;</span><br><span class="line">  wx.<span class="title function_">switchTab</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/pages/index/index&#x27;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 跳转非tabBar类型页面</span></span><br><span class="line"><span class="title function_">gotoMsg</span>(<span class="params"></span>)&#123;</span><br><span class="line">  wx.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/pages/info/info&#x27;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626164848174.png" class="" title="image-20220626164848174"><h2 id="6-3导航传参"><a href="#6-3导航传参" class="headerlink" title="6.3导航传参"></a>6.3导航传参</h2><p><strong>声明式传参 ：地址栏传参</strong></p><p><strong>编程式传参：地址栏传参</strong></p><p><strong>接收参数：options接收参数</strong></p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220627161056696.png" class="" title="image-20220627161056696"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626184759886.png" class="" title="image-20220626184759886"><h2 id="6-4下拉刷新页面"><a href="#6-4下拉刷新页面" class="headerlink" title="6.4下拉刷新页面"></a>6.4下拉刷新页面</h2><p>重新加载页面数据（推荐局部开启）</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626185056168.png" class="" title="image-20220626185056168"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 页面相关事件处理函数--监听用户下拉动作(下拉刷新触发事件)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="attr">onPullDownRefresh</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><strong>停止下拉刷新效果（使用真机模拟会存在一直刷新效果）</strong></p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626185504523.png" class="" title="image-20220626185504523"><h2 id="6-5监听上拉触底事件"><a href="#6-5监听上拉触底事件" class="headerlink" title="6.5监听上拉触底事件"></a>6.5监听上拉触底事件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">  * 页面上拉触底事件的处理函数</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"> <span class="attr">onReachBottom</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h2 id="6-6加载提示"><a href="#6-6加载提示" class="headerlink" title="6.6加载提示"></a>6.6加载提示</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626190752791-16562416732451-16562416737742-16562416742113.png" class="" title="image-20220626190752791"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626190836339.png" class="" title="image-20220626190836339"><h2 id="6-7节流阀"><a href="#6-7节流阀" class="headerlink" title="6.7节流阀"></a>6.7节流阀</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626191023321.png" class="" title="image-20220626191023321"><h2 id="6-8自定义编译模式"><a href="#6-8自定义编译模式" class="headerlink" title="6.8自定义编译模式"></a>6.8自定义编译模式</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626191302433.png" class="" title="image-20220626191302433"><h2 id="6-9生命周期"><a href="#6-9生命周期" class="headerlink" title="6.9生命周期"></a>6.9生命周期</h2><p>1、应用生命周期</p><p>2、页面生命周期</p><p>app.js 写个app对象自动生成生命周期函数</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626191832487.png" class="" title="image-20220626191832487"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626192026829.png" class="" title="image-20220626192026829"><h1 id="七、wxs脚本"><a href="#七、wxs脚本" class="headerlink" title="七、wxs脚本"></a>七、wxs脚本</h1><p>帮助渲染页面结构（过滤器）</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220626192401587.png" class="" title="image-20220626192401587"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 类似于过滤器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;m1.toUpper(msg)&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">需要指定模块名</span><br><span class="line"><span class="tag">&lt;<span class="name">wxs</span> <span class="attr">module</span>=<span class="string">&quot;m1&quot;</span>&gt;</span></span><br><span class="line">  module.exports.toUpper = function(str)&#123;</span><br><span class="line">    return str.toUpperCase()</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">wxs</span>&gt;</span></span><br><span class="line">内联</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">toLower</span>(<span class="params">str</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> str.<span class="title function_">toLowerCase</span>();</span><br><span class="line">&#125;</span><br><span class="line">需要指定模块名</span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  toLower : toLower</span><br><span class="line">&#125;</span><br><span class="line">外联</span><br><span class="line">&lt;wxs src=<span class="string">&quot;../../utils/tools.wxs&quot;</span> <span class="variable language_">module</span>=<span class="string">&quot;m2&quot;</span>&gt;&lt;/wxs&gt;、</span><br></pre></td></tr></table></figure><h1 id="八、小程序高阶"><a href="#八、小程序高阶" class="headerlink" title="八、小程序高阶"></a>八、小程序高阶</h1><h2 id="8-1自定义组件"><a href="#8-1自定义组件" class="headerlink" title="8.1自定义组件"></a>8.1自定义组件</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220627165421069.png" class="" title="image-20220627165421069"><p>局部引用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">my-test1</span>&gt;</span><span class="tag">&lt;/<span class="name">my-test1</span>&gt;</span>  引用</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;my-test1&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/test/test&quot;</span> 组件名</span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>全局引用：app.json</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;my-test1&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/test/test&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;my-test2&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/test2/test2&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;my-test3&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/test3/test3&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;my-test4&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/test4/test4&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;my-test5&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/test5/test5&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>组件和页面的区别：</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220627170044583-16563204449001-16563204455002-16563204458973.png" class="" title="image-20220627170044583"><h2 id="8-2自定义组件样式"><a href="#8-2自定义组件样式" class="headerlink" title="8.2自定义组件样式"></a>8.2自定义组件样式</h2><p><strong>全局样式中组件的样式不会生效</strong></p><p><strong>标签选择器中组件的样式会受影响</strong></p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628095311872-16563811921411-16563811929282.png" class="" title="image-20220628095311872"><p>isolated：启动样式隔离</p><p>apply-show：页面影响组件，单向影响</p><p>shared：双向影响</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628095357324.png" class="" title="image-20220628095357324"><h2 id="8-3定义组件数据和方法"><a href="#8-3定义组件数据和方法" class="headerlink" title="8.3定义组件数据和方法"></a>8.3定义组件数据和方法</h2><p>事件处理函数和自定义方法直接定义到methods节点中</p><h2 id="8-4properties自定义属性"><a href="#8-4properties自定义属性" class="headerlink" title="8.4properties自定义属性"></a>8.4properties自定义属性</h2><p>接收外界传递到组件中的数据</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628100007528.png" class="" title="image-20220628100007528"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 组件的属性列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="attr">properties</span>: &#123;</span><br><span class="line">  <span class="comment">// 第一种方式：简化的方式</span></span><br><span class="line">  <span class="comment">// max: Number</span></span><br><span class="line">  <span class="comment">// 第二种方式：完整的定义方式</span></span><br><span class="line">  <span class="comment">// 声明数据类型，指定默认值</span></span><br><span class="line">  <span class="attr">max</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Number</span>,</span><br><span class="line">    <span class="attr">value</span>: <span class="number">10</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">my-test1</span> <span class="attr">max</span>=<span class="string">&quot;9&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-test1</span>&gt;</span> --&gt;</span><br></pre></td></tr></table></figure><p>读取数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="comment">// 点击事件处理函数</span></span><br><span class="line">  <span class="title function_">addCount</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">// 引用properties中的数据</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">count</span> &gt;= <span class="variable language_">this</span>.<span class="property">properties</span>.<span class="property">max</span>) <span class="keyword">return</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">      <span class="attr">count</span>: <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">count</span> + <span class="number">1</span>,</span><br><span class="line">      <span class="attr">max</span>: <span class="variable language_">this</span>.<span class="property">properties</span>.<span class="property">max</span> + <span class="number">1</span>   <span class="comment">// properties是可读可写</span></span><br><span class="line">    &#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>properties里的数据是 <strong>可读可写的数据</strong>和vue不相同（vue可读）</p><p>properties里的数据可以使用 <code>&#123;&#123; max &#125;&#125;</code> 进行渲染，和data使用一致</p><h2 id="8-5数据监听器"><a href="#8-5数据监听器" class="headerlink" title="8.5数据监听器"></a>8.5数据监听器</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628100631792.png" class="" title="image-20220628100631792"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 组件的初始数据</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">n1</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">n2</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">sum</span>: <span class="number">0</span></span><br><span class="line">  &#125;,  </span><br><span class="line"></span><br><span class="line"><span class="attr">observers</span>: &#123;</span><br><span class="line">    <span class="comment">// 形参：新值</span></span><br><span class="line">    <span class="string">&#x27;n1, n2&#x27;</span>: <span class="keyword">function</span> (<span class="params">newN1, newN2</span>) &#123;  <span class="comment">// 可以监听两个属性的变化</span></span><br><span class="line">      <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">        <span class="attr">sum</span>: newN1 + newN2</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>监听对象单个或多个属性的变化</strong></p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628101039118.png" class="" title="image-20220628101039118"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;view&gt;&#123;&#123;rgb.r&#125;&#125;, &#123;&#123;rgb.g&#125;&#125;, &#123;&#123;rgb.b&#125;&#125;&lt;/view&gt; --&gt;</span></span><br><span class="line">获取对象中的属性渲染办法</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;_rgb.**&#x27;</span>: <span class="keyword">function</span> (<span class="params">obj</span>) &#123; <span class="comment">// 监听对象中所有属性的变化</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">    <span class="attr">fullColor</span>: <span class="string">`<span class="subst">$&#123;obj.r&#125;</span>, <span class="subst">$&#123;obj.g&#125;</span>, <span class="subst">$&#123;obj.b&#125;</span>`</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-6纯数据字段"><a href="#8-6纯数据字段" class="headerlink" title="8.6纯数据字段"></a>8.6纯数据字段</h2><p><strong>不用于界面渲染的data字段</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">options</span>: &#123;</span><br><span class="line">  <span class="attr">pureDataPattern</span>: <span class="regexp">/^_/</span>   <span class="comment">// 以下划线开头的字段为纯数据字段</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="8-7组件的生命周期"><a href="#8-7组件的生命周期" class="headerlink" title="8.7组件的生命周期"></a>8.7组件的生命周期</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628102521962.png" class="" title="image-20220628102521962"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628103111396.png" class="" title="image-20220628103111396"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628103214609.png" class="" title="image-20220628103214609"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628103254269.png" class="" title="image-20220628103254269"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pageLifetimes</span>: &#123;</span><br><span class="line">  <span class="title function_">show</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;show&#x27;</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">_randomColor</span>()    <span class="comment">// 页面展示的时候调用随机生成颜色</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">hide</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hide&#x27;</span>)</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="title function_">resize</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;resize&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-8插槽"><a href="#8-8插槽" class="headerlink" title="8.8插槽"></a>8.8插槽</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;before&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span>&gt;</span>这里是组件的内部结构<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">&quot;after&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span>  组件封装这者占位,使用name区分不同的插槽</span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">my-test4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">slot</span>=<span class="string">&quot;before&quot;</span>&gt;</span>这是通过插槽填充的内容<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">slot</span>=<span class="string">&quot;after&quot;</span>&gt;</span>~~~~~~~<span class="tag">&lt;/<span class="name">view</span>&gt;</span>  组件使用者设置不同内容</span><br><span class="line"><span class="tag">&lt;/<span class="name">my-test4</span>&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">注册全局可用组件  </span><br><span class="line"><span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;my-test1&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/test/test&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;my-test2&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/test2/test2&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;my-test3&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/test3/test3&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;my-test4&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/test4/test4&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;my-test5&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/components/test5/test5&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>启用多个插槽</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">options</span>: &#123;</span><br><span class="line">  <span class="attr">multipleSlots</span>: <span class="literal">true</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="8-9父子组件通信"><a href="#8-9父子组件通信" class="headerlink" title="8.9父子组件通信"></a>8.9父子组件通信</h2><p>1、属性绑定</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628104513766.png" class="" title="image-20220628104513766"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628104540810.png" class="" title="image-20220628104540810"><p>2、事件绑定</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628104918198.png" class="" title="image-20220628104918198"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">my-test5</span> <span class="attr">count</span>=<span class="string">&quot;&#123;&#123;count&#125;&#125;&quot;</span> <span class="attr">bind:sync</span>=<span class="string">&quot;syncCount&quot;</span> <span class="attr">class</span>=<span class="string">&quot;customA&quot;</span> <span class="attr">id</span>=<span class="string">&quot;cA&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-test5</span>&gt;</span></span><br><span class="line"></span><br><span class="line">对应的方法</span><br><span class="line">  syncCount(e) &#123;</span><br><span class="line">    // console.log(&#x27;syncCount&#x27;)</span><br><span class="line">    // console.log(e)</span><br><span class="line">    // console.log(e.detail.value)</span><br><span class="line">    this.setData(&#123;</span><br><span class="line">      count: e.detail.value</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   <span class="comment">// 触发自定义事件，将数值同步给父组件</span></span><br><span class="line"><span class="comment">// 触发事件声明触发事件名，并且传递对应的值</span></span><br><span class="line">   <span class="variable language_">this</span>.<span class="title function_">triggerEvent</span>(<span class="string">&#x27;sync&#x27;</span>, &#123; <span class="attr">value</span>: <span class="variable language_">this</span>.<span class="property">properties</span>.<span class="property">count</span> &#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">syncCount</span>(<span class="params">e</span>) &#123;   <span class="comment">// 父组件使用e事件对象的detail.value方法获取值</span></span><br><span class="line">  <span class="comment">// console.log(&#x27;syncCount&#x27;)</span></span><br><span class="line">  <span class="comment">// console.log(e)</span></span><br><span class="line">  <span class="comment">// console.log(e.detail.value)</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">setData</span>(&#123;</span><br><span class="line">    <span class="attr">count</span>: e.<span class="property">detail</span>.<span class="property">value</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>3、获取组件实例</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628105545401.png" class="" title="image-20220628105545401"><p>需要定义一个id或者类，通过选择器获取子组件的实例对象</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">my-test5</span> <span class="attr">count</span>=<span class="string">&quot;&#123;&#123;count&#125;&#125;&quot;</span> <span class="attr">bind:sync</span>=<span class="string">&quot;syncCount&quot;</span> <span class="attr">class</span>=<span class="string">&quot;customA&quot;</span> <span class="attr">id</span>=<span class="string">&quot;cA&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-test5</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getChild</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> child = <span class="variable language_">this</span>.<span class="title function_">selectComponent</span>(<span class="string">&#x27;#cA&#x27;</span>)  <span class="comment">// 获取子组件实例对象</span></span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(child)</span><br><span class="line">  <span class="comment">// child.setData(&#123;</span></span><br><span class="line">  <span class="comment">//   count: child.properties.count + 1</span></span><br><span class="line">  <span class="comment">// &#125;)</span></span><br><span class="line">  child.<span class="title function_">addCount</span>()</span><br><span class="line">&#125;,</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-10behaviors类似于vue的混合"><a href="#8-10behaviors类似于vue的混合" class="headerlink" title="8.10behaviors类似于vue的混合"></a>8.10behaviors类似于vue的混合</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628110024269.png" class="" title="image-20220628110024269"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628105955831.png" class="" title="image-20220628105955831"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// components/test5/test5.js</span></span><br><span class="line"><span class="comment">// 导入behavior</span></span><br><span class="line"><span class="keyword">const</span> myBehavior = <span class="built_in">require</span>(<span class="string">&#x27;../../behaviors/my-behavior&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Component</span>(&#123;</span><br><span class="line">  <span class="attr">behaviors</span>: [myBehavior],  <span class="comment">// 挂载behavior</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>在behavior中定义的用户名是：&#123;&#123;username&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span>  使用behavior数据</span><br></pre></td></tr></table></figure><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628110232532.png" class="" title="image-20220628110232532"><h2 id="8-11npm"><a href="#8-11npm" class="headerlink" title="8.11npm"></a>8.11npm</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628110746019.png" class="" title="image-20220628110746019"><h2 id="8-12VantWeappUI组件库"><a href="#8-12VantWeappUI组件库" class="headerlink" title="8.12VantWeappUI组件库"></a>8.12VantWeappUI组件库</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628110959162.png" class="" title="image-20220628110959162"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628111135278.png" class="" title="image-20220628111135278"><p>初始化包管理文件</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628111245105.png" class="" title="image-20220628111245105"><p>安装</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628111352235.png" class="" title="image-20220628111352235"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628111339609.png" class="" title="image-20220628111339609"><p><strong>删除app.json中的style属性项</strong></p><p><strong>引入需要的组件 app.json</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;van-button&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@vant/weapp/button/index&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;my-numbers&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./components/numbers/numbers&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;van-tabbar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@vant/weapp/tabbar/index&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;van-tabbar-item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@vant/weapp/tabbar-item/index&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--pages/home/home.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;getInfo&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span>&gt;</span>按钮<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-13CSS变量"><a href="#8-13CSS变量" class="headerlink" title="8.13CSS变量"></a>8.13CSS变量</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628112014768.png" class="" title="image-20220628112014768"><p>UI自定义CSS（变量名官网文档写了）</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628112320029.png" class="" title="image-20220628112320029"><h2 id="8-14promise化"><a href="#8-14promise化" class="headerlink" title="8.14promise化"></a>8.14promise化</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628112805057.png" class="" title="image-20220628112805057"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628113049486.png" class="" title="image-20220628113049486"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//app.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; promisifyAll &#125; <span class="keyword">from</span> <span class="string">&#x27;miniprogram-api-promise&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> wxp = wx.<span class="property">p</span> = &#123;&#125;</span><br><span class="line"><span class="title function_">promisifyAll</span>(wx, wxp)</span><br></pre></td></tr></table></figure><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628113243723.png" class="" title="image-20220628113243723"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="title function_">getInfo</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;<span class="attr">data</span>: res&#125; = <span class="keyword">await</span> wx.<span class="property">p</span>.<span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;https://www.escook.cn/api/get&#x27;</span>,</span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">      <span class="attr">name</span>: <span class="string">&#x27;zs&#x27;</span>,</span><br><span class="line">      <span class="attr">age</span>: <span class="number">20</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p>返回值是promise对象</p><h2 id="8-15全局数据共享"><a href="#8-15全局数据共享" class="headerlink" title="8.15全局数据共享"></a>8.15全局数据共享</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628113642151.png" class="" title="image-20220628113642151"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628113808444-16563874888163.png" class="" title="image-20220628113808444"><p>删除再构建</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628114056893.png" class="" title="image-20220628114056893"><p>1、创建store文件夹</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628114215392.png" class="" title="image-20220628114215392"><p>2、创建store实例对象</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在这个 JS 文件中，专门来创建 Store 的实例对象</span></span><br><span class="line"><span class="keyword">import</span> &#123; observable, action &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx-miniprogram&#x27;</span></span><br><span class="line"><span class="comment">// 导出实例对象 </span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> store = <span class="title function_">observable</span>(&#123;</span><br><span class="line">  <span class="comment">// 数据字段</span></span><br><span class="line">  <span class="attr">numA</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">numB</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">activeTabBarIndex</span>: <span class="number">0</span>,</span><br><span class="line">  <span class="comment">// 计算属性（get前缀）</span></span><br><span class="line">  <span class="keyword">get</span> <span class="title function_">sum</span>() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">numA</span> + <span class="variable language_">this</span>.<span class="property">numB</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">// actions 函数，专门来修改 store 中数据的值（需要导出个action）</span></span><br><span class="line">  <span class="attr">updateNum1</span>: <span class="title function_">action</span>(<span class="keyword">function</span> (<span class="params">step</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">numA</span> += step</span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="attr">updateNum2</span>: <span class="title function_">action</span>(<span class="keyword">function</span> (<span class="params">step</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">numB</span> += step</span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="attr">updateActiveTabBarIndex</span>: <span class="title function_">action</span>(<span class="keyword">function</span>(<span class="params">index</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">activeTabBarIndex</span> = index</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>使用共享的数据</strong></p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628114742479.png" class="" title="image-20220628114742479"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pages/message/message.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; createStoreBindings &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx-miniprogram-bindings&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; store &#125; <span class="keyword">from</span> <span class="string">&#x27;../../store/store&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面加载</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onLoad</span>: <span class="keyword">function</span> (<span class="params">options</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">storeBindings</span> = <span class="title function_">createStoreBindings</span>(<span class="variable language_">this</span>, &#123;</span><br><span class="line">      store,  数据源</span><br><span class="line">      <span class="attr">fields</span>: [<span class="string">&#x27;numA&#x27;</span>, <span class="string">&#x27;numB&#x27;</span>, <span class="string">&#x27;sum&#x27;</span>], 绑定到页面的字段和计算属性</span><br><span class="line">      <span class="attr">actions</span>: [<span class="string">&#x27;updateNum1&#x27;</span>] 绑定到页面的方法</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  <span class="title function_">btnHandler1</span>(<span class="params">e</span>) &#123;</span><br><span class="line">    <span class="comment">// console.log(e)</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">updateNum1</span>(e.<span class="property">target</span>.<span class="property">dataset</span>.<span class="property">step</span>) <span class="comment">// 调用store的方法</span></span><br><span class="line">  &#125;,</span><br><span class="line">      <span class="comment">// de.target.dataset.step 获取步长值对象</span></span><br><span class="line">      <span class="comment">// data-step=&quot;&#123;&#123;1&#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">      </span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 生命周期函数--监听页面卸载</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">onUnload</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;、</span><br><span class="line">    <span class="comment">// 销毁操作</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">storeBindings</span>.<span class="title function_">detroyStoreBindings</span>()</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--pages/message/message.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;numA&#125;&#125; + &#123;&#123;numB&#125;&#125; = &#123;&#123;sum&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;btnHandler1&quot;</span> <span class="attr">data-step</span>=<span class="string">&quot;&#123;&#123;1&#125;&#125;&quot;</span>&gt;</span>numA + 1<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;btnHandler1&quot;</span> <span class="attr">data-step</span>=<span class="string">&quot;&#123;&#123;-1&#125;&#125;&quot;</span>&gt;</span>numA - 1<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>绑定到组件</strong></p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628115556158.png" class="" title="image-20220628115556158"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// components/numbers/numbers.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; storeBindingsBehavior &#125; <span class="keyword">from</span> <span class="string">&#x27;mobx-miniprogram-bindings&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; store &#125; <span class="keyword">from</span> <span class="string">&#x27;../../store/store&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Component</span>(&#123;</span><br><span class="line">  <span class="attr">behaviors</span>: [storeBindingsBehavior],  <span class="comment">// 自动绑定</span></span><br><span class="line">  <span class="attr">storeBindings</span>: &#123;   <span class="comment">// 数据源、计算属性和数据字段、方法</span></span><br><span class="line">    <span class="comment">// 数据源</span></span><br><span class="line">    store,</span><br><span class="line">    <span class="attr">fields</span>: &#123;</span><br><span class="line">      <span class="attr">numA</span>: <span class="string">&#x27;numA&#x27;</span>,   <span class="comment">// 当前组件使用的名字：使用的store名字</span></span><br><span class="line">      <span class="attr">numB</span>: <span class="string">&#x27;numB&#x27;</span>,</span><br><span class="line">      <span class="attr">sum</span>: <span class="string">&#x27;sum&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">actions</span>: &#123;</span><br><span class="line">      <span class="attr">updateNum2</span>: <span class="string">&#x27;updateNum2&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--components/numbers/numbers.wxml--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;numA&#125;&#125; + &#123;&#123;numB&#125;&#125; = &#123;&#123;sum&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;primary&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;btnHandler2&quot;</span> <span class="attr">data-step</span>=<span class="string">&quot;&#123;&#123;1&#125;&#125;&quot;</span>&gt;</span>numB + 1<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">type</span>=<span class="string">&quot;danger&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;btnHandler2&quot;</span> <span class="attr">data-step</span>=<span class="string">&quot;&#123;&#123;-1&#125;&#125;&quot;</span>&gt;</span>numB - 1<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-16分包"><a href="#8-16分包" class="headerlink" title="8.16分包"></a>8.16分包</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628120229281.png" class="" title="image-20220628120229281"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628120317275.png" class="" title="image-20220628120317275"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628120340275.png" class="" title="image-20220628120340275"><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628123431650.png" class="" title="image-20220628123431650"><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">app.json  </span><br><span class="line"><span class="attr">&quot;subpackages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;root&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pkgA&quot;</span><span class="punctuation">,</span>  分包根目录</span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;p1&quot;</span><span class="punctuation">,</span>    添加别名</span><br><span class="line">      <span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;pages/cat/cat&quot;</span><span class="punctuation">,</span>   有几个页面（相对于根目录存放）</span><br><span class="line">        <span class="string">&quot;pages/dog/dog&quot;</span></span><br><span class="line">      <span class="punctuation">]</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;root&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pkgB&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;p2&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;pages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;pages/apple/apple&quot;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;independent&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><p><strong>查询体积</strong></p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628123820074.png" class="" title="image-20220628123820074"><p><strong>subpackage之外的目录被打包到主包里，tabBar必须在主包</strong></p><p><strong>不能互相嵌套</strong></p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628123940349-16563911808284-16563911814845-16563911819976.png" class="" title="image-20220628123940349"><h2 id="8-17独立分包"><a href="#8-17独立分包" class="headerlink" title="8.17独立分包"></a>8.17独立分包</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;root&quot;</span>: <span class="string">&quot;pkgB&quot;</span>,</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;p2&quot;</span>,</span><br><span class="line">  <span class="string">&quot;pages&quot;</span>: [</span><br><span class="line">    <span class="string">&quot;pages/apple/apple&quot;</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="string">&quot;independent&quot;</span>: <span class="literal">true</span>    <span class="comment">// 分包2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用户一致先用主包再使用分包</p><p>独立分包：无需依赖主包独立运行</p><p>一个小程序可以多个分包</p><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628124322891.png" class="" title="image-20220628124322891"><h2 id="8-18分包预下载"><a href="#8-18分包预下载" class="headerlink" title="8.18分包预下载"></a>8.18分包预下载</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628124431508-16563914718327.png" class="" title="image-20220628124431508"><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">app.json  </span><br><span class="line"><span class="attr">&quot;preloadRule&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;pages/contact/contact&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>  进入该界面路径的时候</span><br><span class="line">      <span class="attr">&quot;packages&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>  </span><br><span class="line">        <span class="string">&quot;p1&quot;</span>     预下载分包的name</span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;network&quot;</span><span class="punctuation">:</span> <span class="string">&quot;wifi&quot;</span>  切换网络模式</span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628124840903-16563917213958.png" class="" title="image-20220628124840903"><h2 id="8-19自定义tabBar"><a href="#8-19自定义tabBar" class="headerlink" title="8.19自定义tabBar"></a>8.19自定义tabBar</h2><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;tabBar&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/home/home&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;首页&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;iconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/images/tabs/home.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;selectedIconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/images/tabs/home-active.png&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/message/message&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;消息&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;iconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/images/tabs/message.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;selectedIconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/images/tabs/message-active.png&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;pagePath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pages/contact/contact&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;联系我们&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;iconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/images/tabs/contact.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;selectedIconPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/images/tabs/contact-active.png&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628125301133-165639198164510.png" class="" title="image-20220628125301133"><p><strong>必须创建该文件夹，里面必须是index文件</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> app.json</span><br><span class="line">引入UI组件库</span><br><span class="line"> <span class="attr">&quot;usingComponents&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;van-button&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@vant/weapp/button/index&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;my-numbers&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./components/numbers/numbers&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;van-tabbar&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@vant/weapp/tabbar/index&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;van-tabbar-item&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@vant/weapp/tabbar-item/index&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">自定义选中未选中</span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">slot</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;item.iconPath&#125;&#125;&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;aspectFit&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 25px; height: 25px;&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">slot</span>=<span class="string">&quot;icon-active&quot;</span> <span class="attr">src</span>=<span class="string">&quot;&#123;&#123;item.selectedIconPath&#125;&#125;&quot;</span> <span class="attr">mode</span>=<span class="string">&quot;aspectFit&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 25px; height: 25px;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">渲染数字徽标添加item.info即可</span><br><span class="line"><span class="tag">&lt;<span class="name">van-tabbar-item</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;list&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;index&quot;</span> <span class="attr">info</span>=<span class="string">&quot;&#123;&#123;item.info ? item.info : &#x27;&#x27;&#125;&#125;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>自定义组件样式覆盖</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">options</span>: &#123;</span><br><span class="line">  <span class="attr">styleIsolation</span>: <span class="string">&#x27;shared&#x27;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><strong>实现tabBar页面切换</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 组件的方法列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">  <span class="title function_">onChange</span>(<span class="params">event</span>) &#123;</span><br><span class="line">    <span class="comment">// event.detail 的值为当前选中项的索引</span></span><br><span class="line">    <span class="comment">// this.setData(&#123; active: event.detail &#125;)</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">updateActive</span>(event.<span class="property">detail</span>)</span><br><span class="line">    wx.<span class="title function_">switchTab</span>(&#123;  <span class="comment">// 切换页面</span></span><br><span class="line">      <span class="attr">url</span>: <span class="variable language_">this</span>.<span class="property">data</span>.<span class="property">list</span>[event.<span class="property">detail</span>].<span class="property">pagePath</span>,</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>active定义到全局数据（页面使用全局数据获取索引，每次修改的时候需要更新全局数据）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">updateActiveTabBarIndex</span>: <span class="title function_">action</span>(<span class="keyword">function</span>(<span class="params">index</span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">activeTabBarIndex</span> = index</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="8-20修改选中项文本"><a href="#8-20修改选中项文本" class="headerlink" title="8.20修改选中项文本"></a>8.20修改选中项文本</h2><img src="/2022/09/04/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/image-20220628131321634.png" class="" title="image-20220628131321634"><h1 id="九、项目问题"><a href="#九、项目问题" class="headerlink" title="九、项目问题"></a>九、项目问题</h1><p>1、对于自定义事件，子向父传参需要的需要使用$emit触发</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">gotoSearch</span>(<span class="params"></span>) &#123;</span><br><span class="line">  uni.<span class="title function_">navigateTo</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/subpkg/search/search&#x27;</span>   <span class="comment">// 导航到search页面</span></span><br><span class="line">  &#125;) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、搜索框的固定定位效果</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.<span class="property">search</span>-box &#123;</span><br><span class="line">  <span class="comment">// 设置定位效果为“吸顶”</span></span><br><span class="line">  <span class="attr">position</span>: sticky;</span><br><span class="line">  <span class="comment">// 吸顶的“位置”</span></span><br><span class="line">  <span class="attr">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// 提高层级，防止被轮播图覆盖</span></span><br><span class="line">  z-<span class="attr">index</span>: <span class="number">999</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、使用UI组件创建搜索组件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;search-box&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 使用 uni-ui 提供的搜索组件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">uni-search-bar</span> @<span class="attr">input</span>=<span class="string">&quot;input&quot;</span> <span class="attr">:radius</span>=<span class="string">&quot;100&quot;</span> <span class="attr">cancelButton</span>=<span class="string">&quot;none&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">uni-search-bar</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>搜索框防抖处理：防止重复发送请求，新增延时器</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">input</span>(<span class="params">e</span>) &#123;</span><br><span class="line">  <span class="comment">// 清除 timer 对应的延时器</span></span><br><span class="line">  <span class="built_in">clearTimeout</span>(<span class="variable language_">this</span>.<span class="property">timer</span>)</span><br><span class="line">  <span class="comment">// 重新启动一个延时器，并把 timerId 赋值给 this.timer</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">timer</span> = <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 如果 500 毫秒内，没有触发新的输入事件，则为搜索关键词赋值</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">kw</span> = e.<span class="property">value</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">kw</span>)</span><br><span class="line">  &#125;, <span class="number">500</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>文字超出三个点表示</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">.<span class="property">goods</span>-name &#123;</span><br><span class="line">     <span class="comment">// 文字不允许换行（单行文本）</span></span><br><span class="line">     white-<span class="attr">space</span>: nowrap;</span><br><span class="line">     <span class="comment">// 溢出部分隐藏</span></span><br><span class="line">     <span class="attr">overflow</span>: hidden;</span><br><span class="line">     <span class="comment">// 文本溢出后，使用 ... 代替</span></span><br><span class="line">     text-<span class="attr">overflow</span>: ellipsis;</span><br><span class="line">     margin-<span class="attr">right</span>: 3px;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>本地持久化存储</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用 uni.setStorageSync(key, value) 将搜索历史记录持久化存储到本地</span></span><br><span class="line">  uni.<span class="title function_">setStorageSync</span>(<span class="string">&#x27;kw&#x27;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="variable language_">this</span>.<span class="property">historyList</span>))</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">onLoad</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="comment">// 解析本地存储的JSON字符串</span></span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">historyList</span> = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(uni.<span class="title function_">getStorageSync</span>(<span class="string">&#x27;kw&#x27;</span>) || <span class="string">&#x27;[]&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>滑动删除</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- uni-swipe-action-item 可以为其子节点提供滑动操作的效果。需要通过 options 属性来指定操作按钮的配置信息 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uni-swipe-action-item</span> <span class="attr">:options</span>=<span class="string">&quot;options&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;swipeActionClickHandler(goods)&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">my-goods</span> <span class="attr">:goods</span>=<span class="string">&quot;goods&quot;</span> <span class="attr">:show-radio</span>=<span class="string">&quot;true&quot;</span> <span class="attr">:show-num</span>=<span class="string">&quot;true&quot;</span> @<span class="attr">radio-change</span>=<span class="string">&quot;radioChangeHandler&quot;</span> @<span class="attr">num-change</span>=<span class="string">&quot;numberChangeHandler&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">my-goods</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">uni-swipe-action-item</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端技术 </tag>
            
            <tag> 微信小程序 </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>移动端适配</title>
      <link href="/2022/09/04/%E7%A7%BB%E5%8A%A8%E7%AB%AF/"/>
      <url>/2022/09/04/%E7%A7%BB%E5%8A%A8%E7%AB%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、分辨率"><a href="#一、分辨率" class="headerlink" title="一、分辨率"></a>一、分辨率</h1><p>屏幕尺寸：设备对角线尺寸</p><p><strong>1920*1080：1920px * 1080px</strong></p><p><strong>参考逻辑分辨率</strong></p><img src="/2022/09/04/%E7%A7%BB%E5%8A%A8%E7%AB%AF/image-20220609111647039.png" class="" title="image-20220609111647039"><h1 id="二、视口"><a href="#二、视口" class="headerlink" title="二、视口"></a>二、视口</h1><p><strong>能够让网页的宽度等于设备的宽度</strong></p><p>没有视口标签html的宽度是980</p><p><strong>移动端网页必须使用视口标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="三、二倍图"><a href="#三、二倍图" class="headerlink" title="三、二倍图"></a>三、二倍图</h1><p>750像素宽的图，可以很好的适应逻辑分辨率</p><img src="/2022/09/04/%E7%A7%BB%E5%8A%A8%E7%AB%AF/image-20220609113245845.png" class="" title="image-20220609113245845"><p>需要修改像素大厨的像素图倍数关系</p><h1 id="四、百分比布局"><a href="#四、百分比布局" class="headerlink" title="四、百分比布局"></a>四、百分比布局</h1><p><strong>流式布局（宽度自适应，高度固定）</strong>古老布局</p><h1 id="五、Flex弹性布局"><a href="#五、Flex弹性布局" class="headerlink" title="五、Flex弹性布局"></a>五、Flex弹性布局</h1><p><strong>实现盒子的左右排列：优先使用flex布局</strong></p><p><strong>解决使用浮动布局带来的脱离标准流问题（子级设置浮动，父级没有高度的时候产生的脱离标准流问题）</strong></p><img src="/2022/09/04/%E7%A7%BB%E5%8A%A8%E7%AB%AF/image-20220609120146364.png" class="" title="image-20220609120146364"><p>兼容性网站</p><h2 id="5-1Flex组成"><a href="#5-1Flex组成" class="headerlink" title="5.1Flex组成"></a>5.1Flex组成</h2><p>1、在父元素添加 <code>display:flex</code>必须是父级不能是祖级</p><p>2、弹性容器：父级</p><p>3、弹性盒子：子级</p><p>4、水平方向：主轴</p><p>5、垂直方向：垂直</p><img src="/2022/09/04/%E7%A7%BB%E5%8A%A8%E7%AB%AF/image-20220609120416897.png" class="" title="image-20220609120416897"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 弹性容器：默认子级水平排列 */</span></span><br><span class="line"><span class="comment">/* 默认弹性盒子沿着主轴水平方向排列 */</span></span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 弹性盒子 */</span></span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-2主轴对齐方式"><a href="#5-2主轴对齐方式" class="headerlink" title="5.2主轴对齐方式"></a>5.2主轴对齐方式</h2><img src="/2022/09/04/%E7%A7%BB%E5%8A%A8%E7%AB%AF/image-20220609120725798.png" class="" title="image-20220609120725798"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="comment">/* 均匀排列 空白间距均分在盒子的两侧 */</span></span><br><span class="line">    <span class="comment">/* 间距加在一个弹性盒子的两侧 */</span></span><br><span class="line">    <span class="comment">/* 子级之间的间距是父级两头的间距的两倍 */</span></span><br><span class="line">    <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">    <span class="comment">/* 空白间距均分在盒子之间，之外无间距 */</span></span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">    <span class="comment">/* 所有地方间距都相等 */</span></span><br><span class="line">    <span class="attribute">justify-content</span>: space-evenly;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-3侧轴对齐方式"><a href="#5-3侧轴对齐方式" class="headerlink" title="5.3侧轴对齐方式"></a>5.3侧轴对齐方式</h2><img src="/2022/09/04/%E7%A7%BB%E5%8A%A8%E7%AB%AF/image-20220609121251734.png" class="" title="image-20220609121251734"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 沿着侧轴居中对齐 */</span></span><br><span class="line"><span class="attribute">align-items</span>: center;</span><br><span class="line"><span class="comment">/* 子级盒子没有高度的时候，会进行沿侧轴拉伸 */</span></span><br><span class="line"><span class="attribute">align-items</span>: stretch;</span><br></pre></td></tr></table></figure><h2 id="5-4单独控制盒子的侧轴对齐"><a href="#5-4单独控制盒子的侧轴对齐" class="headerlink" title="5.4单独控制盒子的侧轴对齐"></a>5.4单独控制盒子的侧轴对齐</h2><img src="/2022/09/04/%E7%A7%BB%E5%8A%A8%E7%AB%AF/image-20220609121714128.png" class="" title="image-20220609121714128"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="comment">/* 需要添加到子级元素 */</span></span><br><span class="line">    <span class="comment">/* 控制某一个盒子侧轴对齐方式 */</span></span><br><span class="line">    <span class="attribute">align-self</span>: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-5弹性盒子特点"><a href="#5-5弹性盒子特点" class="headerlink" title="5.5弹性盒子特点"></a>5.5弹性盒子特点</h2><p>1、当子级盒子没有高度的时候是父级的高度</p><p>2、修改了侧轴对齐就没有了skrech</p><p>3、子级没有宽度，就是根据内容宽度</p><h2 id="5-6弹性压缩比"><a href="#5-6弹性压缩比" class="headerlink" title="5.6弹性压缩比"></a>5.6弹性压缩比</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span><br><span class="line">    <span class="comment">/* 减去父级盒子里子级占有的尺寸 */</span></span><br><span class="line">    <span class="comment">/* 占用父级剩余尺寸的份数 */</span></span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.box</span> <span class="selector-tag">div</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>)&#123;</span><br><span class="line">    <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-7flex-direction"><a href="#5-7flex-direction" class="headerlink" title="5.7flex-direction"></a>5.7flex-direction</h2><p><img src="C:\Users\wwj\AppData\Roaming\Typora\typora-user-images\image-20220609170004913.png" alt="image-20220609170004913"></p><p><img src="C:\Users\wwj\AppData\Roaming\Typora\typora-user-images\image-20220609170049637.png" alt="image-20220609170049637"></p><p><strong>本质：将主轴方向修改为垂直</strong></p><h2 id="5-8修改主轴后的对齐问题"><a href="#5-8修改主轴后的对齐问题" class="headerlink" title="5.8修改主轴后的对齐问题"></a>5.8修改主轴后的对齐问题</h2><p><img src="C:\Users\wwj\AppData\Roaming\Typora\typora-user-images\image-20220609170346275.png" alt="image-20220609170346275"></p><h2 id="5-9flex-wrap"><a href="#5-9flex-wrap" class="headerlink" title="5.9flex-wrap"></a>5.9flex-wrap</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="comment">/* 子元素换行显示 */</span></span><br><span class="line">    <span class="comment">/* 行具有对齐方式就有间距 */</span></span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 垂直方法对齐方式 */</span></span><br><span class="line">    <span class="attribute">align-content</span>: center;</span><br><span class="line">    <span class="attribute">align-content</span>: space-around;</span><br><span class="line">    <span class="attribute">align-content</span>: space-between;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\wwj\AppData\Roaming\Typora\typora-user-images\image-20220609171442721.png" alt="image-20220609171442721"></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端技术 </tag>
            
            <tag> 响应式布局 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES6语法</title>
      <link href="/2022/09/04/ES6/"/>
      <url>/2022/09/04/ES6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>ES6新语法大大简化了JS代码开发繁琐，为了后面集成前端框架开发提供了很好的便捷。主要包含模板字符串、解构赋值、对象扩展等等。</p><h1 id="一、let和const"><a href="#一、let和const" class="headerlink" title="一、let和const"></a>一、let和const</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // var执行流程</span><br><span class="line">        var a;</span><br><span class="line">        console.log(a);  // undefined</span><br><span class="line">        // var a = 2;</span><br><span class="line">        a = 2;</span><br><span class="line"></span><br><span class="line">        // 没有变量提升</span><br><span class="line">        console.log(b);</span><br><span class="line">        let b = 10;</span><br><span class="line"></span><br><span class="line">        // var可以在上面打印出来</span><br><span class="line">        if (1 == 1)&#123;</span><br><span class="line">            let b = 10;  // 具有块级作用域</span><br><span class="line">            // 不能像var重复声明</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        const max = 30;  // 声明常量，声明之后无法修改</span><br><span class="line">        max = 40; // 不能修改，具有块级作用域，不能重复声明</span><br><span class="line"></span><br><span class="line">        const person = &#123;</span><br><span class="line">            name: &#x27;alex&#x27; // 只能修改对象中的属性，不能修改对象本身</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // let不会影响全局变量</span><br><span class="line">        // 默认情况下用const，只有在知道变量值要别修改的情况下用let</span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="二、模板字符串"><a href="#二、模板字符串" class="headerlink" title="二、模板字符串"></a>二、模板字符串</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;box&quot;&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        const oBox = document.querySelector(&#x27;.box&#x27;);</span><br><span class="line">        oBox.innerHTML = &#x27;下述问题&#x27;;</span><br><span class="line">        let name = &#x27;wwj&#x27;;</span><br><span class="line">        // 拼接字符串</span><br><span class="line">        // &lt;ul&gt;</span><br><span class="line">        //     &lt;li&gt;</span><br><span class="line">        //         &lt;p id=&quot;1&quot;&gt;123&lt;/p&gt;</span><br><span class="line">        //     &lt;/li&gt;</span><br><span class="line">        // &lt;/ul&gt;</span><br><span class="line">        //  模板字符串</span><br><span class="line">        // 需要使用tab上面的反引号</span><br><span class="line">        // 使用占位符解决数据问题，无需使用拼接字符串方式</span><br><span class="line">        oBox.innerHTML = `&lt;ul&gt;</span><br><span class="line">            &lt;li&gt;</span><br><span class="line">                &lt;p id=&quot;1&quot;&gt;$&#123;name&#125;&lt;/p&gt;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;`</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="三、函数"><a href="#三、函数" class="headerlink" title="三、函数"></a>三、函数</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 带参默认值函数 ES5</span><br><span class="line">        function add(a, b) &#123;</span><br><span class="line">            a = a || 10;  // 有值给a 没值给10</span><br><span class="line">            b = b || 20;</span><br><span class="line">            return a + b;</span><br><span class="line">        &#125;</span><br><span class="line">        // ES6</span><br><span class="line">        //  a b 到默认值写法</span><br><span class="line">        function add(a = 10, b = 20) &#123;</span><br><span class="line">            return a + b;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 默认表达式可以是一个函数</span><br><span class="line">        function add(a = 10, b = getVal(5)) &#123;</span><br><span class="line">            return a + b;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 剩余参数：除了obj的其他参数全都放入keys数组中</span><br><span class="line">        function pink(obj, ...keys) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        let book = &#123;</span><br><span class="line">            title: &#x27;123&#x27;,</span><br><span class="line">            year: &#x27;2020&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">        let bookData = pick(book, &#x27;title&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 扩展运算符：允许将一个数组分割并且各个项作为分离的参数传递给函数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 处理数组中的最大值</span><br><span class="line">        const arr = [10, 20, 30, 40, 50, 60, 70, 80, 90];</span><br><span class="line">        // 将数组拆分成各个参数</span><br><span class="line">        console.log(Math.max(...arr));</span><br><span class="line"></span><br><span class="line">        // 箭头函数 === function()&#123;&#125; ===== ()=&gt;</span><br><span class="line">        let add = (a, b) =&gt; &#123;</span><br><span class="line">            return a + b;</span><br><span class="line">        &#125;</span><br><span class="line">        let add2 = val =&gt; val;  // 传递val参数返回val</span><br><span class="line">        let add3 = (val1, val2) =&gt; (val1 + val2); // 返回是对象一定要使用括号</span><br><span class="line"></span><br><span class="line">        let fn = ()=&gt; &quot;hello&quot;;  // 无参</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // es5： 谁调用this就指向谁</span><br><span class="line">        let PageHandle = &#123;</span><br><span class="line">            id : 123,</span><br><span class="line">            init : function()&#123;</span><br><span class="line">                document.addEventListener(&#x27;click&#x27;,function(event)&#123;</span><br><span class="line">                    // 这边的this代表的是文档对象</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">            init2 : function()&#123;</span><br><span class="line">                document.addEventListener(&#x27;click&#x27;,(event)=&gt;&#123;</span><br><span class="line">                    // 箭头函数：没有作用域链，不存在this指向</span><br><span class="line">                    // 这边的this:通过查找作用域链获取</span><br><span class="line">                    // 这边所包的括号不是作用域链</span><br><span class="line">                    // 是init2的所包的括号，这个作用域指向的PageHandle对象</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        // 使用箭头函数，函数内部没有arguments</span><br><span class="line">        // 箭头不能使用new关键字实例化对象</span><br><span class="line">        </span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="四、解构赋值"><a href="#四、解构赋值" class="headerlink" title="四、解构赋值"></a>四、解构赋值</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 解构赋值</span><br><span class="line">        let node = &#123;</span><br><span class="line">            type : &#x27;iden&#x27;,</span><br><span class="line">            name : &#x27;foo&#x27;,</span><br><span class="line">        &#125;</span><br><span class="line">        // 数组和对象的赋值操作</span><br><span class="line">        // 可以忽略某些属性，</span><br><span class="line">        let &#123;type,name&#125; = node;</span><br><span class="line"></span><br><span class="line">        console.log(type,name);</span><br><span class="line"></span><br><span class="line">        // 数组解构</span><br><span class="line">        let arr = [1,3,4];</span><br><span class="line">        let [a,b,c] = arr;</span><br><span class="line">        let [d,e] = arr;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="五、对象扩展"><a href="#五、对象扩展" class="headerlink" title="五、对象扩展"></a>五、对象扩展</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 属性组合</span></span><br><span class="line"><span class="keyword">const</span> obj  = &#123;&#125;;</span><br><span class="line">obj.<span class="property">isShow</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">obj[name+<span class="string">&#x27;bc&#x27;</span>] = <span class="number">123</span>;  <span class="comment">// 属性是 abc  值为123</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对象的方法</span></span><br><span class="line"></span><br><span class="line">obj.<span class="title function_">assign</span>(traget,obj1,obj2);  <span class="comment">// 目标对象，合并对象1，合并对象2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="六、Symbol"><a href="#六、Symbol" class="headerlink" title="六、Symbol"></a>六、Symbol</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// symbol 表示独一无二的值</span></span><br><span class="line"><span class="comment">// 用来定义对象的私有变量</span></span><br><span class="line"><span class="comment">// symbol取值要用[变量名]</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="title class_">Symbol</span>(<span class="string">&#x27;name&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="七、Set、Map"><a href="#七、Set、Map" class="headerlink" title="七、Set、Map"></a>七、Set、Map</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// set：无重复值的有序列表</span></span><br><span class="line"><span class="keyword">let</span> set = <span class="keyword">new</span> <span class="title class_">Set</span>();</span><br><span class="line">set.<span class="title function_">add</span>(<span class="number">2</span>); <span class="comment">// 添加任意类型元素</span></span><br><span class="line">set.<span class="title function_">delete</span>(<span class="number">2</span>); <span class="comment">// 删除</span></span><br><span class="line">set.<span class="title function_">has</span>(<span class="number">2</span>);  <span class="comment">// 是否包含2</span></span><br><span class="line">set.<span class="property">size</span>;  <span class="comment">// 集合长度</span></span><br><span class="line">set.<span class="title function_">forEach</span>(<span class="function">(<span class="params">val,key</span>)=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">let</span> arr = [...set]; <span class="comment">// 集合转换成数组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// map</span></span><br><span class="line"><span class="keyword">let</span> map = <span class="keyword">new</span> <span class="title class_">Map</span>();</span><br><span class="line">map.<span class="title function_">set</span>(<span class="string">&#x27;key&#x27;</span>,<span class="string">&#x27;value&#x27;</span>);</span><br><span class="line">map.<span class="title function_">get</span>(<span class="string">&#x27;key&#x27;</span>);</span><br><span class="line">map.<span class="title function_">has</span>(<span class="string">&#x27;key&#x27;</span>);</span><br><span class="line">map.<span class="title function_">clear</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Map</span>([<span class="string">&#x27;a&#x27;</span>,<span class="number">1</span>],[<span class="string">&#x27;c&#x27;</span>,<span class="number">2</span>]) <span class="comment">// 设置两个键值对</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="八、数组"><a href="#八、数组" class="headerlink" title="八、数组"></a>八、数组</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        // 伪数组转换成数组</span><br><span class="line">        let arr = Array.from(arugments)  // 写入伪数组</span><br><span class="line">        // from的第二个参数是一个回调函数，对每个元素进行操作</span><br><span class="line"></span><br><span class="line">        console.log([...lis]); // 扩展运算符将伪数组抓换为数组</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        Array.of(1,2,3);  // 将任意数据类型转换成数组</span><br><span class="line"></span><br><span class="line">        // 找出第一个符合条件的数组成员</span><br><span class="line">        let num = [1,2,3,4,5,6].find((n)=&gt;&#123;</span><br><span class="line">            return n&lt;0;</span><br><span class="line">        &#125;)</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        for (let index of [&#x27;a&#x27;,&#x27;b&#x27;].keys())&#123;</span><br><span class="line">            // 输出的是数组的索引</span><br><span class="line">        &#125;</span><br><span class="line">        for (let ele of [&#x27;a&#x27;,&#x27;b&#x27;].values())&#123;</span><br><span class="line">            // 输出的是数组的值</span><br><span class="line">        &#125;</span><br><span class="line">        // 遍历器</span><br><span class="line">        for (ley [index,ele] of  [&#x27;a&#x27;,&#x27;b&#x27;].entries())&#123;</span><br><span class="line">            // 输出的是数组的索引和值</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        [1,2,3,4].includes(2); // 包含数组2吗？返回true</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="九、生成器"><a href="#九、生成器" class="headerlink" title="九、生成器"></a>九、生成器</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// iterator：接口、next方法获取迭代结果</span></span><br><span class="line"><span class="keyword">const</span> items = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>];</span><br><span class="line"><span class="comment">// 获取迭代器</span></span><br><span class="line"><span class="keyword">const</span> ite = items[<span class="title class_">Symbol</span>.<span class="property">iterator</span>]();</span><br><span class="line">ite.<span class="title function_">next</span>(); <span class="comment">// 遍历元素 value done：是否遍历结束</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成器 generator</span></span><br><span class="line"><span class="comment">// 只能在函数内部</span></span><br><span class="line"><span class="keyword">function</span>* <span class="title function_">func</span>(<span class="params">a</span>)&#123;</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> fn = <span class="title function_">func</span>(); <span class="comment">// 不会调用方法内的内容 需要通过</span></span><br><span class="line">fn.<span class="title function_">next</span>();  <span class="comment">// 2  运行到yield2  类似于断点</span></span><br><span class="line">fn.<span class="title function_">next</span>(<span class="number">20</span>); <span class="comment">// 给这个yield赋值，不是表达式的赋值</span></span><br><span class="line"><span class="comment">// 分段执行函数，yield是暂停执行 next是恢复执行</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="十、promise"><a href="#十、promise" class="headerlink" title="十、promise"></a>十、promise</h1><img src="/2022/09/04/ES6/image-20220620142650248.png" class="" title="image-20220620142650248"><img src="/2022/09/04/ES6/image-20220620143751949.png" class="" title="image-20220620143751949"><p><strong>捕获成功、捕获异常</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// pedning进行中 resolved成功 rejected失败</span></span><br><span class="line">   <span class="comment">// 状态改变不会再逆转</span></span><br><span class="line">   <span class="comment">// 保存着未来才会结束的事件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="keyword">let</span> pro = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolved,rejected</span>)&#123;</span><br><span class="line">       <span class="comment">// 执行异步操作</span></span><br><span class="line">       </span><br><span class="line">   &#125;)</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 返回的是执行异步操作结束后调用的结果</span></span><br><span class="line">   <span class="comment">// 第一个参数是resolve的回调函数，第二个参数是可选，是reject回调的函数</span></span><br><span class="line">   <span class="comment">// then返回的是一个新的promise实例，</span></span><br><span class="line">   pro.<span class="title function_">then</span>(<span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(val);</span><br><span class="line">   &#125;);</span><br><span class="line"></span><br><span class="line">   <span class="comment">// resolve 转换promise对象</span></span><br><span class="line">   <span class="keyword">let</span> p =<span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="string">&#x27;foo&#x27;</span>);</span><br><span class="line">   <span class="comment">// 等价于</span></span><br><span class="line">   <span class="keyword">let</span> p2 = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resover</span> =&gt;</span> <span class="title function_">resolve</span>(<span class="string">&#x27;foo&#x27;</span>));</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">   <span class="keyword">let</span> p4 = <span class="title class_">Promise</span>.<span class="title function_">all</span>([promise1,promise2]);</span><br><span class="line">   p4.<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">       <span class="comment">// 两个都成功</span></span><br><span class="line">   &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span>&#123;</span><br><span class="line">       <span class="comment">// 有一个失败则失败</span></span><br><span class="line">   &#125;)</span><br><span class="line"></span><br><span class="line">   <span class="comment">// race:异步请求设置超时时间</span></span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="十一、async"><a href="#十一、async" class="headerlink" title="十一、async"></a>十一、async</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使得异步操作更加方便</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">f</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> <span class="string">&#x27;hello&#x27;</span>; <span class="comment">// 等待行为：函数中有多个await then函数会等待所有await指令运行才去执行</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 返回promise对象</span></span><br><span class="line"><span class="title function_">f</span>().<span class="title function_">then</span>(<span class="function"><span class="params">v</span>=&gt;</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="十二、类"><a href="#十二、类" class="headerlink" title="十二、类"></a>十二、类</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name,age</span>)&#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">name</span> = name;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">age</span> = age;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">sayName</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p1 = <span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&#x27;12&#x27;</span>,<span class="number">12</span>);</span><br><span class="line">p1.<span class="title function_">sayName</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 继承</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Man</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Person</span>&#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">name,age</span>)&#123;</span><br><span class="line">        <span class="variable language_">super</span>(name,age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十三、模块"><a href="#十三、模块" class="headerlink" title="十三、模块"></a>十三、模块</h1><p>export：规定的对外接口开口</p><img src="/2022/09/04/ES6/image-20220620150943507.png" class="" title="image-20220620150943507"><img src="/2022/09/04/ES6/image-20220620150953191.png" class="" title="image-20220620150953191"><img src="/2022/09/04/ES6/image-20220620151124819.png" class="" title="image-20220620151124819"><img src="/2022/09/04/ES6/image-20220620151135049.png" class="" title="image-20220620151135049"><img src="/2022/09/04/ES6/image-20220620151157187.png" class="" title="image-20220620151157187">]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue2教程</title>
      <link href="/2022/09/03/Vue/"/>
      <url>/2022/09/03/Vue/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Vue 是一套用于构建用户界面的<strong>渐进式框架</strong>。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。</p><h1 id="一、Vue2"><a href="#一、Vue2" class="headerlink" title="一、Vue2"></a>一、Vue2</h1><h2 id="1-1-入门操作"><a href="#1-1-入门操作" class="headerlink" title="1.1    入门操作"></a>1.1    入门操作</h2><p><strong>引入Vue.js：</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 引入<span class="title class_">Vue</span> --&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>阻止生产警告提示：</strong> <code>Vue.config.productionTip = false</code></p><img src="/2022/09/03/Vue/image-20220621121042414.png" class="" title="image-20220621121042414"><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="1-2-创建"><a href="#1-2-创建" class="headerlink" title="1.2    创建"></a>1.2    创建</h2><p>1、必须创建Vue实例</p><p>2、root容器里面的代码被称为Vue模板（Vue模板寻找Vue语法进行替换）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 插值 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello,&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;  <span class="comment">// 阻止启动生产提示</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 创建Vue实例(配置对象)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,    <span class="comment">// 用于指定当前Vue实例为哪个元素服务，通常为CSS选择器字符串</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// el:document.getElementById(&#x27;root&#x27;)  方式二</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;  <span class="comment">// 用于存储数据，供el指定的容器使用</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>:<span class="string">&#x27;wwj&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>一对一：一个容器只能被一个Vue实例接管</strong></p><p><code>&#123;&#123;        &#125;&#125;</code>：插值</p><p>1、<strong>需要JS表达式，一个表达式可以生成一个值</strong></p><p>​    a、a+b、demo(1)、三元表达式、流程控制语句</p><p>2、data数据发生改变页面会自动更新省去dom操作</p><h2 id="1-2-模板语法"><a href="#1-2-模板语法" class="headerlink" title="1.2    模板语法"></a>1.2    模板语法</h2><p>data：可以设计多级结构，默认data是不被看见的，一般使用 <code>object.attribute</code>访问数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;!<span class="variable constant_">DOCTYPE</span> html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Document&lt;/title&gt;</span><br><span class="line">    &lt;!-- 引入Vue --&gt;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot; src=&quot;../js/vue.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;!-- 插值语法：用于解析标签体内容   &#123;&#123;&#125;&#125;--&gt;</span><br><span class="line">&lt;!-- 指令语法：用于解析标签  v-bind 或者 ：--&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;root&quot;&gt;</span><br><span class="line">        &lt;h1&gt;&#123;&#123;name&#125;&#125;&lt;/h1&gt;</span><br><span class="line"></span><br><span class="line">        &lt;h1&gt;指令语法&lt;/h1&gt;</span><br><span class="line">        &lt;!-- vue把两个引号之间的内容当成js表达式执行 --&gt;</span><br><span class="line">        &lt;!-- v-bind和属性进行绑定，引号内写入js表达式 --&gt;</span><br><span class="line">        &lt;a v-bind:href=&quot;url&quot;&gt;点击&lt;/a&gt;</span><br><span class="line">        &lt;!-- v-bind 简写 --&gt;</span><br><span class="line">        &lt;a :href=&quot;url&quot;&gt;点击2&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">         Vue.config.productionTip = false;  // 阻止启动生产提示</span><br><span class="line">         new Vue(&#123;</span><br><span class="line">            el:&#x27;#root&#x27;,    // 用于指定当前Vue实例为哪个元素服务，通常为CSS选择器字符串</span><br><span class="line">            // el:document.getElementById(&#x27;root&#x27;)  方式二</span><br><span class="line">            data:&#123;  // 用于存储数据，供el指定的容器使用</span><br><span class="line">                name:&#x27;wwj&#x27;,</span><br><span class="line">                url:&#x27;http://www.baidu.com&#x27;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="1-3-数据绑定"><a href="#1-3-数据绑定" class="headerlink" title="1.3    数据绑定"></a>1.3    数据绑定</h2><p><strong>v-model只能应用于表单元素</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-model:value 简写为 v-model默认收集value值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 数据只能从data流向页面 --&gt;</span></span><br><span class="line">       单向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-bind:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 数据可以从页面和data互相传递 --&gt;</span></span><br><span class="line">        双向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- 报错：v-model只能应用于表单元素 --&gt;</span></span><br><span class="line">       <span class="comment">&lt;!-- &lt;h2 v-model:x=&quot;bane&quot;&gt;hello&lt;/h2&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">         <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;  <span class="comment">// 阻止启动生产提示</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>:<span class="string">&#x27;wwj&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-4-data和el属性的两种写法"><a href="#1-4-data和el属性的两种写法" class="headerlink" title="1.4    data和el属性的两种写法"></a>1.4    data和el属性的两种写法</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-model:value 简写为 v-model默认收集value值 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">         <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;  <span class="comment">// 阻止启动生产提示</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> v = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// el:&#x27;#root&#x27;,</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//  data对象式写法</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>:<span class="string">&#x27;wwj&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// data函数式写法</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 不能写箭头函数this指向window出现问题</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;function&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 可以动态实行绑定（配合定时器等）</span></span></span><br><span class="line"><span class="language-javascript">        v.$mount(<span class="string">&#x27;#root&#x27;</span>);  <span class="comment">// 指定容器</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-5-MVVM模型"><a href="#1-5-MVVM模型" class="headerlink" title="1.5    MVVM模型"></a>1.5    MVVM模型</h2><p>vm： 常用于接收Vue实例，View-model</p><p>插值语法：<strong>所有Vue对象上的所有属性都可以直接使用，不局限于表达式和data里的属性</strong></p><p>$符号：表示用户可使用，代表Vue无需vm.调用    $emit调用即可</p><img src="/2022/09/03/Vue/image-20220621145557997.png" class="" title="image-20220621145557997"><img src="/2022/09/03/Vue/image-20220621145806553.png" class="" title="image-20220621145806553"><h2 id="1-6-数据代理"><a href="#1-6-数据代理" class="headerlink" title="1.6    数据代理"></a>1.6    数据代理</h2><p><strong>底层原理</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">     <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> number  = <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">let</span> person = &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>: <span class="string">&#x27;wwj&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(person,<span class="string">&#x27;age&#x27;</span>,&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">value</span>:<span class="number">18</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">enumerable</span>:<span class="literal">true</span>, <span class="comment">// 控制属性是否可以枚举是否可以参与遍历</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">writeable</span>:<span class="literal">true</span>,  <span class="comment">// 是否可以修改</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">configurable</span>:<span class="literal">true</span>, <span class="comment">// 是否可以被删除</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// getter</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 当有人读取person的age属性函数会被调用</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 每次读取该属性都会出发该方法返回属性值</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">get</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> number;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 修改</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">set</span>:<span class="keyword">function</span>(<span class="params">value</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 每次修改都会执行该函数</span></span></span><br><span class="line"><span class="language-javascript">                number = value;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2022/09/03/Vue/image-20220621153638484.png" class="" title="image-20220621153638484"><p>1、通过vm对象代理data对象中的属性进行读写操作</p><p>2、为每个添加到vm上的属性的指定get和set</p><p>3、真实数据模型是 <code>vm._data</code></p><p>4、代理数据：<code>属性</code>在vm上的属性</p><h2 id="1-7-事件处理"><a href="#1-7-事件处理" class="headerlink" title="1.7    事件处理"></a>1.7    事件处理</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>welcome &#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 绑定点击事件 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- v-on:click --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span> = <span class="string">&quot;showInfo1&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 简写 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 传参形式 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用 $event 占位符传递事件对象 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span> = <span class="string">&quot;showInfo2(66,$event)&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>:<span class="string">&#x27;wwj&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// this是vm所调用的</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">showInfo1</span>(<span class="params">event</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(<span class="string">&#x27;hello&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 接收事件对象</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">showInfo2</span>(<span class="params">number,event</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(number);</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(event);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-8-事件修饰符"><a href="#1-8-事件修饰符" class="headerlink" title="1.8    事件修饰符"></a>1.8    事件修饰符</h2><p><strong>可以使用链式编程的方式： <code>@click.prevent.stop = &quot;showInfo&quot;</code></strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 事件修饰符 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 该方式阻止a标签的默认行为 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http://www.baidu.com&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;showInfo()&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 阻止事件冒泡 --&gt;</span></span><br><span class="line">        @click.stop=&quot;showInfo()&quot;</span><br><span class="line">        <span class="comment">&lt;!--事件只从触发一次 --&gt;</span></span><br><span class="line">        @click.once=&quot;showInfo()&quot;</span><br><span class="line">        <span class="comment">&lt;!-- 设置事件处理捕获方式 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 正常来说冒泡阶段处理事件 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置捕获阶段处理事件（元素嵌套） --&gt;</span></span><br><span class="line">        @click.capture=&quot;showInfo()&quot;</span><br><span class="line">        <span class="comment">&lt;!-- 被self修饰需要保证点击目标元素是该元素才会执行 --&gt;</span></span><br><span class="line">        @click.self=&quot;showInfo()&quot;</span><br><span class="line">        <span class="comment">&lt;!-- 事件流程：滚动--触发函数--执行默认行为 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- passive:事件默认行为立即执行不按照事件流程走 --&gt;</span></span><br><span class="line">        @click.passive=&quot;showInfo()&quot;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>:<span class="string">&#x27;wwj&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">showInfo</span>(<span class="params">event</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">alert</span>(<span class="string">&#x27;wwj&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-9-事件别名"><a href="#1-9-事件别名" class="headerlink" title="1.9    事件别名"></a>1.9    事件别名</h2><p>**链式编程： <code>@ketup.ctrl.y</code>**：按下 ctrl+y 才会执行</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- tab：使用keydown解决因为浏览器本身就有失去焦点功能 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ctrl、alt、shift、meta（win）系统修饰键使用keydown解决 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 别名：键盘按的是enter是执行事件函数 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">            delete</span></span><br><span class="line"><span class="comment">            esc</span></span><br><span class="line"><span class="comment">            space</span></span><br><span class="line"><span class="comment">            tab</span></span><br><span class="line"><span class="comment">            up</span></span><br><span class="line"><span class="comment">            down</span></span><br><span class="line"><span class="comment">            left</span></span><br><span class="line"><span class="comment">            right</span></span><br><span class="line"><span class="comment">        --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;tets&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 对于两个单词组成需要变成小写单词之间组成‘-’ --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;tets&quot;</span> @<span class="attr">keyup.caps-lock</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 定义一个具有回车的别名 ACII码为13</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">keyCodes</span>.<span class="property">huiche</span> = <span class="number">13</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            el : <span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">showInfo</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    e.<span class="property">key</span> <span class="comment">// 获取键的名称</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;success&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-10-计算属性"><a href="#1-10-计算属性" class="headerlink" title="1.10    计算属性"></a>1.10    计算属性</h2><p><strong>只要遇到插值写函数调用，数据更新会自动执行方法</strong></p><p>1、具有缓存功能</p><p>2、vm有data、方法，但是计算属性是得将get或者set返回值拿到vm上</p><p>3、<strong>get、set里面的this已经修改为指向为vm</strong></p><p>4、<strong>必须通过已经有data里的属性得来</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// data的内容都是属性</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">firstName</span>:<span class="string">&#x27;w&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">lastName</span>:<span class="string">&#x27;wj&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 计算属性</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">fullName</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 有人读取fullName时，get就会被调用返回值作为fullName值</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// get重新调用时机：初次读取fullName时、所依赖的数据发生变化的时候</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 切勿使用箭头函数</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">get</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">// Vue已经将this的指向调整到vm对象方便调用数据</span></span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span>+ <span class="variable language_">this</span>.<span class="property">lastName</span>;  <span class="comment">// 直接放到了Vue对象上</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 当fullName被修改的时候调用</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">this</span>.<span class="property">firstName</span> = value.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)[<span class="number">0</span>];</span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">this</span>.<span class="property">lastName</span> = value.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)[<span class="number">1</span>];</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>简写形式</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只读不修改可以使用简写形式</span></span><br><span class="line">              <span class="comment">// 当getter使用</span></span><br><span class="line">              <span class="attr">fullName</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">              &#125;</span><br></pre></td></tr></table></figure><h2 id="1-11-监视属性"><a href="#1-11-监视属性" class="headerlink" title="1.11    监视属性"></a>1.11    监视属性</h2><p><strong>绑定事件可以写一些简单的语句</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气  &#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeWeather&quot;</span>&gt;</span>切换<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">isHot</span>:<span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// this指向vm</span></span></span><br><span class="line"><span class="language-javascript">               <span class="title function_">changeWeather</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">isHot</span> = !<span class="variable language_">this</span>.<span class="property">isHot</span>;</span></span><br><span class="line"><span class="language-javascript">               &#125; </span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 简写</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">info</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">isHot</span> ? <span class="string">&#x27;hot&#x27;</span> : <span class="string">&#x27;cool&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 属性监视（可以监视data属性和计算属性）</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">watch</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">immediate</span>:<span class="literal">true</span>,   <span class="comment">// 初始化调用handler</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 当isHot属性发生改变的时候调用</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">isHot</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 新值、旧值</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">handler</span>(<span class="params">newValue,oldValue</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">console</span>.<span class="title function_">log</span>(newValue,oldValue);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 写法2</span></span></span><br><span class="line"><span class="language-javascript">        vm.$watch(<span class="string">&#x27;isHot&#x27;</span>,&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 配置对象</span></span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-12-深度监视"><a href="#1-12-深度监视" class="headerlink" title="1.12    深度监视"></a>1.12    深度监视</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 检测对象其实是检测对象的地址值</span></span><br><span class="line"><span class="comment">//  默认不检测对象内部值的改变</span></span><br><span class="line"><span class="comment">// 监视多级结构中的对象内的数据的变化</span></span><br><span class="line"><span class="attr">numbers</span>:&#123;</span><br><span class="line">    <span class="attr">deep</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="title function_">handler</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;开启深度监视&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>简写</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">        <span class="comment">// 深度监视简写</span></span><br><span class="line">        <span class="comment">// 配置项只有handler才可以使用简写形式</span></span><br><span class="line">        <span class="title function_">isHot</span>(<span class="params">newValue,oldValue</span>)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     vm.$watch(<span class="string">&#x27;siHot&#x27;</span>,<span class="keyword">function</span>(<span class="params">newValue,oldValue</span>)&#123;</span><br><span class="line">    <span class="comment">// 相当于handler函数</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="1-13-watch和computed对比"><a href="#1-13-watch和computed对比" class="headerlink" title="1.13    watch和computed对比"></a>1.13    watch和computed对比</h2><p>1、computed完成的watch也能完成</p><p>2、watch支持异步操作</p><p>3、被Vue管理的函数最好是普通函数</p><p>4、<strong>不被Vue所管理的函数比如定时器函数、ajax函数最好写成箭头函数</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">isHot</span>(<span class="params">newValue,oldValue</span>)&#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;success&#x27;</span>);</span><br><span class="line">        <span class="variable language_">this</span>???</span><br><span class="line">    &#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>此处一定要使用箭头函数，使用普通函数的话是浏览器引擎调用的此时的this指向的是浏览器window，在定时器的函数内向调用Vue所管理的属性会不生效</strong></p><p><strong>使用箭头函数：因为没有this会往上找作用域，找到上面一级的this，此时的this指向的就是Vue</strong></p><h2 id="1-14-绑定class样式"><a href="#1-14-绑定class样式" class="headerlink" title="1.14    绑定class样式"></a>1.14    绑定class样式</h2><p><strong>使用data内的属性名绑定</strong></p><p><strong>使用样式数组绑定</strong></p><p><strong>使用对象绑定</strong></p><p><strong>:class表示的是动态指定的样式，一般基本样式不写在这里</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 适用于样式的类名不确定，需要动态指定 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 此时的mode无样式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;mode&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeMode&quot;</span>&gt;</span></span><br><span class="line">            &#123;&#123;name&#125;&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 适用于要绑定的样式个数不确定名字也不确定 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;arr&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 对象绑定 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classObj&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">         const vm = new Vue(&#123;</span><br><span class="line">            el: &quot;#root&quot;,</span><br><span class="line">            data: &#123;</span><br><span class="line">                name:&#x27;wwj&#x27;,</span><br><span class="line">                // style类名属性写法</span><br><span class="line">                mode:&#x27;active&#x27;,</span><br><span class="line">                // 样式数组</span><br><span class="line">                arr:[&#x27;active&#x27;,&#x27;normal&#x27;],</span><br><span class="line">                // 对象形式</span><br><span class="line">                classObj:&#123;</span><br><span class="line">                    // true代表生效</span><br><span class="line">                    active:true,</span><br><span class="line">                    normal:false</span><br><span class="line">                &#125;,</span><br><span class="line">                 methods: &#123;</span><br><span class="line">                changeMode()&#123;</span><br><span class="line">                    console.log(&#x27;click&#x27;);</span><br><span class="line">                    this.mode = &#x27;normal&#x27;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br></pre></td></tr></table></figure><h2 id="1-15-绑定style样式"><a href="#1-15-绑定style样式" class="headerlink" title="1.15    绑定style样式"></a>1.15    绑定style样式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- style样式绑定 --&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleObj&quot;</span>&gt;</span>123<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       // style对象形式，对象里写样式</span><br><span class="line">               styleObj:&#123;</span><br><span class="line">                   fontSize:&#x27;40px&#x27;</span><br><span class="line">               &#125;</span><br><span class="line">               // 也可以使用对象数组方式写style</span><br></pre></td></tr></table></figure><h2 id="1-16-条件渲染"><a href="#1-16-条件渲染" class="headerlink" title="1.16    条件渲染"></a>1.16    条件渲染</h2><p>1、频率高的用v-show，频率低的用v-if</p><p>2、v-if结构会消失，v-show不会</p><p>3、if-elseif中间结构不能被打断</p><p>4、<strong>v-if会使得选择器获取不到</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-id">#root</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: pink;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;show&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用变量存储 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-show</span>=<span class="string">&quot;a&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用布尔值判断是否显示，结构不会消失 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-show</span>=<span class="string">&quot;true&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用表达式判断 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-show</span>=<span class="string">&quot;1 === 1&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 结构会发生改变 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 多选一类似于if else语句 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- else不需判断条件 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 只能配合v-if使用页面渲染的时候会消除template结构 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;1===1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h2</span>&gt;</span>1<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">name</span>: <span class="string">&#x27;wwj&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">a</span>: <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">show</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;clickx&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">a</span> = <span class="literal">true</span>;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-17-列表渲染"><a href="#1-17-列表渲染" class="headerlink" title="1.17    列表渲染"></a>1.17    列表渲染</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- key：动态绑定数据的主键 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;p in persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 写法2 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;p of persons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- p:是每个对象 index：每个的索引值  --&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- &lt;li v-for=&quot;(p,index) in persons&quot; :key=&quot;p.id&quot;&gt;&lt;/li&gt; --&gt;</span></span><br><span class="line">                &#123;&#123;p.name&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 遍历对象 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 第一个是对象值，第二个是对象的属性 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(value,key) of car&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 遍历字符串 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 第一个是字母第二个是索引值 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(char,index) of string&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--遍历指定次数 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 第一个是数，第二个是索引 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(number,index) of 5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 数组里存放每个对象</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">persons</span>: [</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">id</span>: <span class="string">&#x27;001&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;wwj&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">id</span>: <span class="string">&#x27;002&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;zhangsan&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                ],</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">car</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;byd&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">price</span>: <span class="number">123</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">string</span>:<span class="string">&#x27;123&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>key作用：</strong>index作为key对于打乱顺序会出现虚拟DOM对比出现数据错乱放，没有写key自动作为index作为key值</p><img src="/2022/09/03/Vue/image-20220622111941156.png" class="" title="image-20220622111941156"><img src="/2022/09/03/Vue/image-20220622112239505.png" class="" title="image-20220622112239505"><p>对比算法：结构内容对比相同的直接使用旧的真实DOM，不相同使用当前虚拟DOM转换成真实DOM（根据key值对比新旧数据）</p><p><strong>最好选择数据唯一表示作为key</strong></p><h2 id="1-18-列表过滤（百度搜索功能）"><a href="#1-18-列表过滤（百度搜索功能）" class="headerlink" title="1.18    列表过滤（百度搜索功能）"></a>1.18    列表过滤（百度搜索功能）</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) of filPersons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line">                &#123;&#123;p.name&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">keyWord</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">persons</span>: [</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">id</span>: <span class="string">&#x27;001&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;wwj&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">id</span>: <span class="string">&#x27;002&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;zhangsan&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">id</span>: <span class="string">&#x27;003&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;zhangsi&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">id</span>: <span class="string">&#x27;004&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;zhangwwj&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                ],</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 存放的是搜索出来的值</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">filPersons</span>:[]</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">watch</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">keyWord</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 首次立即执行一次</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">immediate</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">handler</span>(<span class="params">val</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">// 使用过滤器循环遍历</span></span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">// 如果有包含关键字返回非-1值</span></span></span><br><span class="line"><span class="language-javascript">                        <span class="variable language_">this</span>.<span class="property">filPersons</span> = <span class="variable language_">this</span>.<span class="property">persons</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="keyword">return</span> p.<span class="property">name</span>.<span class="title function_">indexOf</span>(val) !== -<span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">                        &#125;)</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-19-列表排序"><a href="#1-19-列表排序" class="headerlink" title="1.19    列表排序"></a>1.19    列表排序</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;keyWord&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 0&quot;</span>&gt;</span>原序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 1&quot;</span>&gt;</span>升序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sortType = 2&quot;</span>&gt;</span>降序<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(p,index) of filPersons&quot;</span> <span class="attr">:key</span>=<span class="string">&quot;p.id&quot;</span>&gt;</span></span><br><span class="line">                &#123;&#123;p.name&#125;&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">keyWord</span>:<span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">sortType</span>:<span class="number">0</span> ,  <span class="comment">// 0 原顺序 1 升序 2 降序</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">persons</span>: [</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">id</span>: <span class="string">&#x27;001&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;wwj&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">id</span>: <span class="string">&#x27;002&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;zhangsan&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">id</span>: <span class="string">&#x27;003&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;zhangsi&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                    &#123; <span class="attr">id</span>: <span class="string">&#x27;004&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;zhangwwj&#x27;</span> &#125;,</span></span><br><span class="line"><span class="language-javascript">                ],</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 存放的是搜索出来的值</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// filPersons:[]</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">filPersons</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 使用计算属性过滤</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> arr = <span class="variable language_">this</span>.<span class="property">persons</span>.<span class="title function_">filter</span>(<span class="function">(<span class="params">p</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">return</span> p.<span class="property">name</span>.<span class="title function_">indexOf</span>(<span class="variable language_">this</span>.<span class="property">keyWord</span>) !== -<span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;);</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 使用sort进行升序降序排列</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">sortType</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        arr.<span class="title function_">sort</span>(<span class="function">(<span class="params">p1,p2</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">sortType</span> === <span class="number">1</span>? p2.<span class="property">id</span>-p1.<span class="property">id</span> : p1.<span class="property">id</span> - p2.<span class="property">id</span>;</span></span><br><span class="line"><span class="language-javascript">                        &#125;)</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> arr;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-20-监测数据原理"><a href="#1-20-监测数据原理" class="headerlink" title="1.20    监测数据原理"></a>1.20    监测数据原理</h2><img src="/2022/09/03/Vue/image-20220622141437155.png" class="" title="image-20220622141437155"><img src="/2022/09/03/Vue/image-20220622141647873.png" class="" title="image-20220622141647873"><p><strong>Vue监视数据原理：</strong>Vue会监视data中所有层次的数据</p><p>Vue检测对象数据改变：<strong>利用递归的形式</strong>，给一个对象内所有属性加上getter和setter方法，利用setter方法检测数据的改变。</p><p><strong>必须要在new Vue时候就传入要监测的数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">适用于对象属性和数组元素的后追加</span><br><span class="line">Vue.set(traget,propertyName/index,value)</span><br><span class="line">vm.$set(target.propertyName/index,value)</span><br></pre></td></tr></table></figure><p><strong>Vue监视数组元素：</strong>调用原生对应的api对数组进行更新，重新解析模板渲染页面</p><p><strong>修改数组的方式</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">push</span>() <span class="title function_">shift</span>() <span class="title function_">unshift</span>() <span class="title function_">splice</span>() <span class="title function_">sort</span>() <span class="title function_">reverse</span>() 操作数组<span class="title class_">Vue</span>会进行对数据的getter setter操作</span><br><span class="line">或者使用</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">set</span>()</span><br><span class="line">vm.$set()</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只能给data里面的某一个对象作为追加</span></span><br><span class="line">        <span class="comment">// 不能追加在data的根对象</span></span><br><span class="line">        <span class="comment">// 后添加的数据具有响应式功能（getter、setter）</span></span><br><span class="line">        vm.$set(vm.<span class="property">_data</span>.<span class="property">student</span>, <span class="string">&#x27;sex&#x27;</span>, <span class="string">&#x27;man&#x27;</span>);</span><br><span class="line">        vm.$set(vm.<span class="property">student</span>, <span class="string">&#x27;sex&#x27;</span>, <span class="string">&#x27;man&#x27;</span>);</span><br><span class="line">        <span class="comment">// 不会对数组里面的值匹配getter、setter</span></span><br></pre></td></tr></table></figure><p><strong>数据劫持：一个数据被改成了getter和setter方式，正常修改数据并且能够正常解析模板</strong></p><h2 id="1-21-表单数据收集"><a href="#1-21-表单数据收集" class="headerlink" title="1.21    表单数据收集"></a>1.21    表单数据收集</h2><p><strong>文本框：</strong>v-model收集的是value的值，用户输入的就是value值</p><p><strong>单选框：</strong>v-model收集的是value值，需要给标签配置value值</p><p><strong>多选框：</strong>没有配置value值收集的是checked的布尔值，配置了value值，以数组形式接收就是收集的value数据，非数组则收集的布尔值checked</p><p> <em><!-- v-model.number 控制输入的是数字类型 --></em></p><p>  <em><!-- v-model.lazy 失去焦点的时候收集--></em></p><p>  <em><!-- v-model.trim 首尾空格过滤 --></em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-model.number 控制输入的是数字类型 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-model.lazy 失去焦点的时候收集--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-model.trim 首尾空格过滤 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> @<span class="attr">submit.prevent</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">            账号: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.account&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            密码: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            性别：男<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;man&quot;</span>&gt;</span></span><br><span class="line">            女<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.sex&quot;</span> <span class="attr">value</span>=<span class="string">&quot;woman&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            爱好:</span><br><span class="line">            学习<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;study&quot;</span>&gt;</span></span><br><span class="line">            打游戏<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;game&quot;</span>&gt;</span></span><br><span class="line">            吃饭<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.hobby&quot;</span> <span class="attr">value</span>=<span class="string">&quot;eat&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.city&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>校区<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shanghai&quot;</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;beijing&quot;</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;shenzhen&quot;</span>&gt;</span>深圳<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            其他信息：</span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">v-model</span>=<span class="string">&quot;userInfo.other&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;http:www.baidu.com&quot;</span>&gt;</span>协议<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;&quot;</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">userInfo</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">account</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">password</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">sex</span>: <span class="string">&#x27;female&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 多组多选框需要以数组形式</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">hobby</span>: [],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">city</span>: <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">other</span>: <span class="string">&#x27;&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">demo</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(<span class="variable language_">this</span>.<span class="property">userInfo</span>));</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-22-过滤器"><a href="#1-22-过滤器" class="headerlink" title="1.22    过滤器"></a>1.22    过滤器</h2><p>过滤器接收格外参数L：第一个参数是前面的值，第二个参数就是过滤器括号写的参数</p><p><strong>过滤器不改变原来的数据</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/dayjs/1.11.3/dayjs.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;fmtTime&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 过滤器实现 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;time | timeFormater&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 过滤器传参 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;time | timeFormater(secondPara)&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- 过滤器链 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span>&gt;</span>&#123;&#123;time | filter1 | filter2&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">&lt;!-- v-bind --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">h2</span> <span class="attr">:x</span>=<span class="string">&quot;msg | filter&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 全局过滤器</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="title function_">filter</span>(<span class="string">&#x27;name&#x27;</span>,<span class="keyword">function</span>(<span class="params">value</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">time</span>:<span class="number">1621561377603</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 要读的时候执行函数</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">fmtTime</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="title function_">dayjs</span>(<span class="variable language_">this</span>.<span class="property">time</span>).<span class="title function_">format</span>(<span class="string">&#x27;YYYY-MM-DD-HH:mm:ss&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 过滤器可以当成一个函数</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">filters</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">timeFormater</span>(<span class="params">value</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="title function_">dayjs</span>(value).<span class="title function_">format</span>(<span class="string">&#x27;YYYY-MM-DD-HH:mm:ss&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-23-v-text"><a href="#1-23-v-text" class="headerlink" title="1.23    v-text"></a>1.23    v-text</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- v-text会替换到节点中的内容 --&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-text</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="1-24-v-html"><a href="#1-24-v-html" class="headerlink" title="1.24    v-html"></a>1.24    v-html</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 具有标签结构 --&gt;</span><br><span class="line">    &lt;!-- 存在安全问题，<span class="title class_">Cookie</span>盗走问题 --&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-html</span>=<span class="string">&quot;str&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="1-25-v-cloak"><a href="#1-25-v-cloak" class="headerlink" title="1.25    v-cloak"></a>1.25    v-cloak</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 没有值<span class="title class_">Vue</span>实例出样件完毕并接管容器会自己删除v-cloak属性 --&gt;</span><br><span class="line">      &lt;!-- 解决网速过慢展示出&#123;&#123;name&#125;&#125;未解析模板 --&gt;</span><br><span class="line">      <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-cloak</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="1-26-v-once"><a href="#1-26-v-once" class="headerlink" title="1.26    v-once"></a>1.26    v-once</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- v-once对于初次动态渲染的时候就已经视为静态资源 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-once</span>&gt;</span>&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">h2</span>&gt;</span> &#123;&#123;n++&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="1-27-v-pre"><a href="#1-27-v-pre" class="headerlink" title="1.27    v-pre"></a>1.27    v-pre</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 跳过所在节点的编译过程，直接呈现页面不受<span class="title class_">Vue</span>解析 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-pre</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>利用跳过，加快编译</strong></p><h2 id="1-28-自定义指令"><a href="#1-28-自定义指令" class="headerlink" title="1.28    自定义指令"></a>1.28    自定义指令</h2><p>1、全局指令、局部指令</p><p>2、细化写法三个函数</p><p>3、多个单词使用kebab-case</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;n&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-big</span>=<span class="string">&quot;n&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点击<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-fbind</span>=<span class="string">&quot;n&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 全局指令</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="title function_">directive</span>(<span class="string">&#x27;fbind&#x27;</span>,&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 内容（三个函数）</span></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">data</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">n</span>: <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">directives</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 指定与元素成功绑定时会被调用</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 指令所在的模板被重新解析的时候会被调用</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 真实dom、元素值</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 该函数只是写bind和update函数</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">big</span>(<span class="params">element, binding</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                    element.<span class="property">innerText</span> = binding.<span class="property">value</span> * <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 写到页面需要加v</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">fbind</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 成功绑定</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">bind</span>(<span class="params">element,binding</span>) &#123; </span></span><br><span class="line"><span class="language-javascript">                        element.<span class="property">value</span> = binding.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 插入页面时调用</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">inserted</span>(<span class="params">element,binding</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        element.<span class="title function_">focus</span>();</span></span><br><span class="line"><span class="language-javascript">                     &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// 指令所在模板被重新解析时</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="title function_">update</span>(<span class="params">element,binding</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                        element.<span class="property">value</span> = binding.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                        element.<span class="title function_">focus</span>();</span></span><br><span class="line"><span class="language-javascript">                     &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-29-生命周期（初始化、挂载流程）"><a href="#1-29-生命周期（初始化、挂载流程）" class="headerlink" title="1.29    生命周期（初始化、挂载流程）"></a>1.29    生命周期（初始化、挂载流程）</h2><p>生命周期回调函数：生命周期钩子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">            <span class="attr">el</span>: <span class="string">&quot;#root&quot;</span>,</span><br><span class="line">            <span class="attr">data</span>: &#123;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">methods</span>: &#123;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">// 生命周期函数</span></span><br><span class="line">            <span class="comment">// mounted挂载：第一次把dom元素放入页面中</span></span><br><span class="line">            <span class="comment">// Vue完成的模板解析把真实初始dom元素放入页面后调用mountded</span></span><br><span class="line">            <span class="title function_">mounted</span>(<span class="params"></span>) &#123;</span><br><span class="line"></span><br><span class="line">            &#125;,</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>1、初始化生命周期、事件、但数据代理还未开始</p><p>2、beforeCreate：此时无法访问_data数据，数据代理尚未开始</p><p>3、初始化：数据监测、数据代理</p><p>4、created：可以通过vm访问data中的数据和methods中的方法</p><p>5、编译el的整个包括外部标签html作为模板（页面还不能显示解析好的内容）</p><p>分支：没有el当vm.$mount(el)才会执行</p><p>分支：template：使用该属性单当做模板，但只能有一个根元素</p><p>6、beforeMount：未经Vue编译的真实DOM结构，最终修改的DOM不奏效</p><p>7、虚拟DOM转成真实DOM，$el存入副本</p><p>8、<strong>mounted：经过Vue编译的DOM结构，初始化过程结束</strong></p><h2 id="1-30-更新流程"><a href="#1-30-更新流程" class="headerlink" title="1.30    更新流程"></a>1.30    更新流程</h2><p>1、beforeUpdate：数据是新的，页面是旧的，<strong>页面尚未和数据保持同步</strong></p><p>2、生成新的DOM随后与旧的DOM进行比较</p><p>3、updated：数据、页面保持同步</p><h2 id="1-31-销毁流程"><a href="#1-31-销毁流程" class="headerlink" title="1.31    销毁流程"></a>1.31    销毁流程</h2><p>1、vm.$destroy():销毁vm</p><p>2、 beforeDestory: VM所有功能处于可用状态（<strong>对数据操作不会触发更新</strong>）</p><p>3、destroyed：移除所有（只会剩下原生事件的回调）<strong>对数据操作不会触发更新</strong></p><img src="/2022/09/03/Vue/image-20220622190512406.png" class="" title="image-20220622190512406"><h2 id="1-32-组件化编程"><a href="#1-32-组件化编程" class="headerlink" title="1.32    组件化编程"></a>1.32    组件化编程</h2><p>组件：实现局部功能效果HTML、CSS、JS功能集合</p><p>非单文件组件：一个文件包含n个组件</p><p>单文件组件：一个文件中只包含一个组件</p><h2 id="1-33-组件使用"><a href="#1-33-组件使用" class="headerlink" title="1.33    组件使用"></a>1.33    组件使用</h2><p>1、定义组件</p><p>2、注册组件</p><p>3、使用组件标签</p><p><strong>data使用函数式写法，避免组件复用的时候数据存在引用关系</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 编写组件标签 --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 实现组件复用 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">school</span>&gt;</span><span class="tag">&lt;/<span class="name">school</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">student</span>&gt;</span><span class="tag">&lt;/<span class="name">student</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 全局注册：对于两个div要用组件的时候</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&#x27;组件名&#x27;</span>,需要注册组件名);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 创建组件</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> school = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 配置组件结构</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">template</span>:<span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;h2&gt;&#123;&#123;schoolName&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            `</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 没有el配置项所有组件被vm管理</span></span></span><br><span class="line"><span class="language-javascript">             <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 返回的是数据</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">schoolName</span>: <span class="string">&#x27;school&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">             &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> student = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">template</span>:<span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;h2&gt;&#123;&#123;studentName&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            `</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 没有el配置项所有组件被vm管理</span></span></span><br><span class="line"><span class="language-javascript">             <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">studentName</span>: <span class="string">&#x27;wwj&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">             &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 注册组件(局部注册)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// key 真实组件标签值 value需要注册组件值</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">school</span>:school,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">student</span>:student</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>注意事项</strong></p><p>1、组件名一个单词全部小写，多个单词全部小写或者用引号包起来中间用短横连接或者使用大驼峰命名（需要通过脚手架）</p><p>2、回避HTML已有元素同名</p><p>3、组件内定义 name：’name‘  指定组件在开发者工具呈现的名字</p><p>4、存在简写，对象</p><h2 id="1-34-组件嵌套"><a href="#1-34-组件嵌套" class="headerlink" title="1.34    组件嵌套"></a>1.34    组件嵌套</h2><p> <strong>app是管理组件的中心</strong></p><p><strong>嵌套组件需要放在上面 定义</strong></p><p><strong>嵌套组件的组件需要定义模板和组件</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 编写组件标签 --&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 实现组件复用 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">app</span>&gt;</span><span class="tag">&lt;/<span class="name">app</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> student = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">template</span>:<span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;h2&gt;&#123;&#123;studentName&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            `</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 没有el配置项所有组件被vm管理</span></span></span><br><span class="line"><span class="language-javascript">             <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">studentName</span>: <span class="string">&#x27;wwj&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">             &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 创建组件</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> school = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 配置组件结构</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 组件钱太高需要在这个注入组件标签</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">template</span>:<span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;h2&gt;&#123;&#123;schoolName&#125;&#125;&lt;/h2&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;student&gt;&lt;/student&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            &lt;/div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            `</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 没有el配置项所有组件被vm管理</span></span></span><br><span class="line"><span class="language-javascript">             <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 返回的是数据</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">schoolName</span>: <span class="string">&#x27;school&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">             &#125;,</span></span><br><span class="line"><span class="language-javascript">             <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">student</span>:student</span></span><br><span class="line"><span class="language-javascript">             &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> hello = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">template</span>:<span class="string">`&lt;h1&gt;&#123;&#123;msg&#125;&#125;&lt;/h1&gt;`</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">msg</span>:<span class="string">&#x27;hello wwj&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> app = <span class="title class_">Vue</span>.<span class="title function_">extend</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">template</span>:<span class="string">`</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                &lt;div&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;hello&gt;&lt;/hello&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">                    &lt;school&gt;&lt;/school&gt;</span></span></span><br><span class="line"><span class="string"><span class="language-javascript">            `</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">               <span class="attr">school</span>:school,</span></span><br><span class="line"><span class="language-javascript">               <span class="attr">hello</span>: hello  </span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// 注册组件(局部注册)</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">components</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                app</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-35-VueComponent"><a href="#1-35-VueComponent" class="headerlink" title="1.35    VueComponent"></a>1.35    VueComponent</h2><p> 组件的返回值是一个构造函数</p><p>写组件标签Vue我们执行生成的构造函数创建对象</p><p>**每次调用返回的是一个全新的VueComponent **</p><p><strong>组件配置中this的指向均是VueComponent实例对象</strong></p><p><strong>Vue实例对象管理着VueComponent实例对象</strong></p><h2 id="1-36-重要内置关系"><a href="#1-36-重要内置关系" class="headerlink" title="1.36    重要内置关系"></a>1.36    重要内置关系</h2><img src="/2022/09/03/Vue/image-20220623103542164.png" class="" title="image-20220623103542164"><p><strong>让组件实例对象可以访问到Vue的原型对象</strong></p><h2 id="1-37-单文件组件、脚手架"><a href="#1-37-单文件组件、脚手架" class="headerlink" title="1.37    单文件组件、脚手架"></a>1.37    单文件组件、脚手架</h2><p>school.vue</p><p>School.vue</p><p>MySchool.vue</p><p><strong>脚手架：官方提供的标准化开发工具</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">组件</span><br><span class="line">&lt;!-- template不参与编译 --&gt;</span><br><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;!-- 组件结构 --&gt;</span><br><span class="line">    &lt;div class=&quot;demo&quot;&gt;</span><br><span class="line">        &lt;h2&gt;&#123;&#123;schoolName&#125;&#125;&lt;/h2&gt;</span><br><span class="line">        &lt;button @click=&quot;schoolName&quot;&gt;点击&lt;/button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 组件相关代码</span><br><span class="line">// 向外暴露</span><br><span class="line">// export const school  = ...</span><br><span class="line">// Vue.entend可以省略</span><br><span class="line">export default&#123;</span><br><span class="line">    // 开发者工具组件名</span><br><span class="line">    name:&#x27;School&#x27;,</span><br><span class="line">    data()&#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            schoolName:&#x27;wwj&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        showName()&#123;</span><br><span class="line">            alert(this.showName);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // export:&#123;</span><br><span class="line">    //     school</span><br><span class="line">    // &#125;,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">// 默认暴露  </span><br><span class="line">// export default school;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">/* 样式 */</span><br><span class="line">.demo&#123;</span><br><span class="line">    background-color: pink;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">组件注册中心</span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;School&gt;&lt;/School&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    import School from &#x27;./School.vue&#x27;</span><br><span class="line">    export default &#123;</span><br><span class="line">        name:&#x27;App&#x27;,</span><br><span class="line">        components:&#123;</span><br><span class="line">            School:School</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">页面js</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span><br><span class="line">    <span class="attr">template</span>:<span class="string">`</span></span><br><span class="line"><span class="string">        &lt;App&gt;&lt;/App&gt;</span></span><br><span class="line"><span class="string">    `</span>,</span><br><span class="line">    <span class="attr">components</span>:&#123;</span><br><span class="line">        <span class="title class_">App</span>:<span class="title class_">App</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">html文件注册</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;App&gt;&lt;/App&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-38-Vue脚手架"><a href="#1-38-Vue脚手架" class="headerlink" title="1.38    Vue脚手架"></a>1.38    Vue脚手架</h2><p>CLI：command line interface命令行接口工具</p><p>全局安装：<img src="/2022/09/03/Vue/image-20220623124658968.png" class="" title="image-20220623124658968"></p><p>babel.config.js ：ES6转ES5转换</p><p>package.json：依赖文件记录</p><p>packege-lock.json：包管理文件</p><p>src：</p><p>main.js：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- IE浏览器的特殊配置以最高的渲染级别渲染页面 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开启理想视口 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width,initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- BASE_URl 代表public路径 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;&lt;%= BASE_URL %&gt;favicon.ico&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置网页标题 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>&lt;%= htmlWebpackPlugin.options.title %&gt;<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 浏览器不支持js元素不支持渲染 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">noscript</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">strong</span>&gt;</span>We&#x27;re sorry but &lt;%= htmlWebpackPlugin.options.title %&gt; doesn&#x27;t work properly without JavaScript enabled. Please enable it to continue.<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 容器 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- built files will be auto injected --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>Vue.js是完整版的Vue，包含核心功能和模板解析器</strong></p><p><strong>vue.xx.js 是运行版的Vue只包含核心功能没有模板解析器</strong></p><p><strong>vue.xx.js没有模板解析器，需要使用render函数去接收createElement函数去指定具体内容</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp, h &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">// 引入app组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="comment">// 创建元素</span></span><br><span class="line">    <span class="comment">// 引入精简版Vue</span></span><br><span class="line">    <span class="attr">render</span>: <span class="function"><span class="params">h</span>=&gt;</span>(<span class="title class_">App</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="1-39-脚手架的默认配置"><a href="#1-39-脚手架的默认配置" class="headerlink" title="1.39    脚手架的默认配置"></a>1.39    脚手架的默认配置</h2><img src="/2022/09/03/Vue/image-20220623133427164.png" class="" title="image-20220623133427164"><p>创建 vue.config.,js，查阅文档</p><h2 id="1-40-ref属性"><a href="#1-40-ref属性" class="headerlink" title="1.40    ref属性"></a>1.40    ref属性</h2><p><strong>给元素或者子组件注册引用信息代替id，应用在html标签上获取真实的DOM元素，应用在组件上获取的是组件的实例对象VC</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;!-- ref需要起个名字方便获取DOM --&gt;</span><br><span class="line">    &lt;h1 v-text=&quot;msg&quot; ref=&quot;title&quot;&gt;&lt;/h1&gt;</span><br><span class="line">    &lt;button @click=&quot;showDOM&quot;&gt;click&lt;/button&gt;</span><br><span class="line">    &lt;!-- 组件标签设置ref是该组件的vc实例对象 --&gt;</span><br><span class="line">    &lt;School ref=&quot;sch&quot;/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 引入组件</span><br><span class="line">import School from &#x27;./components/School.vue&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">    name:&#x27;App &#x27;,</span><br><span class="line">    components:&#123;</span><br><span class="line">        School:School</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            msg:&#x27;message&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        showDOM()&#123;</span><br><span class="line">            // 获取DOM元素</span><br><span class="line">            // this是vc的refs属性的tite的DOM元素</span><br><span class="line">            console.log(this.$refs.title);</span><br><span class="line">            // 获取的是实例对象</span><br><span class="line">            console.log(this.$refs.sch);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="1-41-props配置"><a href="#1-41-props配置" class="headerlink" title="1.41    props配置"></a>1.41    props配置</h2><p>让组件接收外部app传来的数据</p><p><strong>三种方式</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;demo&quot;&gt;</span><br><span class="line">    &lt;h2&gt;&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    name:&#x27;School&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            // name:&#x27;wwj&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 简单接收数据</span><br><span class="line">    // props:[&#x27;name&#x27;,&#x27;age&#x27;]</span><br><span class="line"></span><br><span class="line">    //  接收数据限制类型</span><br><span class="line">    // props:&#123;</span><br><span class="line">    //   name:String,</span><br><span class="line">    //   age:Number</span><br><span class="line">    // &#125;</span><br><span class="line"></span><br><span class="line">    // 数据进行类型、默认值指定、必要性限制</span><br><span class="line">    props:&#123;</span><br><span class="line">      name:&#123;</span><br><span class="line">        type:String,</span><br><span class="line">        requierd:true</span><br><span class="line">      &#125;,</span><br><span class="line">      age:&#123;</span><br><span class="line">        type:Number,</span><br><span class="line">        default:99</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.demo&#123;</span><br><span class="line">    background-color: pink;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;msg&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 实现组件复用结构不变数据修改 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--：使用的是v-bind 里面当成js表达式解决 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">School</span> <span class="attr">name</span>=<span class="string">&quot;zhangsan&quot;</span> <span class="attr">:age</span>=<span class="string">&quot;18+1&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">School</span>  <span class="attr">name</span>=<span class="string">&quot;sansan&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>props是只读的，需要修改在data创建一个中间属性修改该中间属性的值</strong></p><h2 id="1-42-混合mixins"><a href="#1-42-混合mixins" class="headerlink" title="1.42    混合mixins"></a>1.42    混合mixins</h2><p><strong>可以将多个组件共用的配置提取到一个js文件中</strong></p><p>全局混合</p><img src="/2022/09/03/Vue/image-20220623144940914.png" class="" title="image-20220623144940914"><p>局部混合</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;demo&quot;&gt;</span><br><span class="line">    &lt;h2 @click=&quot;showName&quot;&gt;&#123;&#123;name&#125;&#125;&lt;/h2&gt;</span><br><span class="line">    &lt;h2&gt;&#123;&#123;age&#125;&#125;&lt;/h2&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 引入混合</span><br><span class="line">import &#123;hunhe&#125; from &#x27;../mixin.js&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">    name:&#x27;School&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            name:&#x27;wwj&#x27;,</span><br><span class="line">            age:20</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    // 混合加入数组</span><br><span class="line">    mixins:[hunhe]</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.demo&#123;</span><br><span class="line">    background-color: pink;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> hunhe = &#123;</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">        <span class="title function_">showName</span>(<span class="params"></span>)&#123;</span><br><span class="line">          <span class="title function_">alert</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可以写任意vc对应的属性</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-43-插件"><a href="#1-43-插件" class="headerlink" title="1.43    插件"></a>1.43    插件</h2><p>定义插件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    <span class="title function_">install</span>(<span class="params">Vue</span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;hello&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// vm和vc都能使用</span></span><br><span class="line">        <span class="comment">// 形参是一个Vue的构造对象</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> obj;</span><br></pre></td></tr></table></figure><p>使用插件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">// 引入外壳组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="comment">// 引入插件</span></span><br><span class="line"><span class="keyword">import</span> plugins <span class="keyword">from</span> <span class="string">&#x27;./plugins.js&#x27;</span></span><br><span class="line"><span class="comment">// 应用插件</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(plugins);</span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"><span class="comment">// 创建vm</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">&#125;).$mount(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="1-44-scoped作用域"><a href="#1-44-scoped作用域" class="headerlink" title="1.44    scoped作用域"></a>1.44    scoped作用域</h2><p><strong>样式局部生效</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped&gt;</span><br><span class="line"><span class="comment">/* 控制类名都在这个模板里有效不存在多个模块类名冲突的问题 */</span></span><br><span class="line"><span class="selector-class">.demo</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><img src="/2022/09/03/Vue/image-20220623150908264.png" class="" title="image-20220623150908264"><p>less会存在兼容性问题需要指定版本</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 使用less语言写的，但处理不了less</span><br><span class="line">&lt;style lang=&quot;less&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="1-55-案例总结"><a href="#1-55-案例总结" class="headerlink" title="1.55    案例总结"></a>1.55    案例总结</h2><p>可以实现函数方法的传递调用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">   receive(todoObj)&#123;</span><br><span class="line">     // 数组的修改冲洗你解析模板</span><br><span class="line">     this.todos.unshift(todoObj);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>1、考虑好数据的存放位置，考虑是一个组件（<strong>放在自身</strong>）在用还是一些组件在用（<strong>状态提升：放在共同的父组件上</strong>）</p><p>2、props：适用于父级传递给子级（使用组件标签）</p><p>​                    适用于子级传递给父级（<strong>要求父亲将函数给子组件一个函数，子组件通过传过来的函数调用形参达到数据交互的效果</strong>）</p><p>3、v-model：绑定值不能是props传过来的值</p><p>4、props传来的是对象类型的值，修改对象的值不会报错，但不推荐这么做</p><h2 id="1-56-浏览器本地存储"><a href="#1-56-浏览器本地存储" class="headerlink" title="1.56    浏览器本地存储"></a>1.56    浏览器本地存储</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开关浏览器数据不会消失</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;key&#x27;</span>,<span class="string">&#x27;value&#x27;</span>);  <span class="comment">// 本地存储必须是字符串</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">setItem</span>(<span class="string">&#x27;obejct&#x27;</span>,<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(obj)); <span class="comment">// 传入对象</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;key&#x27;</span>); <span class="comment">// 读取</span></span><br><span class="line"><span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="variable language_">localStorage</span>.<span class="title function_">getItem</span>(<span class="string">&#x27;object&#x27;</span>)); <span class="comment">// 读取对象类型</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">removeItem</span>(<span class="string">&#x27;key&#x27;</span>);  <span class="comment">// 删除某一个</span></span><br><span class="line"><span class="variable language_">localStorage</span>.<span class="title function_">clear</span>();  <span class="comment">// 清空</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// sessionStorage : 浏览器关闭了就消失了</span></span><br></pre></td></tr></table></figure><h2 id="1-57-组件自定义事件"><a href="#1-57-组件自定义事件" class="headerlink" title="1.57    组件自定义事件"></a>1.57    组件自定义事件</h2><img src="/2022/09/03/Vue/image-20220623194113319.png" class="" title="image-20220623194113319"><img src="/2022/09/03/Vue/image-20220623194126867.png" class="" title="image-20220623194126867"><p>子组件给父组件传递信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">组件触发</span><br><span class="line">methods: &#123;</span><br><span class="line">      // atguigu事件触发条件</span><br><span class="line">      sendStudentName()&#123;</span><br><span class="line">        // 触发Student组件实例上的atguigu事件并且携带数据</span><br><span class="line">        this.$emit(&#x27;atguigu&#x27;,this.name);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;School v-on:atguigu=&quot;demo&quot;&gt;&lt;/School&gt;</span><br><span class="line"> methods:&#123;</span><br><span class="line">        demo(name)&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><strong>解绑事件</strong></p><p>生命周期销毁后所有的自定义属性不再生效</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 解绑单个事件</span></span><br><span class="line"><span class="variable language_">this</span>.$off(<span class="string">&#x27;atguigu&#x27;</span>);</span><br><span class="line"><span class="comment">// 解绑多个事件</span></span><br><span class="line"><span class="variable language_">this</span>.$off([<span class="string">&#x27;thing1&#x27;</span>,<span class="string">&#x27;thing2&#x27;</span>]);</span><br><span class="line"><span class="variable language_">this</span>.$$off(); <span class="comment">// 解绑所有事件</span></span><br></pre></td></tr></table></figure><p>1、<strong>适用于子组件给父组件传递数据</strong></p><img src="/2022/09/03/Vue/image-20220623200929394.png" class="" title="image-20220623200929394"><p>使用挂载调用自定义事件，需要明确了解this的指向，this的指向是子组件不能在里面直接回调函数</p><h2 id="1-58-全局事件总线"><a href="#1-58-全局事件总线" class="headerlink" title="1.58    全局事件总线"></a>1.58    全局事件总线</h2><img src="/2022/09/03/Vue/image-20220624101056055.png" class="" title="image-20220624101056055"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">// 引入外壳组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// // 创建构造对象</span></span><br><span class="line"><span class="comment">// const Demo = Vue.extend(&#123;&#125;);</span></span><br><span class="line"><span class="comment">// // new出一个vc对象方便使用￥on</span></span><br><span class="line"><span class="comment">// const d = new Demo();</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Vue.prototype.x = d;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建vm</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">  <span class="title function_">beforeCreate</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="comment">// 在vue原型对象上新增x属性让它具有this 让它指向了当前vue实例</span></span><br><span class="line">    <span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">$bus</span> = <span class="variable language_">this</span>; <span class="comment">// 安装全局事件总线</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mounted() &#123;</span><br><span class="line">   this.$bus.$on(&quot;hello&quot;, (data) =&gt; &#123;</span><br><span class="line">     console.log(&#x27;收到数据&#x27;,data);</span><br><span class="line">   &#125;);</span><br><span class="line"> &#125;,</span><br><span class="line"> beforeDestroy()&#123;</span><br><span class="line">   // 组件销毁之前销毁自定义事件</span><br><span class="line">   this.$bus.$off(&#x27;hello&#x27;);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">        sendStudentName()&#123;</span><br><span class="line">            // 触发school的hello事件</span><br><span class="line">            this.$bus.$emit(&#x27;hello&#x27;,this.name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p><strong>实现兄弟之间的数据互传</strong></p><p>1、配置全局事件总线</p><p>2、定义自定义事件，在需要接收数据的模块定义，并且配置触发事件后的回调函数</p><p>3、定义触发操作，在需要发送数据模块定义，并且携带数据传输</p><h2 id="1-59-消息订阅与发布"><a href="#1-59-消息订阅与发布" class="headerlink" title="1.59    消息订阅与发布"></a>1.59    消息订阅与发布</h2><p><strong>实现任意组件的消息互相传递</strong></p><p>引入<img src="/2022/09/03/Vue/image-20220624111024052.png" class="" title="image-20220624111024052"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import pubsub from &#x27;pubsub-js&#x27;  // 引入第三方库</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">methods: &#123;</span><br><span class="line">        sendStudentName()&#123;</span><br><span class="line">            // 发布消息</span><br><span class="line">            // 设置消息名，设置携带参数</span><br><span class="line">            pubsub.publish(&#x27;hello&#x27;,this.name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mounted() &#123;</span><br><span class="line">   // 订阅消息，设置消息名，第一个是发布消息的名和后面携带的参数</span><br><span class="line">   // 整体返回消息订阅的id</span><br><span class="line">   // 回调函数第一个参数是消息名需要使用变量占位</span><br><span class="line">   this.pubId = pubsub.subscribe(&#x27;hello&#x27;,(msgName,name)=&gt;&#123;</span><br><span class="line">     // 里面的this是undefined使用普通函数</span><br><span class="line">     // 使用箭头函数this指向的是vc</span><br><span class="line">     console.log(&#x27;message:&#x27;,name);</span><br><span class="line">   &#125;)</span><br><span class="line"> &#125;,</span><br><span class="line"> beforeDestroy()&#123;</span><br><span class="line">   // 使用消息订阅id销毁</span><br><span class="line">   pubsub.unsubscribe(this.pubId);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="1-60-nextTick"><a href="#1-60-nextTick" class="headerlink" title="1.60    $nextTick"></a>1.60    $nextTick</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 当前时间input框并没有显示是在下一轮更新dom后显示</span><br><span class="line">// 上述dom节点全部更新完毕后下一轮执行这个代码</span><br><span class="line">this.$nextTick(function () &#123;</span><br><span class="line">  this.$refs.inputTitle.focus();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="1-61-动画"><a href="#1-61-动画" class="headerlink" title="1.61    动画"></a>1.61    动画</h2><p><strong>动画Vue</strong></p><p><strong>Vue使用标签包裹要使用动画的标签</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click=&quot;isShow = !isShow&quot;&gt;点击&lt;/button&gt;</span><br><span class="line">    &lt;!-- appear：出现调用enter动画 --&gt;</span><br><span class="line">    &lt;!-- name: 替代 v 用于区分动画--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;transition appear name=&quot;hello&quot;&gt;</span><br><span class="line">        &lt;h1 v-show=&quot;isShow&quot;&gt;hello&lt;/h1&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    name:&#x27;Test&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            isShow:true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    h1&#123;</span><br><span class="line">        background-color: orange;</span><br><span class="line">    &#125;</span><br><span class="line">    /* vue指定类名显示动画 */</span><br><span class="line">    .hello-enter-active&#123;</span><br><span class="line">        animation: atguigu 1s ;</span><br><span class="line">    &#125;</span><br><span class="line">    .hello-leave-active&#123;</span><br><span class="line">        animation: atguigu 1s reverse;</span><br><span class="line">    &#125;</span><br><span class="line">    @keyframes atguigu &#123;</span><br><span class="line">        from&#123;</span><br><span class="line">            transform: translateX(-100%);</span><br><span class="line">        &#125;to&#123;</span><br><span class="line">            transform: translateX(0px);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;button @click=&quot;isShow = !isShow&quot;&gt;点击&lt;/button&gt;</span><br><span class="line">    &lt;!-- appear：出现调用enter动画 --&gt;</span><br><span class="line">    &lt;!-- name: 替代 v 用于区分动画--&gt;</span><br><span class="line"></span><br><span class="line">    &lt;transition appear name=&quot;hello&quot;&gt;</span><br><span class="line">        &lt;h1 v-show=&quot;isShow&quot;&gt;hello&lt;/h1&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    name:&#x27;Test&#x27;,</span><br><span class="line">    data() &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            isShow:true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">    h1&#123;</span><br><span class="line">        background-color: orange;</span><br><span class="line">        transition: 0.5s linear;</span><br><span class="line">    &#125;</span><br><span class="line">    /* vue指定类名显示动画 */</span><br><span class="line">    /* .hello-enter-active&#123;</span><br><span class="line">        animation: atguigu 1s ;</span><br><span class="line">    &#125;</span><br><span class="line">    .hello-leave-active&#123;</span><br><span class="line">        animation: atguigu 1s reverse;</span><br><span class="line">    &#125;</span><br><span class="line">    @keyframes atguigu &#123;</span><br><span class="line">        from&#123;</span><br><span class="line">            transform: translateX(-100%);</span><br><span class="line">        &#125;to&#123;</span><br><span class="line">            transform: translateX(0px);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; */</span><br><span class="line">    /* 进入的起点 */</span><br><span class="line">    .hello-enter,.hello-leave-to&#123;</span><br><span class="line">        transform: translateX(-100%);</span><br><span class="line">    &#125;</span><br><span class="line">    /* 进入的终点 */</span><br><span class="line">    .hello-enter-to,.hello-leave&#123;</span><br><span class="line">        transform: translateX(0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     /* 离开的起点 */</span><br><span class="line">    /* .hello-leave&#123;</span><br><span class="line">        transform: translateX(0);</span><br><span class="line">    &#125; */</span><br><span class="line">    /* 离开的终点 */</span><br><span class="line">    /* .hello-leave-to&#123;</span><br><span class="line">        transform: translateX(-100%);</span><br><span class="line">    &#125;   */</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p><strong>多个组件动画</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;transition-group name=&quot;hello&quot; appear&gt;</span><br><span class="line">     &lt;h1 v-show=&quot;isShow&quot; key=&quot;1&quot;&gt;hello&lt;/h1&gt;</span><br><span class="line">     &lt;h1 v-show=&quot;isShow&quot; key=&quot;2&quot;&gt;hello&lt;/h1&gt;</span><br><span class="line">   &lt;/transition-group&gt;</span><br></pre></td></tr></table></figure><h2 id="1-62-集成第三方动画"><a href="#1-62-集成第三方动画" class="headerlink" title="1.62    集成第三方动画"></a>1.62    集成第三方动画</h2><p>引入：<img src="/2022/09/03/Vue/image-20220624134152527.png" class="" title="image-20220624134152527"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 配置使用name、进入动画、离开动画 --&gt;</span><br><span class="line">    &lt;transition-group </span><br><span class="line">    name=&quot;animate_animated animate_bounce&quot;</span><br><span class="line">    enter-active-class=&quot;animate_swing&quot;</span><br><span class="line">    leave-active-class=&quot;animate_backOutUp&quot;</span><br><span class="line">    appear&gt;</span><br><span class="line">      &lt;h1 v-show=&quot;isShow&quot; key=&quot;1&quot;&gt;hello&lt;/h1&gt;</span><br><span class="line">      &lt;h1 v-show=&quot;isShow&quot; key=&quot;2&quot;&gt;hello&lt;/h1&gt;</span><br><span class="line">    &lt;/transition-group&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#x27;animate.css&#x27;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Test&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isShow: true,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><img src="/2022/09/03/Vue/image-20220624134710954.png" class="" title="image-20220624134710954"><img src="/2022/09/03/Vue/image-20220624134735678.png" class="" title="image-20220624134735678"><h2 id="1-63-跨域"><a href="#1-63-跨域" class="headerlink" title="1.63    跨域"></a>1.63    跨域</h2><img src="/2022/09/03/Vue/image-20220624140346493.png" class="" title="image-20220624140346493"><p>1、Nginx</p><p>2、vue-cli</p><img src="/2022/09/03/Vue/image-20220624140947872.png" class="" title="image-20220624140947872"><img src="/2022/09/03/Vue/image-20220624141859171.png" class="" title="image-20220624141859171"><img src="/2022/09/03/Vue/image-20220624141925218.png" class="" title="image-20220624141925218"><h2 id="1-64-案例"><a href="#1-64-案例" class="headerlink" title="1.64    案例"></a>1.64    案例</h2><img src="/2022/09/03/Vue/image-20220624143936726.png" class="" title="image-20220624143936726"><img src="/2022/09/03/Vue/image-20220624144746059.png" class="" title="image-20220624144746059"><h2 id="1-65-ajax库-vue-resource"><a href="#1-65-ajax库-vue-resource" class="headerlink" title="1.65    ajax库-vue-resource"></a>1.65    ajax库-vue-resource</h2><img src="/2022/09/03/Vue/image-20220624145859586.png" class="" title="image-20220624145859586"><h2 id="1-66-默认插槽"><a href="#1-66-默认插槽" class="headerlink" title="1.66    默认插槽"></a>1.66    默认插槽</h2><img src="/2022/09/03/Vue/image-20220624161258127.png" class="" title="image-20220624161258127"><p><strong>解决同一个模块想使用不同的部分结构</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;Categroy title=&quot;美食&quot; :listData=&quot;foods&quot;&gt;</span><br><span class="line">            &lt;!-- 定义 --&gt;</span><br><span class="line">            &lt;img src=&quot;&quot; alt=&quot;no photo&quot;&gt;    </span><br><span class="line">        &lt;/Categroy&gt;   </span><br><span class="line">        &lt;Categroy title=&quot;游戏&quot; :listData=&quot;games&quot;&gt;</span><br><span class="line">            &lt;li v-for=&quot;(g,index) in games&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">                &#123;&#123;g&#125;&#125;</span><br><span class="line">            &lt;/li&gt;</span><br><span class="line">        &lt;/Categroy&gt;</span><br><span class="line">        &lt;Categroy title=&quot;电影&quot; :listData=&quot;filems&quot;/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p><strong>设置模块标签下的子标签放置于模块的哪个位置定义插槽标签</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;category&quot;&gt;</span><br><span class="line">    &lt;h3&gt;&#123;&#123;title&#125;&#125;分类&lt;/h3&gt;</span><br><span class="line">    &lt;!-- &lt;ul&gt;</span><br><span class="line">      &lt;li v-for=&quot;(item,index) in listData&quot; :key=&quot;index&quot;&gt;&#123;&#123;item&#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt; --&gt;</span><br><span class="line">    &lt;!-- 定义一个插槽，等待组件使用者填充 --&gt;</span><br><span class="line">    &lt;slot&gt;&lt;/slot&gt;  </span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="1-67-具名插槽"><a href="#1-67-具名插槽" class="headerlink" title="1.67    具名插槽"></a>1.67    具名插槽</h2><p><strong>可以使用template 标签 v-slot:footer</strong>指定</p><p><strong>解决多个子标签使用插槽</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Categroy title=&quot;美食&quot; :listData=&quot;foods&quot;&gt;</span><br><span class="line">    &lt;!-- 定义 --&gt;</span><br><span class="line">    &lt;!-- 指定这个标签放到哪个插槽里面 --&gt;</span><br><span class="line">    &lt;img src=&quot;&quot; alt=&quot;no photo&quot; slot=&quot;center&quot;&gt;  </span><br><span class="line">    &lt;a href=&quot;&quot; slot=&quot;footer&quot;&gt;click&lt;/a&gt;  </span><br><span class="line">&lt;/Categroy&gt;   </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 定义一个插槽，等待组件使用者填充 --&gt;</span><br><span class="line">&lt;slot name=&quot;center&quot;&gt;&lt;/slot&gt;</span><br><span class="line">&lt;slot name=&quot;footer&quot;&gt;&lt;/slot&gt;  </span><br></pre></td></tr></table></figure><h2 id="1-68-作用域插槽"><a href="#1-68-作用域插槽" class="headerlink" title="1.68    作用域插槽"></a>1.68    作用域插槽</h2><p><strong>数据的逆向传递</strong></p><p><strong>数据在子模块中，通过插槽标签将数据传递给父模块</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 使用插槽绑定games数据 --&gt;</span><br><span class="line">&lt;slot :games=&quot;games&quot;&gt;&lt;/slot&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 必须添加template设置scope属性收到的是一个带有数据的对象 --&gt;</span><br><span class="line">        &lt;Categroy title=&quot;游戏&quot; :listData=&quot;games&quot;&gt;</span><br><span class="line">            &lt;template scope=&quot;atguigu&quot;&gt;</span><br><span class="line">                &lt;li v-for=&quot;(g,index) in atguigu.games&quot; :key=&quot;index&quot;&gt;</span><br><span class="line">                    &#123;&#123;g&#125;&#125;</span><br><span class="line">                &lt;/li&gt;</span><br><span class="line">            &lt;/template&gt;</span><br><span class="line">        &lt;/Categroy&gt;</span><br></pre></td></tr></table></figure><h2 id="1-69-Vuex"><a href="#1-69-Vuex" class="headerlink" title="1.69    Vuex"></a>1.69    Vuex</h2><p>在Vue中实现集中数据管理的一个插件，能够对多个组件的共享状态进行读写</p><img src="/2022/09/03/Vue/image-20220624161835431.png" class="" title="image-20220624161835431"><p><strong>解决多模块数据读写问题，使用总线只能读，需要读写就非常的繁杂</strong></p><p>1、多个组件依赖于同一个数据</p><p>2、来自不同的组件的行为需要修改同一数据</p><h2 id="1-70-Vuex工作原理"><a href="#1-70-Vuex工作原理" class="headerlink" title="1.70    Vuex工作原理"></a>1.70    Vuex工作原理</h2><img src="/2022/09/03/Vue/image-20220624165214520.png" class="" title="image-20220624165214520"><h2 id="1-71-vuex环境搭建"><a href="#1-71-vuex环境搭建" class="headerlink" title="1.71    vuex环境搭建"></a>1.71    vuex环境搭建</h2><img src="/2022/09/03/Vue/image-20220624165515130.png" class="" title="image-20220624165515130"><p><strong>vue2要安装vuex3的版本</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用于创建Vuex的核心store</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="comment">// Vuex不在这边引入会报错，import放后面无效，因为会Vue会自己扫描并且将import放在前面执行</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>)   <span class="comment">// Vuex引入</span></span><br><span class="line"><span class="keyword">const</span> actions = &#123;&#125;  <span class="comment">// 用于响应组件中的动作</span></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;&#125; <span class="comment">// 用于操作数据</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;&#125; <span class="comment">// 用于存储数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">    <span class="attr">actions</span>:actions,</span><br><span class="line">    <span class="attr">mutations</span>:mutations,</span><br><span class="line">    <span class="attr">state</span>:state</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// export default store</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">// 引入外壳组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="comment">// 引入store</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./store/index&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建vm</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">  <span class="attr">store</span>:store,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="1-72-Vuex使用"><a href="#1-72-Vuex使用" class="headerlink" title="1.72    Vuex使用"></a>1.72    Vuex使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用于创建Vuex的核心store</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Vuex</span> <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">Vuex</span>)   <span class="comment">// Vuex引入</span></span><br><span class="line"><span class="keyword">const</span> actions = &#123;</span><br><span class="line">    <span class="comment">// jia(context,value)&#123;</span></span><br><span class="line">    <span class="comment">//     context.commit(&#x27;JIA&#x27;,value);</span></span><br><span class="line">    <span class="comment">// &#125;,</span></span><br><span class="line">    <span class="comment">// action是设置一些业务逻辑的</span></span><br><span class="line">    <span class="comment">// 第一个是当前上下文，第二个是传过来的值</span></span><br><span class="line">    <span class="title function_">jiaOdd</span>(<span class="params">context,value</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(context.<span class="property">state</span>.<span class="property">sum</span> % <span class="number">2</span>)&#123;</span><br><span class="line">            context.<span class="title function_">commit</span>(<span class="string">&#x27;JIA&#x27;</span>,value);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;  <span class="comment">// 用于响应组件中的动作</span></span><br><span class="line"><span class="keyword">const</span> mutations = &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 设置对应的方法</span></span><br><span class="line">    <span class="comment">// context.commit(&#x27;JIA&#x27;,value);</span></span><br><span class="line">    <span class="title function_">JIA</span>(<span class="params">state,value</span>)&#123;</span><br><span class="line">        state.<span class="property">sum</span> += value;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="comment">// 用于操作数据</span></span><br><span class="line"><span class="keyword">const</span> state = &#123;</span><br><span class="line">    <span class="attr">sum</span>:<span class="number">0</span></span><br><span class="line">&#125; <span class="comment">// 用于存储数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建store</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">Vuex</span>.<span class="title class_">Store</span>(&#123;</span><br><span class="line">    <span class="attr">actions</span>:actions,</span><br><span class="line">    <span class="attr">mutations</span>:mutations,</span><br><span class="line">    <span class="attr">state</span>:state</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// export default store</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 使用Vuex获取数据 --&gt;</span><br><span class="line">    &lt;h1&gt;当前求和为 ：&#123;&#123;$store.state.sum&#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;!-- 自动转换为数值类型 --&gt;</span><br><span class="line">    &lt;select v-model.number=&quot;n&quot;&gt;</span><br><span class="line">      &lt;option value=&quot;1&quot;&gt;1&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot;2&quot;&gt;2&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot;3&quot;&gt;3&lt;/option&gt;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">    &lt;button @click=&quot;increment&quot;&gt;+&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;decrement&quot;&gt;-&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;incrementOdd&quot;&gt;当前求和为奇数再加&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;incrementWait&quot;&gt;等一等再加&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      n:1,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    increment()&#123;</span><br><span class="line">      // 直接调用commit无需使用dispatch传到aciton中间没有业务逻辑操作</span><br><span class="line">      this.$store.commit(&#x27;JIA&#x27;,this.n)</span><br><span class="line">    &#125;,</span><br><span class="line">    decrement()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    incrementOdd()&#123;</span><br><span class="line">      this.$store.dispatch(&#x27;jiaOdd&#x27;,this.n)</span><br><span class="line">    &#125;,</span><br><span class="line">    incrementWait()&#123;</span><br><span class="line">      setTimeout(() =&gt; &#123;</span><br><span class="line"></span><br><span class="line">      &#125;, 500);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">button&#123;</span><br><span class="line">  margin-left: 20px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="1-73-Vuex开发者工具使用"><a href="#1-73-Vuex开发者工具使用" class="headerlink" title="1.73    Vuex开发者工具使用"></a>1.73    Vuex开发者工具使用</h2><img src="/2022/09/03/Vue/image-20220624190931527.png" class="" title="image-20220624190931527"><img src="/2022/09/03/Vue/image-20220624191119482.png" class="" title="image-20220624191119482"><img src="/2022/09/03/Vue/image-20220624191141889.png" class="" title="image-20220624191141889"><img src="/2022/09/03/Vue/image-20220624191244674.png" class="" title="image-20220624191244674"><img src="/2022/09/03/Vue/image-20220624191404644.png" class="" title="image-20220624191404644"><p><strong>context上下文对象存在意义：</strong></p><img src="/2022/09/03/Vue/image-20220624191627635.png" class="" title="image-20220624191627635"><h2 id="1-74-Vuex的getters配置项"><a href="#1-74-Vuex的getters配置项" class="headerlink" title="1.74    Vuex的getters配置项"></a>1.74    Vuex的getters配置项</h2><p>对states的数据进行加工然后返回</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt;当前求和放大十倍 ：&#123;&#123;$store.getters.bigSum&#125;&#125;&lt;/h1&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将state数据进行加工</span></span><br><span class="line"><span class="keyword">const</span> getters = &#123;</span><br><span class="line">    <span class="comment">// 形参就是state的数据对象</span></span><br><span class="line">    <span class="title function_">bigSum</span>(<span class="params">state</span>)&#123;</span><br><span class="line">        <span class="comment">// 返回加工后的数据</span></span><br><span class="line">        <span class="keyword">return</span> state.<span class="property">sum</span>*<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-75-mapState、mapGetter"><a href="#1-75-mapState、mapGetter" class="headerlink" title="1.75    mapState、mapGetter"></a>1.75    mapState、mapGetter</h2><p>mapState：帮助我们映射state中的数据为计算属性，省去重复$state.store.属性的麻烦</p><p>mapGetter：映射getters中的数据为计算属性</p><img src="/2022/09/03/Vue/image-20220624193430750.png" class="" title="image-20220624193430750"><p><strong>数组写法（生成的计算属性名和读取名字一致）</strong></p><img src="/2022/09/03/Vue/image-20220624194730212.png" class="" title="image-20220624194730212"><img src="/2022/09/03/Vue/image-20220624194739811.png" class="" title="image-20220624194739811"><p><strong>对象写法</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!-- 使用Vuex获取数据 --&gt;</span><br><span class="line">    &lt;h1&gt;当前求和为 ：&#123;&#123;he&#125;&#125;&lt;/h1&gt;</span><br><span class="line">     &lt;h1&gt;当前求和放大十倍 ：&#123;&#123;bigSum&#125;&#125;&lt;/h1&gt;</span><br><span class="line">     &lt;h1&gt; &#123;&#123;xuexiao&#125;&#125;&lt;/h1&gt;</span><br><span class="line">     &lt;h1&gt;&#123;&#123;bigSum&#125;&#125;&lt;/h1&gt;</span><br><span class="line">    &lt;!-- 自动转换为数值类型 --&gt;</span><br><span class="line">    &lt;select v-model.number=&quot;n&quot;&gt;</span><br><span class="line">      &lt;option value=&quot;1&quot;&gt;1&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot;2&quot;&gt;2&lt;/option&gt;</span><br><span class="line">      &lt;option value=&quot;3&quot;&gt;3&lt;/option&gt;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">    &lt;button @click=&quot;increment&quot;&gt;+&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;decrement&quot;&gt;-&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;incrementOdd&quot;&gt;当前求和为奇数再加&lt;/button&gt;</span><br><span class="line">    &lt;button @click=&quot;incrementWait&quot;&gt;等一等再加&lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">// 引入插件</span><br><span class="line">import &#123; mapState,mapGetters &#125; from &quot;vuex&quot;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      n:1,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">    increment()&#123;</span><br><span class="line">      // 直接调用commit无需使用dispatch传到aciton中间没有业务逻辑操作</span><br><span class="line">      this.$store.commit(&#x27;JIA&#x27;,this.n)</span><br><span class="line">    &#125;,</span><br><span class="line">    decrement()&#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    incrementOdd()&#123;</span><br><span class="line">      this.$store.dispatch(&#x27;jiaOdd&#x27;,this.n)</span><br><span class="line">    &#125;,</span><br><span class="line">    incrementWait()&#123;</span><br><span class="line">      setTimeout(() =&gt; &#123;</span><br><span class="line"></span><br><span class="line">      &#125;, 500);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  computed:&#123;</span><br><span class="line"></span><br><span class="line">    // 可以省略这些方法</span><br><span class="line">    // bigSum()&#123;</span><br><span class="line">    //   return this.$store.getters.bigSum;</span><br><span class="line">    // &#125;,</span><br><span class="line">    // xuexiao()&#123;</span><br><span class="line">    //   return this.$store.state.school;</span><br><span class="line">    // &#125;,</span><br><span class="line">    // he()&#123;</span><br><span class="line">    //   return this.$store.state.sum</span><br><span class="line">    // &#125;,</span><br><span class="line">    // 解构赋值：将这个方法生成的两个函数分别放在vc这个对象上</span><br><span class="line">    // 自动生成计算属性方法</span><br><span class="line">    // 从state读取数据</span><br><span class="line">    // 方法名：拿取的state里的属性名</span><br><span class="line">    ...mapState(&#123;he:&#x27;sum&#x27;,xuexiao:&#x27;school&#x27;&#125;),</span><br><span class="line">    // 数组写法</span><br><span class="line">    ...mapGetters([&#x27;bigSum&#x27;])</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">button&#123;</span><br><span class="line">  margin-left: 20px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="1-76-mapMutations、mapActions"><a href="#1-76-mapMutations、mapActions" class="headerlink" title="1.76    mapMutations、mapActions"></a>1.76    mapMutations、mapActions</h2><p>mapMutation：生成对应的方法，方法中会 <strong>直接调用commit方法联系mutations</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// increment()&#123;</span><br><span class="line">//   // 直接调用commit无需使用dispatch传到aciton中间没有业务逻辑操作</span><br><span class="line">//   this.$store.commit(&#x27;JIA&#x27;,this.n)</span><br><span class="line">// &#125;,</span><br><span class="line">...mapMutations(&#123; increment: &quot;JIA&quot; &#125;),</span><br><span class="line"></span><br><span class="line">// incrementOdd()&#123;</span><br><span class="line">//   this.$store.dispatch(&#x27;jiaOdd&#x27;,this.n)</span><br><span class="line">// &#125;,</span><br><span class="line">...mapActions(&#123; incrementOdd: &quot;jiaOdd&quot; &#125;),</span><br></pre></td></tr></table></figure><img src="/2022/09/03/Vue/image-20220625102228637.png" class="" title="image-20220625102228637"><h2 id="1-77-vuex模块化编码"><a href="#1-77-vuex模块化编码" class="headerlink" title="1.77    vuex模块化编码"></a>1.77    vuex模块化编码</h2><p>第一个参数是模块的名称</p><img src="/2022/09/03/Vue/image-20220625110439009.png" class="" title="image-20220625110439009"><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> counterOptions = &#123;</span><br><span class="line">    <span class="attr">namspaced</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">actions</span>: &#123;</span><br><span class="line">        <span class="comment">// jia(context,value)&#123;</span></span><br><span class="line">        <span class="comment">//     context.commit(&#x27;JIA&#x27;,value);</span></span><br><span class="line">        <span class="comment">// &#125;,</span></span><br><span class="line">        <span class="comment">// action是设置一些业务逻辑的</span></span><br><span class="line">        <span class="comment">// 第一个是当前上下文，第二个是传过来的值</span></span><br><span class="line">        <span class="title function_">jiaOdd</span>(<span class="params">context, value</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (context.<span class="property">state</span>.<span class="property">sum</span> % <span class="number">2</span>) &#123;</span><br><span class="line">                context.<span class="title function_">commit</span>(<span class="string">&#x27;JIA&#x27;</span>, value);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mutations</span>: &#123;</span><br><span class="line">        <span class="comment">// 设置对应的方法</span></span><br><span class="line">        <span class="comment">// context.commit(&#x27;JIA&#x27;,value);</span></span><br><span class="line">        <span class="title function_">JIA</span>(<span class="params">state, value</span>) &#123;</span><br><span class="line">            state.<span class="property">sum</span> += value;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">state</span>: &#123;</span><br><span class="line">        <span class="attr">sum</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">school</span>: <span class="string">&#x27;尚硅谷&#x27;</span>,</span><br><span class="line">        <span class="attr">subject</span>: <span class="string">&#x27;前端&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getters</span>: &#123;</span><br><span class="line">        <span class="comment">// 形参就是state的数据对象</span></span><br><span class="line">        <span class="title function_">bigSum</span>(<span class="params">state</span>) &#123;</span><br><span class="line">            <span class="comment">// 返回加工后的数据</span></span><br><span class="line">            <span class="keyword">return</span> state.<span class="property">sum</span> * <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>必须开启命名空间</p><img src="/2022/09/03/Vue/image-20220625111430602.png" class="" title="image-20220625111430602"><img src="/2022/09/03/Vue/image-20220625111435236.png" class="" title="image-20220625111435236"><img src="/2022/09/03/Vue/image-20220625111602704.png" class="" title="image-20220625111602704"><img src="/2022/09/03/Vue/image-20220625111717370.png" class="" title="image-20220625111717370"><h2 id="1-78-路由"><a href="#1-78-路由" class="headerlink" title="1.78    路由"></a>1.78    路由</h2><p>适用于单页的web应用</p><p>只有一个页面</p><p>只做页面的局部更新</p><p><strong>key-value形式，key改变，更改对应的value组件</strong></p><p>使用：</p><p>1、引入</p><img src="/2022/09/03/Vue/image-20220625114615667.png" class="" title="image-20220625114615667"><p>2、创建router文件创建index.js文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建路由器</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="comment">// 引入需要路由的组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">About</span> <span class="keyword">from</span> <span class="string">&#x27;../components/About.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;../components/Home.vue&#x27;</span></span><br><span class="line"><span class="comment">// 配置路由</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="attr">routes</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 映射地址</span></span><br><span class="line">            <span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">            <span class="comment">// 显示组件</span></span><br><span class="line">            <span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>:<span class="title class_">Home</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>3、引入路由在main.js中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">// 引入外壳组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 引用路由插件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="comment">// 引入路由器配置</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router/index&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用路由</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueRouter</span>)</span><br><span class="line"><span class="comment">// 创建vm</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">el</span>:<span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>),</span><br><span class="line">  <span class="attr">router</span>:router</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>4、使用路由</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;col-xs-offset-2 col-xs-8&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;page-header&quot;&gt;&lt;h2&gt;Vue Router Demo&lt;/h2&gt;&lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;row&quot;&gt;</span><br><span class="line">      &lt;div class=&quot;col-xs-2 col-xs-offset-2&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;list-group&quot;&gt;</span><br><span class="line">          &lt;!-- 多页面跳转 --&gt;</span><br><span class="line">          &lt;!-- &lt;a class=&quot;list-group-item active&quot; href=&quot;./about.html&quot;&gt;About&lt;/a&gt; --&gt;</span><br><span class="line">          &lt;!-- &lt;a class=&quot;list-group-item&quot; href=&quot;./home.html&quot;&gt;Home&lt;/a&gt; --&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- routerlink标签：最终转换为a标签，路由指定标签 --&gt;</span><br><span class="line">        &lt;!-- active-class标签：点击了所活动的标签的样式 --&gt;</span><br><span class="line">          &lt;router-link active-class=&quot;active&quot; to=&quot;/about&quot;&gt;About&lt;/router-link&gt; </span><br><span class="line">          &lt;router-link active-class=&quot;active&quot; to=&quot;/home&quot;&gt;Home&lt;/router-link&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div class=&quot;col-xs-6&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;panel-body&quot;&gt;</span><br><span class="line">            &lt;!-- 路由指定组件的呈现位置 --&gt;</span><br><span class="line">            &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;App&quot;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.active&#123;</span><br><span class="line">    background-color: antiquewhite;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="1-79-注意点"><a href="#1-79-注意点" class="headerlink" title="1.79    注意点"></a>1.79    注意点</h2><p>1、page：路由组件文件夹</p><p>2、切换路由隐藏的路由组件是销毁呃</p><p>3、每个组件都有自己的$route属性存储自己的路由</p><p>4、整个app只有一个$router</p><h2 id="1-80-嵌套路由"><a href="#1-80-嵌套路由" class="headerlink" title="1.80    嵌套路由"></a>1.80    嵌套路由</h2><p>多写一个配置项children，里面路径需要加  &#x2F;</p><p>在to属性需要写多级路径</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建路由器</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="comment">// 引入需要路由的组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">About</span> <span class="keyword">from</span> <span class="string">&#x27;../pages/About.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;../pages/Home.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">New</span> <span class="keyword">from</span> <span class="string">&#x27;../pages/New.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Message</span> <span class="keyword">from</span> <span class="string">&#x27;../pages/Message.vue&#x27;</span></span><br><span class="line"><span class="comment">// 配置路由</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="attr">routes</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 映射地址</span></span><br><span class="line">            <span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">            <span class="comment">// 显示组件</span></span><br><span class="line">            <span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>:<span class="title class_">Home</span>,</span><br><span class="line">            <span class="attr">children</span>:[</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">path</span>:<span class="string">&#x27;news&#x27;</span>,</span><br><span class="line">                    <span class="attr">component</span>:<span class="title class_">New</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">path</span>:<span class="string">&#x27;message&#x27;</span>,</span><br><span class="line">                    <span class="attr">component</span>:<span class="title class_">Message</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;h2&gt;Home组件内容&lt;/h2&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;ul class=&quot;nav nav-tabs&quot;&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">          &lt;router-link active-class=&quot;active&quot; </span><br><span class="line">          to=&quot;/home/news&quot;&gt;News&lt;/router-link&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">        &lt;li&gt;</span><br><span class="line">          &lt;router-link active-class=&quot;active&quot; </span><br><span class="line">          to=&quot;/home/message&quot;&gt;Message&lt;/router-link&gt;</span><br><span class="line">        &lt;/li&gt;</span><br><span class="line">      &lt;/ul&gt;</span><br><span class="line">      &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Home&quot;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">.active&#123;</span><br><span class="line">    background-color: pink;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="1-81-路由传参query"><a href="#1-81-路由传参query" class="headerlink" title="1.81    路由传参query"></a>1.81    路由传参query</h2><p>写法1</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 模块字符串带参写法 --&gt;</span><br><span class="line">       &lt;!-- &lt;router-link :to=&quot;`/home/message/detail?id=$&#123;m.id&#125;&amp;title=$&#123;m.title&#125;`&quot;&gt;&#123;&#123;m.title&#125;&#125;&lt;/router-link&gt;   --&gt;</span><br></pre></td></tr></table></figure><p>写法2</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 携带参数对象写法 --&gt;</span><br><span class="line">&lt;router-link</span><br><span class="line">  :to=&quot;&#123;</span><br><span class="line">    path: &#x27;/home/message/detail&#x27;,</span><br><span class="line">    query: &#123;</span><br><span class="line">      id: m.id,</span><br><span class="line">      title: m.title,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;&quot;</span><br><span class="line">&gt;&#123;&#123;m.title&#125;&#125;</span><br><span class="line">&lt;/router-link&gt;  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;!-- 接收参数 --&gt;</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;li&gt;消息编号：&#123;&#123;$route.query.id&#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;消息标签：&#123;&#123;$route.query.title&#125;&#125;&lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="1-82-命名路由"><a href="#1-82-命名路由" class="headerlink" title="1.82    命名路由"></a>1.82    命名路由</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="attr">name</span>:<span class="string">&#x27;guanyu&#x27;</span>,</span><br><span class="line">           <span class="comment">// 映射地址</span></span><br><span class="line">           <span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">           <span class="comment">// 显示组件</span></span><br><span class="line">           <span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">       &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- path: &#x27;/home/message/detail&#x27;, --&gt;</span><br><span class="line">&lt;!-- 携带参数对象写法 --&gt;</span><br><span class="line">&lt;router-link</span><br><span class="line">  :to=&quot;&#123;</span><br><span class="line">    name: &#x27;xiangqing&#x27;,</span><br><span class="line">    query: &#123;</span><br><span class="line">      id: m.id,</span><br><span class="line">      title: m.title,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;&quot;</span><br><span class="line">  &gt;&#123;&#123; m.title &#125;&#125; &lt;/router-link</span><br><span class="line">&gt;  </span><br></pre></td></tr></table></figure><h2 id="1-83-param参数"><a href="#1-83-param参数" class="headerlink" title="1.83    param参数"></a>1.83    param参数</h2><p>接收参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- param --&gt;</span><br><span class="line">   &lt;li&gt;消息编号：&#123;&#123; $route.params.id &#125;&#125;&lt;/li&gt;</span><br><span class="line">   &lt;li&gt;消息标签：&#123;&#123; $route.params.title &#125;&#125;&lt;/li&gt;</span><br></pre></td></tr></table></figure><p>配置路由</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">children:[</span><br><span class="line">                       &#123;</span><br><span class="line">                           name:&#x27;xiangqing&#x27;,</span><br><span class="line">                           // rest写法</span><br><span class="line">                           path:&#x27;detail/:id/:title&#x27;,</span><br><span class="line">                           component:Detail</span><br><span class="line">                       &#125;</span><br><span class="line">                   ]</span><br></pre></td></tr></table></figure><p> <router-link :to="`/home/message/detail/${m.id}/${m.title}`"></router-link>&amp;nbsp;&amp;nbsp;</p><p><strong>使用对象写法，里面属性必须是用name，并且参数调成params</strong></p><h2 id="1-84-路由props配置"><a href="#1-84-路由props配置" class="headerlink" title="1.84    路由props配置"></a>1.84    路由props配置</h2><p>解决组件接收参数的时候无需重复调用方法</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">component</span>:<span class="title class_">Message</span>,</span><br><span class="line">                   <span class="attr">children</span>:[</span><br><span class="line">                       &#123;</span><br><span class="line">                           <span class="attr">name</span>:<span class="string">&#x27;xiangqing&#x27;</span>,</span><br><span class="line">                           <span class="comment">// rest写法</span></span><br><span class="line">                           <span class="attr">path</span>:<span class="string">&#x27;detail/:id/:title&#x27;</span>,</span><br><span class="line">                           <span class="attr">component</span>:<span class="title class_">Detail</span>,</span><br><span class="line">                           <span class="comment">// props:&#123;</span></span><br><span class="line">                           <span class="comment">//     a:1,</span></span><br><span class="line">                           <span class="comment">//     b:&#x27;hello&#x27;</span></span><br><span class="line">                           <span class="comment">// &#125;</span></span><br><span class="line">                           <span class="comment">// 会把路由组件收到的params参数以props传给details组件</span></span><br><span class="line">                           <span class="attr">props</span>:<span class="literal">true</span></span><br><span class="line">                           <span class="comment">// 写法3</span></span><br><span class="line">                           <span class="comment">// 接收query发送的数据</span></span><br><span class="line">                           <span class="comment">// props($route)&#123;</span></span><br><span class="line">                           <span class="comment">//     return &#123;id:$route.query.id,title:$route.query.title&#125;</span></span><br><span class="line">                           <span class="comment">// &#125;</span></span><br><span class="line">                       &#125;</span><br></pre></td></tr></table></figure><p>设置的prop会以参数的形式给组件接收</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- 接收参数 --&gt;</span><br><span class="line">  &lt;ul&gt;</span><br><span class="line">    &lt;!-- &lt;li&gt;消息编号：&#123;&#123;$route.query.id&#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;消息标签：&#123;&#123;$route.query.title&#125;&#125;&lt;/li&gt; --&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- param --&gt;</span><br><span class="line">    &lt;!-- &lt;li&gt;消息编号：&#123;&#123; $route.params.id &#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;消息标签：&#123;&#123; $route.params.title &#125;&#125;&lt;/li&gt; --&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;li&gt;消息编号：&#123;&#123; id &#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;消息标签：&#123;&#123; title &#125;&#125;&lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;Detail&quot;,</span><br><span class="line">//  接收prop形式的参数</span><br><span class="line">  props:[&#x27;id&#x27;,&#x27;title&#x27;],</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="1-85-浏览器历史模式设置"><a href="#1-85-浏览器历史模式设置" class="headerlink" title="1.85    浏览器历史模式设置"></a>1.85    浏览器历史模式设置</h2><p>浏览器历史记录模式</p><p>1、压栈模式 push（默认）</p><p>2、替换模式  replace</p><img src="/2022/09/03/Vue/image-20220625145012395.png" class="" title="image-20220625145012395"><p>新增该属性可切换到replace模式</p><h2 id="1-86-编程式路由导航"><a href="#1-86-编程式路由导航" class="headerlink" title="1.86    编程式路由导航"></a>1.86    编程式路由导航</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">       back()&#123;</span><br><span class="line">           // 前进</span><br><span class="line">           this.$router.back();</span><br><span class="line">       &#125;,</span><br><span class="line">       forward()&#123;</span><br><span class="line">           // 后退</span><br><span class="line">           this.$router.forward();</span><br><span class="line">       &#125;,</span><br><span class="line">       go()&#123;</span><br><span class="line">           //  前进几步为正 后退为负</span><br><span class="line">           this,$$router.go(2);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p><strong>不用route-link标签实现跳转</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">methods:&#123;</span><br><span class="line">   pushShow(m)&#123;</span><br><span class="line">       this.$router.push(&#123;</span><br><span class="line">           name:&#x27;xiangqing&#x27;,</span><br><span class="line">           query:&#123;</span><br><span class="line">               id:m.id,</span><br><span class="line">               title:m.title</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;)</span><br><span class="line">   &#125;,</span><br><span class="line">   replaceShow(m)&#123;</span><br><span class="line">       this.$router.replace(&#123;</span><br><span class="line">           name:&#x27;xiangqing&#x27;,</span><br><span class="line">           query:&#123;</span><br><span class="line">               id:m.id,</span><br><span class="line">               title:m.title</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;)</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="1-87-路由缓存"><a href="#1-87-路由缓存" class="headerlink" title="1.87    路由缓存"></a>1.87    路由缓存</h2><p>、<strong>切走页面的时候保持数据还在不会被销毁</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 保持活动标签  --&gt;</span><br><span class="line">     &lt;!-- 直缓存new组件 --&gt;</span><br><span class="line">     &lt;!-- include：是组件名 name属性的名字 --&gt;</span><br><span class="line">     &lt;keep-alive include=&quot;New&quot;&gt;</span><br><span class="line">       &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">     &lt;/keep-alive&gt;</span><br></pre></td></tr></table></figure><h2 id="1-88-两个新的生命周期钩子"><a href="#1-88-两个新的生命周期钩子" class="headerlink" title="1.88    两个新的生命周期钩子"></a>1.88    两个新的生命周期钩子</h2><p><strong>路由组件独有</strong></p><p>缓存带来的定时器无限执行</p><p>缓存的时候：</p><p>activated：激活的时候</p><p>deactivated：失活的时候</p><h2 id="1-89-全局路由守卫"><a href="#1-89-全局路由守卫" class="headerlink" title="1.89    全局路由守卫"></a>1.89    全局路由守卫</h2><p>配置</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建路由器</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueRouter</span> <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="comment">// 引入需要路由的组件</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">About</span> <span class="keyword">from</span> <span class="string">&#x27;../pages/About.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Home</span> <span class="keyword">from</span> <span class="string">&#x27;../pages/Home.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">New</span> <span class="keyword">from</span> <span class="string">&#x27;../pages/New.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Message</span> <span class="keyword">from</span> <span class="string">&#x27;../pages/Message.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Detail</span> <span class="keyword">from</span> <span class="string">&#x27;../pages/Detail.vue&#x27;</span></span><br><span class="line"><span class="comment">// 配置路由</span></span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">    <span class="attr">routes</span>:[</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;guanyu&#x27;</span>,</span><br><span class="line">            <span class="comment">// 映射地址</span></span><br><span class="line">            <span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">            <span class="comment">// 显示组件</span></span><br><span class="line">            <span class="attr">component</span>:<span class="title class_">About</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;zhuye&#x27;</span>,</span><br><span class="line">            <span class="attr">path</span>:<span class="string">&#x27;/home&#x27;</span>,</span><br><span class="line">            <span class="attr">component</span>:<span class="title class_">Home</span>,</span><br><span class="line">            <span class="attr">children</span>:[</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">path</span>:<span class="string">&#x27;news&#x27;</span>,</span><br><span class="line">                    <span class="attr">component</span>:<span class="title class_">New</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="attr">name</span>:<span class="string">&#x27;xiaoxi&#x27;</span>,</span><br><span class="line">                    <span class="attr">path</span>:<span class="string">&#x27;message&#x27;</span>,</span><br><span class="line">                    <span class="attr">component</span>:<span class="title class_">Message</span>,</span><br><span class="line">                    <span class="attr">children</span>:[</span><br><span class="line">                        &#123;</span><br><span class="line">                            <span class="attr">name</span>:<span class="string">&#x27;xiangqing&#x27;</span>,</span><br><span class="line">                            <span class="comment">// rest写法</span></span><br><span class="line">                            <span class="comment">// path:&#x27;detail/:id/:title&#x27;,</span></span><br><span class="line">                            <span class="attr">path</span>:<span class="string">&#x27;detail&#x27;</span>,</span><br><span class="line">                            <span class="attr">component</span>:<span class="title class_">Detail</span>,</span><br><span class="line">                            <span class="comment">// props:&#123;</span></span><br><span class="line">                            <span class="comment">//     a:1,</span></span><br><span class="line">                            <span class="comment">//     b:&#x27;hello&#x27;</span></span><br><span class="line">                            <span class="comment">// &#125;</span></span><br><span class="line">                            <span class="comment">// 会把路由组件收到的params参数以props传给details组件</span></span><br><span class="line">                            <span class="comment">// props:true</span></span><br><span class="line">                            <span class="comment">// 写法3</span></span><br><span class="line">                            <span class="comment">// 接收query发送的数据</span></span><br><span class="line">                            <span class="title function_">props</span>(<span class="params">$route</span>)&#123;</span><br><span class="line">                                <span class="keyword">return</span> &#123;<span class="attr">id</span>:$route.<span class="property">query</span>.<span class="property">id</span>,<span class="attr">title</span>:$route.<span class="property">query</span>.<span class="property">title</span>&#125;</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;,</span><br><span class="line">            ]</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局：在每次路由切换之前执行的函数</span></span><br><span class="line"><span class="comment">// 类似于一个拦截器</span></span><br><span class="line">router.<span class="title function_">beforeEach</span>(<span class="function">(<span class="params">to,<span class="keyword">from</span>,next</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">// to：目标路由信息</span></span><br><span class="line">    <span class="comment">// from: 出发路由信息</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;beforeEach&#x27;</span>);</span><br><span class="line">    <span class="title function_">next</span>(); <span class="comment">// 放行</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router;</span><br></pre></td></tr></table></figure><p>具体应用</p><img src="/2022/09/03/Vue/image-20220625153503250.png" class="" title="image-20220625153503250"><h2 id="1-90-后置路由守卫"><a href="#1-90-后置路由守卫" class="headerlink" title="1.90    后置路由守卫"></a>1.90    后置路由守卫</h2><p>鉴权：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">routes</span>:[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;guanyu&#x27;</span>,</span><br><span class="line">        <span class="comment">// 映射地址</span></span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;/about&#x27;</span>,</span><br><span class="line">        <span class="comment">// 显示组件</span></span><br><span class="line">        <span class="attr">component</span>:<span class="title class_">About</span>,</span><br><span class="line">        <span class="comment">// 路由源信息(权限校验)</span></span><br><span class="line">        <span class="comment">// 鉴权：to.meta.isAuth</span></span><br><span class="line">        <span class="attr">meta</span>:&#123;<span class="attr">isAuth</span>:<span class="literal">true</span>&#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 后置路由守卫(切换完成之后执行)</span></span><br><span class="line">router.<span class="title function_">afterEach</span>(<span class="function">(<span class="params">to,<span class="keyword">from</span></span>)=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="1-91-独享路由守卫（只有前置）"><a href="#1-91-独享路由守卫（只有前置）" class="headerlink" title="1.91    独享路由守卫（只有前置）"></a>1.91    独享路由守卫（只有前置）</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">children</span>:[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;xinwen&#x27;</span>,</span><br><span class="line">        <span class="attr">path</span>:<span class="string">&#x27;news&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>:<span class="title class_">New</span>,</span><br><span class="line">        <span class="comment">// 独享路由守卫</span></span><br><span class="line">        <span class="attr">beforeEnter</span>:<span class="function">(<span class="params">to,<span class="keyword">from</span>,next</span>)=&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><h2 id="1-92-组件内路由守卫"><a href="#1-92-组件内路由守卫" class="headerlink" title="1.92    组件内路由守卫"></a>1.92    组件内路由守卫</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">   &lt;h2&gt;我是About的内容&lt;/h2&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    name:&#x27;About&#x27;,</span><br><span class="line"></span><br><span class="line">    // 通过路由规则 进入该组件被调用</span><br><span class="line">    beforeRouteEnter (to, from, next) &#123;</span><br><span class="line">        // ...</span><br><span class="line">        next();</span><br><span class="line">    &#125;,</span><br><span class="line">    // 通过路由规则 离开该组件被调用</span><br><span class="line">    beforeRouteEnter (to, from, next) &#123;</span><br><span class="line">        next();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="1-93-路由器工作模式、上线基本流程"><a href="#1-93-路由器工作模式、上线基本流程" class="headerlink" title="1.93    路由器工作模式、上线基本流程"></a>1.93    路由器工作模式、上线基本流程</h2><img src="/2022/09/03/Vue/image-20220625160727587.png" class="" title="image-20220625160727587"><p>hash工作模式（有 #）（不存在该问题）</p><p>history工作模式（存在路由跳转之后刷新页面找后端映射导致访问失败）</p><img src="/2022/09/03/Vue/image-20220625155719352.png" class="" title="image-20220625155719352"><p>npm run build：打包</p><h2 id="1-94-elementUI"><a href="#1-94-elementUI" class="headerlink" title="1.94    elementUI"></a>1.94    elementUI</h2><p>引入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementUI</span> <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;element-ui/lib/theme-chalk/index.css&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">ElementUI</span>);</span><br></pre></td></tr></table></figure><p>Vue.use(ElementUI);  <em>&#x2F;&#x2F;  引入了全局样式</em></p><p>npm install babel-plugin-component -D</p><p>babel-config.js</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">module.exports = <span class="punctuation">&#123;</span></span><br><span class="line">  presets<span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    &#x27;@vue/cli-plugin-babel/preset&#x27;<span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">[</span><span class="string">&quot;@babel/preset-env&quot;</span><span class="punctuation">,</span> <span class="punctuation">&#123;</span> <span class="attr">&quot;modules&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span> <span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;plugins&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;component&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;libraryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;element-ui&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;styleLibraryName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;theme-chalk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">ElementUI</span> <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span>;</span><br><span class="line"><span class="comment">// import &#x27;element-ui/lib/theme-chalk/index.css&#x27;;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">Button</span>, <span class="title class_">Select</span>,<span class="title class_">Row</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;element-ui&#x27;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Vue.use(ElementUI);  //  引入了全局样式</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 按需引入</span></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="title class_">Button</span>.<span class="property">name</span>, <span class="title class_">Button</span>);</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="title class_">Select</span>.<span class="property">name</span>, <span class="title class_">Select</span>);</span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="title class_">Row</span>.<span class="property">name</span>, <span class="title class_">Row</span>);</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">  <span class="attr">render</span>: <span class="function"><span class="params">h</span> =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端技术 </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
